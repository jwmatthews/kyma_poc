{"version":3,"file":"static/js/107.8fb244bc.chunk.js","mappings":"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","sources":["../node_modules/@patternfly/react-core/src/components/Tabs/TabButton.tsx","../node_modules/@patternfly/react-core/src/components/Tabs/TabAction.tsx","../node_modules/@patternfly/react-core/src/components/Tabs/Tab.tsx","../node_modules/@patternfly/react-core/src/components/Tabs/TabTitleText.tsx","../node_modules/@patternfly/react-icons/dist/esm/icons/plus-icon.js","../node_modules/@patternfly/react-styles/css/components/TabContent/tab-content.mjs","../node_modules/@patternfly/react-core/src/components/Tabs/TabContent.tsx","../node_modules/@patternfly/react-core/src/components/Tabs/OverflowTab.tsx","../node_modules/@patternfly/react-core/src/components/Tabs/Tabs.tsx","../node_modules/@patternfly/react-core/src/components/Tabs/TabsContext.ts","../node_modules/@patternfly/react-core/src/components/Text/Text.tsx","../node_modules/@patternfly/react-styles/css/components/Tabs/tabs.mjs"],"sourcesContent":["import * as React from 'react';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface TabButtonProps extends Omit<React.HTMLProps<HTMLAnchorElement | HTMLButtonElement>, 'ref'>, OUIAProps {\n  /** content rendered inside the Tab content area. */\n  children?: React.ReactNode;\n  /** additional classes added to the Tab */\n  className?: string;\n  /** URL associated with the Tab. A Tab with an href will render as an <a> instead of a <button>. A Tab inside a <Tabs component=\"nav\"> should have an href. */\n  href?: string;\n  /** child reference for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentRef?: React.Ref<any>;\n  /** Parents' innerRef passed down for properly displaying Tooltips */\n  parentInnerRef?: React.Ref<any>;\n}\n\nexport const TabButton: React.FunctionComponent<TabButtonProps> = ({\n  children,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  tabContentRef,\n  ouiaId,\n  parentInnerRef,\n  ouiaSafe,\n  ...props\n}: TabButtonProps) => {\n  const Component = (props.href ? 'a' : 'button') as any;\n\n  return (\n    <Component\n      {...(!props.href && { type: 'button' })}\n      ref={parentInnerRef}\n      {...getOUIAProps(TabButton.displayName, ouiaId, ouiaSafe)}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n};\nTabButton.displayName = 'TabButton';\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { Button } from '../Button';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface TabActionProps extends Omit<React.HTMLProps<HTMLButtonElement>, 'ref' | 'type' | 'size'>, OUIAProps {\n  /** Content rendered in the tab action */\n  children?: React.ReactNode;\n  /** Additional classes added to the tab action span */\n  className?: string;\n  /** Click callback for tab action button */\n  onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  /** Flag indicating if the tab action is disabled */\n  isDisabled?: boolean;\n  /** Accessible label for the tab action */\n  'aria-label'?: string;\n  /** @hide Callback for the section ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst TabActionBase: React.FunctionComponent<TabActionProps> = ({\n  children,\n  className,\n  onClick,\n  isDisabled,\n  'aria-label': ariaLabel = 'Tab action',\n  innerRef,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ouiaId,\n  ouiaSafe,\n  ...props\n}: TabActionProps) => (\n  <span className={css(styles.tabsItemAction, className)}>\n    <Button\n      ref={innerRef}\n      type=\"button\"\n      variant=\"plain\"\n      aria-label={ariaLabel}\n      onClick={onClick}\n      isDisabled={isDisabled}\n      {...getOUIAProps(TabAction.displayName, ouiaId, ouiaSafe)}\n      {...props}\n    >\n      <span className={css(styles.tabsItemActionIcon)}>{children}</span>\n    </Button>\n  </span>\n);\n\nexport const TabAction = React.forwardRef((props: TabActionProps, ref: React.Ref<HTMLElement>) => (\n  <TabActionBase {...props} innerRef={ref} />\n));\n\nTabAction.displayName = 'TabAction';\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { OUIAProps } from '../../helpers';\nimport { TabButton } from './TabButton';\nimport { TabsContext } from './TabsContext';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { TabAction } from './TabAction';\n\nexport interface TabProps\n  extends Omit<React.HTMLProps<HTMLAnchorElement | HTMLButtonElement>, 'title' | 'action'>,\n    OUIAProps {\n  /** content rendered inside the Tab content area. */\n  children?: React.ReactNode;\n  /** additional classes added to the Tab */\n  className?: string;\n  /** URL associated with the Tab. A Tab with an href will render as an <a> instead of a <button>. A Tab inside a <Tabs component=\"nav\"> should have an href. */\n  href?: string;\n  /** Content rendered in the tab title. Should be <TabTitleText> and/or <TabTitleIcon> for proper styling. */\n  title: React.ReactNode;\n  /** uniquely identifies the tab */\n  eventKey: number | string;\n  /** child id for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentId?: string | number;\n  /** child reference for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentRef?: React.RefObject<any>;\n  /** whether to render the tab or not */\n  isHidden?: boolean;\n  /** Adds disabled styling and disables the button using the disabled html attribute */\n  isDisabled?: boolean;\n  /** Adds disabled styling and communicates that the button is disabled using the aria-disabled html attribute */\n  isAriaDisabled?: boolean;\n  /** Events to prevent when the button is in an aria-disabled state */\n  inoperableEvents?: string[];\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Optional Tooltip rendered to a Tab. Should be <Tooltip> with appropriate props for proper rendering. */\n  tooltip?: React.ReactElement<any>;\n  /** Aria-label for the close button added by passing the onClose property to Tabs. */\n  closeButtonAriaLabel?: string;\n  /** Flag indicating the close button should be disabled */\n  isCloseDisabled?: boolean;\n  /** Actions rendered beside the tab content */\n  actions?: React.ReactNode;\n  /** Value to set the data-ouia-component-id for the tab button.*/\n  ouiaId?: number | string;\n}\n\nconst TabBase: React.FunctionComponent<TabProps> = ({\n  title,\n  eventKey,\n  tabContentRef,\n  id: childId,\n  tabContentId,\n  className: childClassName = '',\n  ouiaId: childOuiaId,\n  isDisabled,\n  isAriaDisabled,\n  inoperableEvents = ['onClick', 'onKeyPress'],\n  href,\n  innerRef,\n  tooltip,\n  closeButtonAriaLabel,\n  isCloseDisabled = false,\n  actions,\n  ...props\n}: TabProps) => {\n  const preventedEvents = inoperableEvents.reduce(\n    (handlers, eventToPrevent) => ({\n      ...handlers,\n      [eventToPrevent]: (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n      }\n    }),\n    {}\n  );\n  const { mountOnEnter, localActiveKey, unmountOnExit, uniqueId, handleTabClick, handleTabClose } =\n    React.useContext(TabsContext);\n  let ariaControls = tabContentId ? `${tabContentId}` : `pf-tab-section-${eventKey}-${childId || uniqueId}`;\n  if ((mountOnEnter || unmountOnExit) && eventKey !== localActiveKey) {\n    ariaControls = undefined;\n  }\n  const isButtonElement = Boolean(!href);\n  const getDefaultTabIdx = () => {\n    if (isDisabled) {\n      return isButtonElement ? null : -1;\n    } else if (isAriaDisabled) {\n      return null;\n    }\n  };\n\n  const tabButton = (\n    <TabButton\n      parentInnerRef={innerRef}\n      className={css(\n        styles.tabsLink,\n        isDisabled && href && styles.modifiers.disabled,\n        isAriaDisabled && styles.modifiers.ariaDisabled\n      )}\n      disabled={isButtonElement ? isDisabled : null}\n      aria-disabled={isDisabled || isAriaDisabled}\n      tabIndex={getDefaultTabIdx()}\n      onClick={(event: any) => handleTabClick(event, eventKey, tabContentRef)}\n      {...(isAriaDisabled ? preventedEvents : null)}\n      id={`pf-tab-${eventKey}-${childId || uniqueId}`}\n      aria-controls={ariaControls}\n      tabContentRef={tabContentRef}\n      ouiaId={childOuiaId}\n      href={href}\n      role=\"tab\"\n      aria-selected={eventKey === localActiveKey}\n      {...props}\n    >\n      {title}\n    </TabButton>\n  );\n\n  return (\n    <li\n      className={css(\n        styles.tabsItem,\n        eventKey === localActiveKey && styles.modifiers.current,\n        (handleTabClose || actions) && styles.modifiers.action,\n        (isDisabled || isAriaDisabled) && styles.modifiers.disabled,\n        childClassName\n      )}\n      role=\"presentation\"\n    >\n      {tooltip ? <Tooltip {...tooltip.props}>{tabButton}</Tooltip> : tabButton}\n      {actions && actions}\n      {handleTabClose !== undefined && (\n        <TabAction\n          aria-label={closeButtonAriaLabel || 'Close tab'}\n          onClick={(event: any) => handleTabClose(event, eventKey, tabContentRef)}\n          isDisabled={isCloseDisabled}\n        >\n          <TimesIcon />\n        </TabAction>\n      )}\n    </li>\n  );\n};\n\nexport const Tab = React.forwardRef((props: TabProps, ref: React.Ref<any>) => <TabBase innerRef={ref} {...props} />);\nTab.displayName = 'Tab';\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\n\nexport interface TabTitleTextProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Text to be rendered inside the tab button title. */\n  children: React.ReactNode;\n  /** additional classes added to the tab title text */\n  className?: string;\n}\n\nexport const TabTitleText: React.FunctionComponent<TabTitleTextProps> = ({\n  children,\n  className = '',\n  ...props\n}: TabTitleTextProps) => (\n  <span className={css(styles.tabsItemText, className)} {...props}>\n    {children}\n  </span>\n);\nTabTitleText.displayName = 'TabTitleText';\n","import { createIcon } from '../createIcon';\n\nexport const PlusIconConfig = {\n  name: 'PlusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusIcon = createIcon(PlusIconConfig);\n\nexport default PlusIcon;","import './tab-content.css';\nexport default {\n  \"modifiers\": {\n    \"light_300\": \"pf-m-light-300\",\n    \"padding\": \"pf-m-padding\"\n  },\n  \"tabContent\": \"pf-v5-c-tab-content\",\n  \"tabContentBody\": \"pf-v5-c-tab-content__body\"\n};","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TabContent/tab-content';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\nimport { TabsContextConsumer, TabsContextProps } from './TabsContext';\n\nexport interface TabContentProps extends Omit<React.HTMLProps<HTMLElement>, 'ref'>, OUIAProps {\n  /** content rendered inside the tab content area if used outside Tabs component */\n  children?: any;\n  /** Child to show in the content area */\n  child?: React.ReactElement<any>;\n  /** class of tab content area if used outside Tabs component */\n  className?: string;\n  /** Identifies the active Tab  */\n  activeKey?: number | string;\n  /** uniquely identifies the controlling Tab if used outside Tabs component */\n  eventKey?: number | string;\n  /** @hide Callback for the section ref */\n  innerRef?: React.Ref<any>;\n  /** id passed from parent to identify the content section */\n  id: string;\n  /** title of controlling Tab if used outside Tabs component */\n  'aria-label'?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.light_300\n};\n\nconst TabContentBase: React.FunctionComponent<TabContentProps> = ({\n  id,\n  activeKey,\n  'aria-label': ariaLabel,\n  child,\n  children,\n  className,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eventKey,\n  innerRef,\n  ouiaId,\n  ouiaSafe,\n  ...props\n}: TabContentProps) => {\n  if (children || child) {\n    let labelledBy: string;\n    if (ariaLabel) {\n      labelledBy = null;\n    } else {\n      labelledBy = children ? `${id}` : `pf-tab-${child.props.eventKey}-${id}`;\n    }\n\n    return (\n      <TabsContextConsumer>\n        {({ variant }: TabsContextProps) => (\n          <section\n            ref={innerRef}\n            hidden={children ? null : child.props.eventKey !== activeKey}\n            className={\n              children\n                ? css(styles.tabContent, className, variantStyle[variant])\n                : css(styles.tabContent, child.props.className, variantStyle[variant])\n            }\n            id={children ? id : `pf-tab-section-${child.props.eventKey}-${id}`}\n            aria-label={ariaLabel}\n            aria-labelledby={labelledBy}\n            role=\"tabpanel\"\n            tabIndex={0}\n            {...getOUIAProps('TabContent', ouiaId, ouiaSafe)}\n            {...props}\n          >\n            {children || child.props.children}\n          </section>\n        )}\n      </TabsContextConsumer>\n    );\n  }\n  return null;\n};\n\nexport const TabContent = React.forwardRef((props: TabContentProps, ref: React.Ref<HTMLElement>) => (\n  <TabContentBase {...props} innerRef={ref} />\n));\n","import React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Popper } from '../../helpers';\nimport { Menu, MenuContent, MenuList, MenuItem } from '../Menu';\nimport { TabsContext } from './TabsContext';\nimport { TabProps } from './Tab';\nimport { TabTitleText } from './TabTitleText';\n\nexport interface OverflowTabProps extends React.HTMLProps<HTMLLIElement> {\n  /** Additional classes added to the overflow tab */\n  className?: string;\n  /** The tabs that should be displayed in the menu */\n  overflowingTabs?: TabProps[];\n  /** Flag which shows the count of overflowing tabs when enabled */\n  showTabCount?: boolean;\n  /** The text which displays when an overflowing tab isn't selected */\n  defaultTitleText?: string;\n  /** The aria label applied to the button which toggles the tab overflow menu */\n  toggleAriaLabel?: string;\n  /** z-index of the overflow tab */\n  zIndex?: number;\n}\n\nexport const OverflowTab: React.FunctionComponent<OverflowTabProps> = ({\n  className,\n  overflowingTabs = [],\n  showTabCount,\n  defaultTitleText = 'More',\n  toggleAriaLabel,\n  zIndex = 9999,\n  ...props\n}: OverflowTabProps) => {\n  const menuRef = React.useRef<HTMLDivElement>();\n  const overflowTabRef = React.useRef<HTMLButtonElement>();\n  const overflowLIRef = React.useRef<HTMLLIElement>();\n\n  const [isExpanded, setIsExpanded] = React.useState(false);\n\n  const { localActiveKey, handleTabClick } = React.useContext(TabsContext);\n\n  const closeMenu = () => {\n    setIsExpanded(false);\n    overflowTabRef.current.focus();\n  };\n\n  const handleMenuKeys = (ev: KeyboardEvent) => {\n    const menuContainsEventTarget = menuRef?.current?.contains(ev.target as Node);\n    if (isExpanded && menuContainsEventTarget && ev.key === 'Escape') {\n      closeMenu();\n    }\n  };\n\n  const handleClick = (ev: MouseEvent) => {\n    const clickIsOutsideMenu = !menuRef?.current?.contains(ev.target as Node);\n    const clickIsOutsideOverflowTab = !overflowTabRef?.current?.contains(ev.target as Node);\n    if (isExpanded && clickIsOutsideMenu && clickIsOutsideOverflowTab) {\n      closeMenu();\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('click', handleClick);\n    window.addEventListener('keydown', handleMenuKeys);\n\n    return () => {\n      window.removeEventListener('click', handleClick);\n      window.removeEventListener('keydown', handleMenuKeys);\n    };\n  }, [isExpanded, menuRef, overflowTabRef]);\n\n  const selectedTab = overflowingTabs.find((tab) => tab.eventKey === localActiveKey);\n  const tabTitle = selectedTab?.title ? selectedTab.title : defaultTitleText;\n\n  const toggleMenu = () => {\n    setIsExpanded((prevIsExpanded) => !prevIsExpanded);\n    setTimeout(() => {\n      if (menuRef?.current) {\n        const firstElement = menuRef.current.querySelector('li > button,input:not(:disabled)');\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n  };\n\n  const overflowTab = (\n    <li\n      className={css(styles.tabsItem, 'pf-m-overflow', selectedTab && styles.modifiers.current, className)}\n      role=\"presentation\"\n      ref={overflowLIRef}\n      {...props}\n    >\n      <button\n        type=\"button\"\n        className={css(styles.tabsLink, isExpanded && styles.modifiers.expanded)}\n        onClick={() => toggleMenu()}\n        aria-label={toggleAriaLabel}\n        aria-haspopup=\"menu\"\n        aria-expanded={isExpanded}\n        role=\"tab\"\n        ref={overflowTabRef}\n      >\n        <TabTitleText>\n          {tabTitle}\n          {showTabCount && tabTitle === defaultTitleText && ` (${overflowingTabs.length})`}\n        </TabTitleText>\n        <span className={styles.tabsLinkToggleIcon}>\n          <AngleRightIcon />\n        </span>\n      </button>\n    </li>\n  );\n\n  const tabs = overflowingTabs.map((tab) => (\n    <MenuItem key={tab.eventKey} itemId={tab.eventKey} isSelected={localActiveKey === tab.eventKey}>\n      {tab.title}\n    </MenuItem>\n  ));\n\n  const onTabSelect = (event: React.MouseEvent<HTMLElement, MouseEvent>, key: number | string) => {\n    closeMenu();\n    const selectedTabRef = overflowingTabs.find((tab) => tab.eventKey === key).tabContentRef;\n    handleTabClick(event, key, selectedTabRef);\n  };\n\n  const overflowMenu = (\n    <Menu ref={menuRef} onSelect={(ev, itemId) => onTabSelect(ev as React.MouseEvent<HTMLElement, MouseEvent>, itemId)}>\n      <MenuContent>\n        <MenuList>{tabs}</MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  return (\n    <React.Fragment>\n      {overflowTab}\n      <Popper\n        triggerRef={overflowTabRef}\n        popper={overflowMenu}\n        popperRef={menuRef}\n        isVisible={isExpanded}\n        minWidth=\"revert\"\n        appendTo={overflowLIRef.current}\n        zIndex={zIndex}\n      />\n    </React.Fragment>\n  );\n};\n\nOverflowTab.displayName = 'OverflowTab';\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabProps } from './Tab';\nimport { TabsContextProvider } from './TabsContext';\nimport { OverflowTab } from './OverflowTab';\nimport { Button } from '../Button';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\n\nexport enum TabsComponent {\n  div = 'div',\n  nav = 'nav'\n}\n\nexport interface HorizontalOverflowObject {\n  /** Flag which shows the count of overflowing tabs when enabled */\n  showTabCount?: boolean;\n  /** The text which displays when an overflowing tab isn't selected */\n  defaultTitleText?: string;\n  /** The aria label applied to the button which toggles the tab overflow menu */\n  toggleAriaLabel?: string;\n}\n\ntype TabElement = React.ReactElement<TabProps, React.JSXElementConstructor<TabProps>>;\ntype TabsChild = TabElement | boolean | null | undefined;\n\nexport interface TabsProps extends Omit<React.HTMLProps<HTMLElement | HTMLDivElement>, 'onSelect'>, OUIAProps {\n  /** Content rendered inside the tabs component. Only `Tab` components or expressions resulting in a falsy value are allowed here. */\n  children: TabsChild | TabsChild[];\n  /** Additional classes added to the tabs */\n  className?: string;\n  /** Tabs background color variant */\n  variant?: 'default' | 'light300';\n  /** The index of the active tab */\n  activeKey?: number | string;\n  /** The index of the default active tab. Set this for uncontrolled Tabs */\n  defaultActiveKey?: number | string;\n  /** Callback to handle tab selection */\n  onSelect?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** Callback to handle tab closing and adds a basic close button to all tabs. This is overridden by the tab actions property. */\n  onClose?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** Callback for the add button. Passing this property inserts the add button */\n  onAdd?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  /** Aria-label for the add button */\n  addButtonAriaLabel?: string;\n  /** Uniquely identifies the tabs */\n  id?: string;\n  /** Enables the filled tab list layout */\n  isFilled?: boolean;\n  /** Enables secondary tab styling */\n  isSecondary?: boolean;\n  /** Enables box styling to the tab component */\n  isBox?: boolean;\n  /** Enables vertical tab styling */\n  isVertical?: boolean;\n  /** Disables border bottom tab styling on tabs. Defaults to false. To remove the bottom border, set this prop to true. */\n  hasNoBorderBottom?: boolean;\n  /** @deprecated Please use backScrollAriaLabel. Aria-label for the left scroll button */\n  leftScrollAriaLabel?: string;\n  /** @deprecated Please use forwardScrollAriaLabel. Aria-label for the right scroll button */\n  rightScrollAriaLabel?: string;\n  /** Aria-label for the back scroll button */\n  backScrollAriaLabel?: string;\n  /** Aria-label for the forward scroll button */\n  forwardScrollAriaLabel?: string;\n  /** Determines what tag is used around the tabs. Use \"nav\" to define the tabs inside a navigation region */\n  component?: 'div' | 'nav';\n  /** Provides an accessible label for the tabs. Labels should be unique for each set of tabs that are present on a page. When component is set to nav, this prop should be defined to differentiate the tabs from other navigation regions on the page. */\n  'aria-label'?: string;\n  /** Waits until the first \"enter\" transition to mount tab children (add them to the DOM) */\n  mountOnEnter?: boolean;\n  /** Unmounts tab children (removes them from the DOM) when they are no longer visible */\n  unmountOnExit?: boolean;\n  /** Flag indicates that the tabs should use page insets. */\n  usePageInsets?: boolean;\n  /** Insets at various breakpoints. */\n  inset?: {\n    default?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    sm?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    md?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    lg?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    xl?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    '2xl'?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n  };\n  /** Enable expandable vertical tabs at various breakpoints. (isVertical should be set to true for this to work) */\n  expandable?: {\n    default?: 'expandable' | 'nonExpandable';\n    sm?: 'expandable' | 'nonExpandable';\n    md?: 'expandable' | 'nonExpandable';\n    lg?: 'expandable' | 'nonExpandable';\n    xl?: 'expandable' | 'nonExpandable';\n    '2xl'?: 'expandable' | 'nonExpandable';\n  };\n  /** Flag to indicate if the vertical tabs are expanded */\n  isExpanded?: boolean;\n  /** Flag indicating the default expanded state for uncontrolled expand/collapse of */\n  defaultIsExpanded?: boolean;\n  /** Text that appears in the expandable toggle */\n  toggleText?: string;\n  /** Aria-label for the expandable toggle */\n  toggleAriaLabel?: string;\n  /** Callback function to toggle the expandable tabs. */\n  onToggle?: (event: React.MouseEvent, isExpanded: boolean) => void;\n  /** Flag which places overflowing tabs into a menu triggered by the last tab. Additionally an object can be passed with custom settings for the overflow tab. */\n  isOverflowHorizontal?: boolean | HorizontalOverflowObject;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\n\ninterface TabsState {\n  /** Used to signal if the scroll buttons should be used  */\n  enableScrollButtons: boolean;\n  /** Used to control if the scroll buttons should be shown to the user via the pf-m-scrollable class */\n  showScrollButtons: boolean;\n  /** Used to control if the scroll buttons should be rendered. Rendering must occur before the scroll buttons are\n   * shown and rendering must be stopped after they stop being shown to preserve CSS transitions.\n   */\n  renderScrollButtons: boolean;\n  disableBackScrollButton: boolean;\n  disableForwardScrollButton: boolean;\n  shownKeys: (string | number)[];\n  uncontrolledActiveKey: number | string;\n  uncontrolledIsExpandedLocal: boolean;\n  ouiaStateId: string;\n  overflowingTabCount: number;\n}\n\nclass Tabs extends React.Component<TabsProps, TabsState> {\n  static displayName = 'Tabs';\n  tabList = React.createRef<HTMLUListElement>();\n  leftScrollButtonRef = React.createRef<HTMLButtonElement>();\n  private direction = 'ltr';\n  constructor(props: TabsProps) {\n    super(props);\n    this.state = {\n      enableScrollButtons: false,\n      showScrollButtons: false,\n      renderScrollButtons: false,\n      disableBackScrollButton: true,\n      disableForwardScrollButton: true,\n      shownKeys: this.props.defaultActiveKey !== undefined ? [this.props.defaultActiveKey] : [this.props.activeKey], // only for mountOnEnter case\n      uncontrolledActiveKey: this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName),\n      overflowingTabCount: 0\n    };\n\n    if (this.props.isVertical && this.props.expandable !== undefined) {\n      if (!this.props.toggleAriaLabel && !this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error(\n          'Tabs:',\n          'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible'\n        );\n      }\n    }\n  }\n\n  scrollTimeout: NodeJS.Timeout = null;\n\n  static defaultProps: PickOptional<TabsProps> = {\n    activeKey: 0,\n    onSelect: () => undefined as any,\n    isFilled: false,\n    isSecondary: false,\n    isVertical: false,\n    isBox: false,\n    hasNoBorderBottom: false,\n    leftScrollAriaLabel: 'Scroll left',\n    backScrollAriaLabel: 'Scroll back',\n    rightScrollAriaLabel: 'Scroll right',\n    forwardScrollAriaLabel: 'Scroll forward',\n    component: TabsComponent.div,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    ouiaSafe: true,\n    variant: 'default',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (_event: React.MouseEvent, _isExpanded: boolean): void => undefined\n  };\n\n  handleTabClick(\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef: React.RefObject<any>\n  ) {\n    const { shownKeys } = this.state;\n    const { onSelect, defaultActiveKey } = this.props;\n    // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n    if (defaultActiveKey !== undefined) {\n      this.setState({\n        uncontrolledActiveKey: eventKey\n      });\n    } else {\n      onSelect(event, eventKey);\n    }\n\n    // process any tab content sections outside of the component\n    if (tabContentRef) {\n      React.Children.toArray(this.props.children)\n        .filter((child): child is TabElement => React.isValidElement(child))\n        .filter(({ props }) => props.tabContentRef && props.tabContentRef.current)\n        .forEach((child) => (child.props.tabContentRef.current.hidden = true));\n      // most recently selected tabContent\n      if (tabContentRef.current) {\n        tabContentRef.current.hidden = false;\n      }\n    }\n    if (this.props.mountOnEnter) {\n      this.setState({\n        shownKeys: shownKeys.concat(eventKey)\n      });\n    }\n  }\n\n  countOverflowingElements = (container: HTMLUListElement) => {\n    const elements = Array.from(container.children);\n    return elements.filter((element) => !isElementInView(container, element as HTMLElement, false)).length;\n  };\n\n  handleScrollButtons = () => {\n    const { isOverflowHorizontal: isOverflowHorizontal } = this.props;\n    // add debounce to the scroll event\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(() => {\n      const container = this.tabList.current;\n      let disableBackScrollButton = true;\n      let disableForwardScrollButton = true;\n      let enableScrollButtons = false;\n      let overflowingTabCount = 0;\n\n      if (container && !this.props.isVertical && !isOverflowHorizontal) {\n        // get first element and check if it is in view\n        const overflowOnLeft = !isElementInView(container, container.firstChild as HTMLElement, false);\n\n        // get last element and check if it is in view\n        const overflowOnRight = !isElementInView(container, container.lastChild as HTMLElement, false);\n\n        enableScrollButtons = overflowOnLeft || overflowOnRight;\n\n        disableBackScrollButton = !overflowOnLeft;\n        disableForwardScrollButton = !overflowOnRight;\n      }\n\n      if (isOverflowHorizontal) {\n        overflowingTabCount = this.countOverflowingElements(container);\n      }\n\n      this.setState({\n        enableScrollButtons,\n        disableBackScrollButton,\n        disableForwardScrollButton,\n        overflowingTabCount\n      });\n    }, 100);\n  };\n\n  scrollBack = () => {\n    // find first Element that is fully in view on the left, then scroll to the element before it\n    if (this.tabList.current) {\n      const container = this.tabList.current;\n      const childrenArr = Array.from(container.children);\n      let firstElementInView: any;\n      let lastElementOutOfView: any;\n      let i;\n      for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          firstElementInView = childrenArr[i];\n          lastElementOutOfView = childrenArr[i - 1];\n        }\n      }\n      if (lastElementOutOfView) {\n        if (this.direction === 'ltr') {\n          // LTR scrolls left to go back\n          container.scrollLeft -= lastElementOutOfView.scrollWidth;\n        } else {\n          // RTL scrolls right to go back\n          container.scrollLeft += lastElementOutOfView.scrollWidth;\n        }\n      }\n    }\n  };\n\n  scrollForward = () => {\n    // find last Element that is fully in view on the right, then scroll to the element after it\n    if (this.tabList.current) {\n      const container = this.tabList.current as any;\n      const childrenArr = Array.from(container.children);\n      let lastElementInView: any;\n      let firstElementOutOfView: any;\n      for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          lastElementInView = childrenArr[i];\n          firstElementOutOfView = childrenArr[i + 1];\n        }\n      }\n      if (firstElementOutOfView) {\n        if (this.direction === 'ltr') {\n          // LTR scrolls right to go forward\n          container.scrollLeft += firstElementOutOfView.scrollWidth;\n        } else {\n          // RTL scrolls left to go forward\n          container.scrollLeft -= firstElementOutOfView.scrollWidth;\n        }\n      }\n    }\n  };\n\n  hideScrollButtons = () => {\n    const { enableScrollButtons, renderScrollButtons, showScrollButtons } = this.state;\n    if (!enableScrollButtons && !showScrollButtons && renderScrollButtons) {\n      this.setState({ renderScrollButtons: false });\n    }\n  };\n\n  componentDidMount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.addEventListener('resize', this.handleScrollButtons, false);\n      }\n      this.direction = getComputedStyle(this.tabList.current).getPropertyValue('direction');\n      // call the handle resize function to check if scroll buttons should be shown\n      this.handleScrollButtons();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.removeEventListener('resize', this.handleScrollButtons, false);\n      }\n    }\n    clearTimeout(this.scrollTimeout);\n    this.leftScrollButtonRef.current?.removeEventListener('transitionend', this.hideScrollButtons);\n  }\n\n  componentDidUpdate(prevProps: TabsProps, prevState: TabsState) {\n    const { activeKey, mountOnEnter, isOverflowHorizontal, children } = this.props;\n    const { shownKeys, overflowingTabCount, enableScrollButtons } = this.state;\n    if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n      this.setState({\n        shownKeys: shownKeys.concat(activeKey)\n      });\n    }\n\n    if (\n      prevProps.children &&\n      children &&\n      React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length\n    ) {\n      this.handleScrollButtons();\n    }\n\n    const currentOverflowingTabCount = this.countOverflowingElements(this.tabList.current);\n    if (isOverflowHorizontal && currentOverflowingTabCount) {\n      this.setState({ overflowingTabCount: currentOverflowingTabCount + overflowingTabCount });\n    }\n\n    if (!prevState.enableScrollButtons && enableScrollButtons) {\n      this.setState({ renderScrollButtons: true });\n      setTimeout(() => {\n        this.leftScrollButtonRef.current?.addEventListener('transitionend', this.hideScrollButtons);\n        this.setState({ showScrollButtons: true });\n      }, 100);\n    } else if (prevState.enableScrollButtons && !enableScrollButtons) {\n      this.setState({ showScrollButtons: false });\n    }\n\n    this.direction = getComputedStyle(this.tabList.current).getPropertyValue('direction');\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      activeKey,\n      defaultActiveKey,\n      id,\n      isFilled,\n      isSecondary,\n      isVertical,\n      isBox,\n      hasNoBorderBottom,\n      leftScrollAriaLabel,\n      rightScrollAriaLabel,\n      backScrollAriaLabel,\n      forwardScrollAriaLabel,\n      'aria-label': ariaLabel,\n      component,\n      ouiaId,\n      ouiaSafe,\n      mountOnEnter,\n      unmountOnExit,\n      usePageInsets,\n      inset,\n      variant,\n      expandable,\n      isExpanded,\n      defaultIsExpanded,\n      toggleText,\n      toggleAriaLabel,\n      addButtonAriaLabel,\n      onToggle,\n      onClose,\n      onAdd,\n      isOverflowHorizontal: isOverflowHorizontal,\n      ...props\n    } = this.props;\n    const {\n      showScrollButtons,\n      renderScrollButtons,\n      disableBackScrollButton,\n      disableForwardScrollButton,\n      shownKeys,\n      uncontrolledActiveKey,\n      uncontrolledIsExpandedLocal,\n      overflowingTabCount\n    } = this.state;\n    const filteredChildren = React.Children.toArray(children)\n      .filter((child): child is TabElement => React.isValidElement(child))\n      .filter(({ props }) => !props.isHidden);\n\n    const filteredChildrenWithoutOverflow = filteredChildren.slice(0, filteredChildren.length - overflowingTabCount);\n    const filteredChildrenOverflowing = filteredChildren.slice(filteredChildren.length - overflowingTabCount);\n    const overflowingTabProps = filteredChildrenOverflowing.map((child: React.ReactElement<TabProps>) => child.props);\n\n    const uniqueId = id || getUniqueId();\n    const Component: any = component === TabsComponent.nav ? 'nav' : 'div';\n    const localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n\n    const isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n    /*  Uncontrolled expandable tabs */\n    const toggleTabs = (event: React.MouseEvent, newValue: boolean) => {\n      if (isExpanded === undefined) {\n        this.setState({ uncontrolledIsExpandedLocal: newValue });\n      } else {\n        onToggle(event, newValue);\n      }\n    };\n\n    const hasOverflowTab = isOverflowHorizontal && overflowingTabCount > 0;\n    const overflowObjectProps = typeof isOverflowHorizontal === 'object' ? { ...isOverflowHorizontal } : {};\n\n    return (\n      <TabsContextProvider\n        value={{\n          variant,\n          mountOnEnter,\n          unmountOnExit,\n          localActiveKey,\n          uniqueId,\n          handleTabClick: (...args) => this.handleTabClick(...args),\n          handleTabClose: onClose\n        }}\n      >\n        <Component\n          aria-label={ariaLabel}\n          className={css(\n            styles.tabs,\n            isFilled && styles.modifiers.fill,\n            isSecondary && styles.modifiers.secondary,\n            isVertical && styles.modifiers.vertical,\n            isVertical && expandable && formatBreakpointMods(expandable, styles),\n            isVertical && expandable && isExpandedLocal && styles.modifiers.expanded,\n            isBox && styles.modifiers.box,\n            showScrollButtons && styles.modifiers.scrollable,\n            usePageInsets && styles.modifiers.pageInsets,\n            hasNoBorderBottom && styles.modifiers.noBorderBottom,\n            formatBreakpointMods(inset, styles),\n            variantStyle[variant],\n            hasOverflowTab && styles.modifiers.overflow,\n            className\n          )}\n          {...getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          id={id && id}\n          {...props}\n        >\n          {expandable && isVertical && (\n            <GenerateId>\n              {(randomId) => (\n                <div className={css(styles.tabsToggle)}>\n                  <div className={css(styles.tabsToggleButton)}>\n                    <Button\n                      onClick={(event) => toggleTabs(event, !isExpandedLocal)}\n                      variant=\"plain\"\n                      aria-label={toggleAriaLabel}\n                      aria-expanded={isExpandedLocal}\n                      id={`${randomId}-button`}\n                      aria-labelledby={`${randomId}-text ${randomId}-button`}\n                    >\n                      <span className={css(styles.tabsToggleIcon)}>\n                        <AngleRightIcon arian-hidden=\"true\" />\n                      </span>\n                      {toggleText && (\n                        <span className={css(styles.tabsToggleText)} id={`${randomId}-text`}>\n                          {toggleText}\n                        </span>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </GenerateId>\n          )}\n          {renderScrollButtons && (\n            <button\n              type=\"button\"\n              className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n              aria-label={backScrollAriaLabel || leftScrollAriaLabel}\n              onClick={this.scrollBack}\n              disabled={disableBackScrollButton}\n              aria-hidden={disableBackScrollButton}\n              ref={this.leftScrollButtonRef}\n            >\n              <AngleLeftIcon />\n            </button>\n          )}\n          <ul className={css(styles.tabsList)} ref={this.tabList} onScroll={this.handleScrollButtons} role=\"tablist\">\n            {isOverflowHorizontal ? filteredChildrenWithoutOverflow : filteredChildren}\n            {hasOverflowTab && <OverflowTab overflowingTabs={overflowingTabProps} {...overflowObjectProps} />}\n          </ul>\n          {renderScrollButtons && (\n            <button\n              type=\"button\"\n              className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n              aria-label={forwardScrollAriaLabel || rightScrollAriaLabel}\n              onClick={this.scrollForward}\n              disabled={disableForwardScrollButton}\n              aria-hidden={disableForwardScrollButton}\n            >\n              <AngleRightIcon />\n            </button>\n          )}\n          {onAdd !== undefined && (\n            <span className={css(styles.tabsAdd)}>\n              <Button variant=\"plain\" aria-label={addButtonAriaLabel || 'Add tab'} onClick={onAdd}>\n                <PlusIcon />\n              </Button>\n            </span>\n          )}\n        </Component>\n        {filteredChildren\n          .filter(\n            (child) =>\n              child.props.children &&\n              !(unmountOnExit && child.props.eventKey !== localActiveKey) &&\n              !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1)\n          )\n          .map((child) => (\n            <TabContent\n              key={child.props.eventKey}\n              activeKey={localActiveKey}\n              child={child}\n              id={child.props.id || uniqueId}\n              ouiaId={child.props.ouiaId}\n            />\n          ))}\n      </TabsContextProvider>\n    );\n  }\n}\n\nexport { Tabs };\n","import * as React from 'react';\n\nexport interface TabsContextProps {\n  variant: 'default' | 'light300';\n  mountOnEnter: boolean;\n  unmountOnExit: boolean;\n  localActiveKey: string | number;\n  uniqueId: string;\n  handleTabClick: (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef: React.RefObject<any>\n  ) => void;\n  handleTabClose?: (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef?: React.RefObject<any>\n  ) => void;\n}\n\nexport const TabsContext = React.createContext<TabsContextProps>({\n  variant: 'default',\n  mountOnEnter: false,\n  unmountOnExit: false,\n  localActiveKey: '',\n  uniqueId: '',\n  handleTabClick: () => null,\n  handleTabClose: undefined\n});\n\nexport const TabsContextProvider = TabsContext.Provider;\nexport const TabsContextConsumer = TabsContext.Consumer;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\nexport enum TextVariants {\n  h1 = 'h1',\n  h2 = 'h2',\n  h3 = 'h3',\n  h4 = 'h4',\n  h5 = 'h5',\n  h6 = 'h6',\n  p = 'p',\n  a = 'a',\n  small = 'small',\n  blockquote = 'blockquote',\n  pre = 'pre'\n}\n\nexport interface TextProps extends React.HTMLProps<HTMLElement>, OUIAProps {\n  /** The text component */\n  component?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'a' | 'small' | 'blockquote' | 'pre';\n  /** Content rendered within the Text */\n  children?: React.ReactNode;\n  /** Additional classes added to the Text */\n  className?: string;\n  /** Flag to indicate the link has visited styles applied if the browser determines the link has been visited */\n  isVisitedLink?: boolean;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport const Text: React.FunctionComponent<TextProps> = ({\n  children = null,\n  className = '',\n  component = TextVariants.p,\n  isVisitedLink = false,\n  ouiaId,\n  ouiaSafe = true,\n  ...props\n}: TextProps) => {\n  const Component: any = component;\n  const ouiaProps = useOUIAProps(Text.displayName, ouiaId, ouiaSafe);\n\n  return (\n    <Component\n      {...ouiaProps}\n      {...props}\n      data-pf-content\n      className={css(isVisitedLink && component === TextVariants.a && styles.modifiers.visited, className)}\n    >\n      {children}\n    </Component>\n  );\n};\nText.displayName = 'Text';\n","import './tabs.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"modifiers\": {\n    \"fill\": \"pf-m-fill\",\n    \"scrollable\": \"pf-m-scrollable\",\n    \"noBorderBottom\": \"pf-m-no-border-bottom\",\n    \"box\": \"pf-m-box\",\n    \"vertical\": \"pf-m-vertical\",\n    \"current\": \"pf-m-current\",\n    \"colorSchemeLight_300\": \"pf-m-color-scheme--light-300\",\n    \"expandable\": \"pf-m-expandable\",\n    \"nonExpandable\": \"pf-m-non-expandable\",\n    \"expandableOnSm\": \"pf-m-expandable-on-sm\",\n    \"nonExpandableOnSm\": \"pf-m-non-expandable-on-sm\",\n    \"expandableOnMd\": \"pf-m-expandable-on-md\",\n    \"nonExpandableOnMd\": \"pf-m-non-expandable-on-md\",\n    \"expandableOnLg\": \"pf-m-expandable-on-lg\",\n    \"nonExpandableOnLg\": \"pf-m-non-expandable-on-lg\",\n    \"expandableOnXl\": \"pf-m-expandable-on-xl\",\n    \"nonExpandableOnXl\": \"pf-m-non-expandable-on-xl\",\n    \"expandableOn_2xl\": \"pf-m-expandable-on-2xl\",\n    \"nonExpandableOn_2xl\": \"pf-m-non-expandable-on-2xl\",\n    \"expanded\": \"pf-m-expanded\",\n    \"secondary\": \"pf-m-secondary\",\n    \"pageInsets\": \"pf-m-page-insets\",\n    \"overflow\": \"pf-m-overflow\",\n    \"action\": \"pf-m-action\",\n    \"active\": \"pf-m-active\",\n    \"disabled\": \"pf-m-disabled\",\n    \"ariaDisabled\": \"pf-m-aria-disabled\",\n    \"insetNone\": \"pf-m-inset-none\",\n    \"insetSm\": \"pf-m-inset-sm\",\n    \"insetMd\": \"pf-m-inset-md\",\n    \"insetLg\": \"pf-m-inset-lg\",\n    \"insetXl\": \"pf-m-inset-xl\",\n    \"inset_2xl\": \"pf-m-inset-2xl\",\n    \"insetNoneOnSm\": \"pf-m-inset-none-on-sm\",\n    \"insetSmOnSm\": \"pf-m-inset-sm-on-sm\",\n    \"insetMdOnSm\": \"pf-m-inset-md-on-sm\",\n    \"insetLgOnSm\": \"pf-m-inset-lg-on-sm\",\n    \"insetXlOnSm\": \"pf-m-inset-xl-on-sm\",\n    \"inset_2xlOnSm\": \"pf-m-inset-2xl-on-sm\",\n    \"insetNoneOnMd\": \"pf-m-inset-none-on-md\",\n    \"insetSmOnMd\": \"pf-m-inset-sm-on-md\",\n    \"insetMdOnMd\": \"pf-m-inset-md-on-md\",\n    \"insetLgOnMd\": \"pf-m-inset-lg-on-md\",\n    \"insetXlOnMd\": \"pf-m-inset-xl-on-md\",\n    \"inset_2xlOnMd\": \"pf-m-inset-2xl-on-md\",\n    \"insetNoneOnLg\": \"pf-m-inset-none-on-lg\",\n    \"insetSmOnLg\": \"pf-m-inset-sm-on-lg\",\n    \"insetMdOnLg\": \"pf-m-inset-md-on-lg\",\n    \"insetLgOnLg\": \"pf-m-inset-lg-on-lg\",\n    \"insetXlOnLg\": \"pf-m-inset-xl-on-lg\",\n    \"inset_2xlOnLg\": \"pf-m-inset-2xl-on-lg\",\n    \"insetNoneOnXl\": \"pf-m-inset-none-on-xl\",\n    \"insetSmOnXl\": \"pf-m-inset-sm-on-xl\",\n    \"insetMdOnXl\": \"pf-m-inset-md-on-xl\",\n    \"insetLgOnXl\": \"pf-m-inset-lg-on-xl\",\n    \"insetXlOnXl\": \"pf-m-inset-xl-on-xl\",\n    \"inset_2xlOnXl\": \"pf-m-inset-2xl-on-xl\",\n    \"insetNoneOn_2xl\": \"pf-m-inset-none-on-2xl\",\n    \"insetSmOn_2xl\": \"pf-m-inset-sm-on-2xl\",\n    \"insetMdOn_2xl\": \"pf-m-inset-md-on-2xl\",\n    \"insetLgOn_2xl\": \"pf-m-inset-lg-on-2xl\",\n    \"insetXlOn_2xl\": \"pf-m-inset-xl-on-2xl\",\n    \"inset_2xlOn_2xl\": \"pf-m-inset-2xl-on-2xl\"\n  },\n  \"tabs\": \"pf-v5-c-tabs\",\n  \"tabsAdd\": \"pf-v5-c-tabs__add\",\n  \"tabsItem\": \"pf-v5-c-tabs__item\",\n  \"tabsItemAction\": \"pf-v5-c-tabs__item-action\",\n  \"tabsItemActionIcon\": \"pf-v5-c-tabs__item-action-icon\",\n  \"tabsItemIcon\": \"pf-v5-c-tabs__item-icon\",\n  \"tabsItemText\": \"pf-v5-c-tabs__item-text\",\n  \"tabsLink\": \"pf-v5-c-tabs__link\",\n  \"tabsLinkToggleIcon\": \"pf-v5-c-tabs__link-toggle-icon\",\n  \"tabsList\": \"pf-v5-c-tabs__list\",\n  \"tabsScrollButton\": \"pf-v5-c-tabs__scroll-button\",\n  \"tabsToggle\": \"pf-v5-c-tabs__toggle\",\n  \"tabsToggleButton\": \"pf-v5-c-tabs__toggle-button\",\n  \"tabsToggleIcon\": \"pf-v5-c-tabs__toggle-icon\",\n  \"tabsToggleText\": \"pf-v5-c-tabs__toggle-text\",\n  \"themeDark\": \"pf-v5-theme-dark\"\n};"],"names":["TabButton","_a","children","tabContentRef","ouiaId","parentInnerRef","ouiaSafe","props","__rest","Component","href","React","Object","assign","type","ref","getOUIAProps","displayName","TabActionBase","className","onClick","isDisabled","ariaLabel","innerRef","css","styles","tabsItemAction","Button","variant","TabAction","tabsItemActionIcon","TabBase","title","eventKey","id","childId","tabContentId","childClassName","childOuiaId","isAriaDisabled","inoperableEvents","tooltip","closeButtonAriaLabel","isCloseDisabled","actions","preventedEvents","reduce","handlers","eventToPrevent","event","preventDefault","mountOnEnter","localActiveKey","unmountOnExit","uniqueId","handleTabClick","handleTabClose","TabsContext","ariaControls","concat","undefined","isButtonElement","Boolean","tabButton","tabsLink","modifiers","disabled","ariaDisabled","tabIndex","role","tabsItem","current","action","Tooltip","TimesIcon","Tab","TabTitleText","tabsItemText","createIcon","name","height","width","svgPath","yOffset","xOffset","variantStyle","default","light300","light_300","TabContentBase","activeKey","child","labelledBy","TabsContextConsumer","_ref","hidden","TabContent","OverflowTab","overflowingTabs","showTabCount","defaultTitleText","toggleAriaLabel","zIndex","menuRef","overflowTabRef","overflowLIRef","isExpanded","setIsExpanded","closeMenu","focus","handleMenuKeys","ev","menuContainsEventTarget","contains","target","key","handleClick","clickIsOutsideMenu","clickIsOutsideOverflowTab","_b","window","addEventListener","removeEventListener","selectedTab","find","tab","tabTitle","overflowTab","expanded","prevIsExpanded","setTimeout","firstElement","querySelector","length","tabsLinkToggleIcon","AngleRightIcon","tabs","map","MenuItem","itemId","isSelected","overflowMenu","Menu","onSelect","onTabSelect","selectedTabRef","MenuContent","MenuList","Popper","triggerRef","popper","popperRef","isVisible","minWidth","appendTo","TabsComponent","colorSchemeLight_300","Tabs","constructor","super","tabList","leftScrollButtonRef","direction","scrollTimeout","countOverflowingElements","container","Array","from","filter","element","isElementInView","handleScrollButtons","isOverflowHorizontal","this","clearTimeout","disableBackScrollButton","disableForwardScrollButton","enableScrollButtons","overflowingTabCount","isVertical","overflowOnLeft","firstChild","overflowOnRight","lastChild","setState","scrollBack","childrenArr","firstElementInView","lastElementOutOfView","i","scrollLeft","scrollWidth","scrollForward","lastElementInView","firstElementOutOfView","hideScrollButtons","renderScrollButtons","showScrollButtons","state","shownKeys","defaultActiveKey","uncontrolledActiveKey","uncontrolledIsExpandedLocal","defaultIsExpanded","ouiaStateId","getDefaultOUIAId","expandable","toggleText","console","error","toArray","forEach","componentDidMount","canUseDOM","getComputedStyle","getPropertyValue","componentWillUnmount","componentDidUpdate","prevProps","prevState","indexOf","currentOverflowingTabCount","render","_this","isFilled","isSecondary","isBox","hasNoBorderBottom","leftScrollAriaLabel","rightScrollAriaLabel","backScrollAriaLabel","forwardScrollAriaLabel","component","usePageInsets","inset","addButtonAriaLabel","onToggle","onClose","onAdd","filteredChildren","_ref2","isHidden","filteredChildrenWithoutOverflow","slice","overflowingTabProps","getUniqueId","nav","isExpandedLocal","toggleTabs","newValue","hasOverflowTab","overflowObjectProps","TabsContextProvider","value","arguments","fill","secondary","vertical","formatBreakpointMods","box","scrollable","pageInsets","noBorderBottom","overflow","GenerateId","randomId","tabsToggle","tabsToggleButton","tabsToggleIcon","tabsToggleText","tabsScrollButton","buttonStyles","AngleLeftIcon","tabsList","onScroll","tabsAdd","PlusIcon","defaultProps","div","_event","_isExpanded","Provider","Consumer","TextVariants","Text","p","isVisitedLink","ouiaProps","useOUIAProps","a","visited"],"sourceRoot":""}