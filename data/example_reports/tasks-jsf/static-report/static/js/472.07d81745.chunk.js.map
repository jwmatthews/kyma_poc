{"version":3,"file":"static/js/472.07d81745.chunk.js","mappings":"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","sources":["../node_modules/@patternfly/react-styles/css/layouts/Gallery/gallery.mjs","../node_modules/@patternfly/react-core/src/layouts/Gallery/Gallery.tsx","../node_modules/@patternfly/react-core/src/layouts/Gallery/GalleryItem.tsx","../node_modules/@patternfly/react-icons/dist/esm/icons/info-alt-icon.js","pages/application-details/pages/technologies/technologies.tsx","../node_modules/@patternfly/react-core/src/components/EmptyState/EmptyState.tsx","../node_modules/@patternfly/react-core/src/components/EmptyState/EmptyStateIcon.tsx","../node_modules/@patternfly/react-styles/css/components/EmptyState/empty-state.mjs"],"sourcesContent":["import './gallery.css';\nexport default {\n  \"gallery\": \"pf-v5-l-gallery\",\n  \"modifiers\": {\n    \"gutter\": \"pf-m-gutter\"\n  }\n};","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Gallery/gallery';\n\nexport interface GalleryProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the Gallery layout */\n  children?: React.ReactNode;\n  /** additional classes added to the Gallery layout */\n  className?: string;\n  /** Adds space between children. */\n  hasGutter?: boolean;\n  /** Minimum widths at various breakpoints. */\n  minWidths?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Maximum widths at various breakpoints. */\n  maxWidths?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Sets the base component to render. defaults to div */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n}\nexport const Gallery: React.FunctionComponent<GalleryProps> = ({\n  children = null,\n  className = '',\n  component = 'div',\n  hasGutter = false,\n  minWidths,\n  maxWidths,\n  ...props\n}: GalleryProps) => {\n  const minWidthStyles: any = {};\n  const Component: any = component;\n\n  if (minWidths) {\n    Object.entries(minWidths || {}).map(\n      ([breakpoint, value]) =>\n        (minWidthStyles[\n          `--pf-v5-l-gallery--GridTemplateColumns--min${breakpoint !== 'default' ? `-on-${breakpoint}` : ''}`\n        ] = value)\n    );\n  }\n  const maxWidthStyles: any = {};\n  if (maxWidths) {\n    Object.entries(maxWidths || {}).map(\n      ([breakpoint, value]) =>\n        (maxWidthStyles[\n          `--pf-v5-l-gallery--GridTemplateColumns--max${breakpoint !== 'default' ? `-on-${breakpoint}` : ''}`\n        ] = value)\n    );\n  }\n  const widthStyles = { ...minWidthStyles, ...maxWidthStyles };\n\n  return (\n    <Component\n      className={css(styles.gallery, hasGutter && styles.modifiers.gutter, className)}\n      {...props}\n      {...((minWidths || maxWidths) && { style: { ...widthStyles, ...props.style } as React.CSSProperties })}\n    >\n      {children}\n    </Component>\n  );\n};\nGallery.displayName = 'Gallery';\n","import * as React from 'react';\n\nexport interface GalleryItemProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the Gallery Item */\n  children?: React.ReactNode;\n  /** Sets the base component to render. defaults to div */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n}\n\nexport const GalleryItem: React.FunctionComponent<GalleryItemProps> = ({\n  children = null,\n  component = 'div',\n  ...props\n}: GalleryItemProps) => {\n  const Component: any = component;\n\n  return <Component {...props}>{children}</Component>;\n};\nGalleryItem.displayName = 'GalleryItem';\n","import { createIcon } from '../createIcon';\n\nexport const InfoAltIconConfig = {\n  name: 'InfoAltIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M592,369 L592,289 C592.013862,284.755109 590.320137,280.682962 587.3,277.7 C584.338831,274.647672 580.252355,272.947987 576,273 L464,273 C459.755109,272.986138 455.682962,274.679863 452.7,277.7 C449.647672,280.661169 447.947987,284.747645 447.99884,289 L447.99884,369 C447.986138,373.244891 449.679863,377.317038 452.7,380.3 C455.661169,383.352328 459.747645,385.052013 464,385 L576,385 C580.244891,385.013862 584.317038,383.320137 587.3,380.3 C590.359349,377.343612 592.060354,373.253963 592,369 Z M592,705 L592,465 C592,456.163444 584.836556,449 576,449 L432,449 C423.163444,449 416,456.163444 416,465 L416,497 C416,505.836556 423.163444,513 432,513 L448,513 L448,705 L416,705 C407.163444,705 400,712.163444 400,721 L400,753 C400,761.836556 407.163444,769 416,769 L624,769 C632.836556,769 640,761.836556 640,753 L640,721 C640,712.163444 632.836556,705 624,705 L592,705 Z M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 Z M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const InfoAltIcon = createIcon(InfoAltIconConfig);\n\nexport default InfoAltIcon;","import { useMemo } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Divider,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Gallery,\n  GalleryItem,\n  PageSection,\n  Title,\n} from \"@patternfly/react-core\";\nimport InfoAltIcon from \"@patternfly/react-icons/dist/esm/icons/info-alt-icon\";\nimport { Table, Tbody, Td, Tr } from \"@patternfly/react-table\";\n\n\nimport { ApplicationProcessed } from \"@app/models/api-enriched\";\n\nimport { TagDto } from \"@app/api/report\";\n\nexport const Technologies: React.FC = () => {\n  const application = useOutletContext<ApplicationProcessed | null>();\n\n  const allTags: TagDto[] = useMemo(() => application?.tags || [], [application])\n\n  const tagsByCategory: {[key: string]: string[]} = allTags.reduce<{[key: string]: string[]}>((acc, tag) => {\n    acc[tag.category.name] = acc[tag.category.name] ? [...acc[tag.category.name], tag.name] : [tag.name];\n    return acc\n  }, {})\n\n  return (\n    <>\n      <PageSection>\n        <Gallery hasGutter minWidths={{ md: \"400px\" }}>\n          {Object.entries(tagsByCategory).map(([category, tags], index) => (\n            <GalleryItem key={index}>\n              <Card isFullHeight>\n                <CardTitle>\n                  {category}\n                </CardTitle>\n                <Divider />\n                <CardBody>\n                  <Table variant=\"compact\" borders={false}>\n                    <Tbody>\n                      {tags.length > 0 ? (\n                        tags.map(\n                          (value, tagIndex) => (\n                            <Tr key={tagIndex}>\n                              <Td>{value}</Td>\n                            </Tr>\n                          )\n                        )\n                      ) : (\n                        <EmptyState variant={EmptyStateVariant.sm}>\n                          <EmptyStateIcon icon={InfoAltIcon} />\n                          <Title headingLevel=\"h4\" size=\"md\">\n                            No data to show\n                          </Title>\n                        </EmptyState>\n                      )}\n                    </Tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </GalleryItem>\n          ))}\n        </Gallery>\n      </PageSection>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\n\nexport enum EmptyStateVariant {\n  'xs' = 'xs',\n  sm = 'sm',\n  lg = 'lg',\n  'xl' = 'xl',\n  full = 'full'\n}\n\nexport interface EmptyStateProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the empty state */\n  className?: string;\n  /** Content rendered inside the empty state */\n  children: React.ReactNode;\n  /** Modifies empty state max-width and sizes of icon, title and body */\n  variant?: 'xs' | 'sm' | 'lg' | 'xl' | 'full';\n  /** Cause component to consume the available height of its container */\n  isFullHeight?: boolean;\n}\n\nexport const EmptyState: React.FunctionComponent<EmptyStateProps> = ({\n  children,\n  className,\n  variant = EmptyStateVariant.full,\n  isFullHeight,\n  ...props\n}: EmptyStateProps) => (\n  <div\n    className={css(\n      styles.emptyState,\n      variant === 'xs' && styles.modifiers.xs,\n      variant === 'sm' && styles.modifiers.sm,\n      variant === 'lg' && styles.modifiers.lg,\n      variant === 'xl' && styles.modifiers.xl,\n      isFullHeight && styles.modifiers.fullHeight,\n      className\n    )}\n    {...props}\n  >\n    <div className={css(styles.emptyStateContent)}>{children}</div>\n  </div>\n);\nEmptyState.displayName = 'EmptyState';\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nimport { Spinner } from '../Spinner';\n\nexport interface IconProps extends Omit<React.HTMLProps<SVGElement>, 'size'> {\n  /** Changes the color of the icon.  */\n  color?: string;\n}\n\nexport interface EmptyStateIconProps extends IconProps {\n  /** Additional classes added to the empty state icon */\n  className?: string;\n  /** Icon component to be rendered. Can also be a spinner component */\n  icon: React.ComponentType<any>;\n}\n\nconst isSpinner = (icon: React.ReactElement<any>) => icon.type === Spinner;\n\nexport const EmptyStateIcon: React.FunctionComponent<EmptyStateIconProps> = ({\n  className,\n  icon: IconComponent,\n  color,\n  ...props\n}: EmptyStateIconProps) => {\n  const iconIsSpinner = isSpinner(<IconComponent />);\n  return (\n    <div\n      className={css(styles.emptyStateIcon)}\n      {...(color &&\n        !iconIsSpinner && { style: { ['--pf-v5-c-empty-state__icon--Color']: color } as React.CSSProperties })}\n    >\n      <IconComponent className={className} aria-hidden={!iconIsSpinner} {...props} />\n    </div>\n  );\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';\n","import './empty-state.css';\nexport default {\n  \"emptyState\": \"pf-v5-c-empty-state\",\n  \"emptyStateActions\": \"pf-v5-c-empty-state__actions\",\n  \"emptyStateBody\": \"pf-v5-c-empty-state__body\",\n  \"emptyStateContent\": \"pf-v5-c-empty-state__content\",\n  \"emptyStateFooter\": \"pf-v5-c-empty-state__footer\",\n  \"emptyStateIcon\": \"pf-v5-c-empty-state__icon\",\n  \"emptyStateTitleText\": \"pf-v5-c-empty-state__title-text\",\n  \"modifiers\": {\n    \"xs\": \"pf-m-xs\",\n    \"sm\": \"pf-m-sm\",\n    \"lg\": \"pf-m-lg\",\n    \"xl\": \"pf-m-xl\",\n    \"fullHeight\": \"pf-m-full-height\"\n  }\n};"],"names":["Gallery","_a","children","className","component","hasGutter","minWidths","maxWidths","props","__rest","minWidthStyles","Component","Object","entries","map","_ref","breakpoint","value","concat","maxWidthStyles","_ref2","widthStyles","assign","React","css","styles","gutter","style","displayName","GalleryItem","createIcon","name","height","width","svgPath","yOffset","xOffset","Technologies","application","useOutletContext","tagsByCategory","useMemo","tags","reduce","acc","tag","category","_jsx","_Fragment","PageSection","md","index","_jsxs","Card","isFullHeight","CardTitle","Divider","CardBody","Table","variant","borders","Tbody","length","tagIndex","Tr","Td","EmptyState","EmptyStateVariant","sm","EmptyStateIcon","icon","InfoAltIcon","Title","headingLevel","size","full","emptyState","modifiers","xs","lg","xl","fullHeight","emptyStateContent","IconComponent","color","iconIsSpinner","type","Spinner","emptyStateIcon"],"sourceRoot":""}