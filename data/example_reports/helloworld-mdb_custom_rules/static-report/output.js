
window["apps"] = [{"id":"0000","name":"helloworld-mdb","rulesets":[{"description":"This ruleset detects logging configurations that may be problematic when migrating an application to a cloud environment.","unmatched":["embedded-cache-libraries-01000","embedded-cache-libraries-01000","embedded-cache-libraries-01000","embedded-cache-libraries-01000","embedded-cache-libraries-02000","embedded-cache-libraries-02000","embedded-cache-libraries-02000","embedded-cache-libraries-02000","embedded-cache-libraries-03000","embedded-cache-libraries-03000","embedded-cache-libraries-03000","embedded-cache-libraries-03000","embedded-cache-libraries-04000","embedded-cache-libraries-04000","embedded-cache-libraries-04000","embedded-cache-libraries-04000","embedded-cache-libraries-05000","embedded-cache-libraries-05000","embedded-cache-libraries-05000","embedded-cache-libraries-05000","embedded-cache-libraries-06000","embedded-cache-libraries-06000","embedded-cache-libraries-06000","embedded-cache-libraries-06000","embedded-cache-libraries-07000","embedded-cache-libraries-07000","embedded-cache-libraries-07000","embedded-cache-libraries-07000","embedded-cache-libraries-08000","embedded-cache-libraries-08000","embedded-cache-libraries-08000","embedded-cache-libraries-08000","embedded-cache-libraries-09000","embedded-cache-libraries-09000","embedded-cache-libraries-09000","embedded-cache-libraries-09000","embedded-cache-libraries-10000","embedded-cache-libraries-10000","embedded-cache-libraries-10000","embedded-cache-libraries-10000","embedded-cache-libraries-11000","embedded-cache-libraries-11000","embedded-cache-libraries-11000","embedded-cache-libraries-11000","embedded-cache-libraries-12000","embedded-cache-libraries-12000","embedded-cache-libraries-12000","embedded-cache-libraries-12000","embedded-cache-libraries-13000","embedded-cache-libraries-13000","embedded-cache-libraries-13000","embedded-cache-libraries-13000","embedded-cache-libraries-14000","embedded-cache-libraries-14000","embedded-cache-libraries-14000","embedded-cache-libraries-14000","embedded-cache-libraries-15000","embedded-cache-libraries-15000","embedded-cache-libraries-15000","embedded-cache-libraries-15000","embedded-cache-libraries-16000","embedded-cache-libraries-16000","java-corba-00000","java-rmi-00000","java-rmi-00000","java-rmi-00000","java-rmi-00000","java-rmi-00001","java-rmi-00001","java-rmi-00001","java-rmi-00001","java-rpc-00000","java-rpc-00000","jca-00000","jca-00000","jni-native-code-00000","jni-native-code-00000","jni-native-code-00001","local-storage-00001","local-storage-00001","local-storage-00002","local-storage-00002","local-storage-00003","local-storage-00003","local-storage-00004","local-storage-00004","local-storage-00005","local-storage-00005","local-storage-00006","localhost-http-00001","localhost-jdbc-00002","localhost-ws-00003","logging-0000","logging-0000","logging-0000","logging-0000","logging-0001","logging-0001","logging-0001","logging-0001","mail-00000","mail-00000","session-00000","session-00000","session-00001","session-00001","socket-communication-00000","socket-communication-00000","socket-communication-00001","socket-communication-00001"]},{"name":"azure/springboot","description":"Recommend OpenFeign instead of Feign.","skipped":["azure-aws-config-credential-01000","azure-aws-config-region-02000","azure-aws-config-s3-03000","azure-aws-config-secret-manager-05000","azure-aws-config-sqs-04000","azure-file-system-01000","azure-file-system-02000","azure-file-system-03000","azure-java-version-01000","azure-java-version-02000","azure-logging-0000","azure-os-specific-00001","azure-os-specific-00002","azure-password-01000","eap-to-azure-appservice-certificates-001","eap-to-azure-appservice-datasource-driver-01000","eap-to-azure-appservice-environment-variables-001","eap-to-azure-appservice-pom-001","spring-boot-to-azure-cache-redis-01000","spring-boot-to-azure-config-server-01000","spring-boot-to-azure-database-jdbc-01000","spring-boot-to-azure-database-mongodb-02000","spring-boot-to-azure-eureka-01000","spring-boot-to-azure-feign-01000","spring-boot-to-azure-identity-provider-01000","spring-boot-to-azure-java-fx-01000","spring-boot-to-azure-jks-01000","spring-boot-to-azure-jms-broker-01000","spring-boot-to-azure-mq-config-artemis-01000","spring-boot-to-azure-mq-config-kafka-01000","spring-boot-to-azure-mq-config-rabbitmq-01000","spring-boot-to-azure-port-01000","spring-boot-to-azure-schedule-job-01000","spring-boot-to-azure-static-content-01000","spring-boot-to-azure-swing-01000","spring-boot-to-azure-system-config-01000","spring-boot-to-azure-version-01000","spring-boot-to-azure-version-02000","spring-boot-to-azure-version-03000","spring-boot-to-azure-zipkin-01000","spring-cloud-to-azure-version-01000","spring-cloud-to-azure-version-02000","spring-cloud-to-azure-version-03000","tomcat-to-azure-external-resources-01000"]},{"name":"camel3","description":"Rules for changes between Camel 3.0 and Camel 4.0","skipped":["xml-changedcomponent-camel4-00001","xml-changedcomponent-camel4-00002","xml-removed-camel4-00001","xml-removed-camel4-00002","xml-removed-camel4-00003","xml-removed-camel4-00004","xml-removed-camel4-00005","xml-removed-camel4-00006","xml-removed-camel4-00007","xml-removed-camel4-00008","xml-removed-camel4-00010","xml-removed-camel4-00011","xml-removed-camel4-00012","xml-removed-camel4-00013","xml-removed-camel4-00014","xml-removed-camel4-00015","xml-removed-camel4-00016","xml-removed-camel4-00017","xml-removed-camel4-00018","xml-removed-camel4-00019","xml-removed-camel4-00020","xml-removed-camel4-00021","xml-removed-camel4-00022","xml-removed-camel4-00023","xml-removed-camel4-00024","xml-removed-camel4-00025","xml-removed-camel4-00026","xml-removed-camel4-00027","xml-removed-camel4-00028","xml-removed-camel4-00029","xml-removed-camel4-00030","xml-removed-camel4-00031","xml-removed-camel4-00032","xml-removed-camel4-00033","xml-removed-camel4-00034"]},{"name":"camel3/camel2","description":"Rules for changes in XML file (e.g. pom.xml) to run on Apache Camel 3","skipped":["component-changes-00019","java-dsl-changes-00001","java-generic-information-00000","java-generic-information-00001","java-generic-information-00002","java-generic-information-00004","java-generic-information-00005","java-generic-information-00006","java-generic-information-00008","java-generic-information-00009","java-generic-information-00010","java-generic-information-00011","java-generic-information-00012","java-generic-information-00013","java-generic-information-00014","java-generic-information-00015","java-generic-information-00016","java-generic-information-00017","java-generic-information-00018","java-generic-information-00019","java-generic-information-00021","java-generic-information-00022","java-generic-information-00023","java-generic-information-00024","java-generic-information-00025","java-generic-information-00026","java-generic-information-00027","java-generic-information-00028","java-generic-information-00029","java-generic-information-00030","java-generic-information-00031","java-generic-information-00032","java-generic-information-00033","java-generic-information-00045","java-generic-information-00046","java-generic-information-00047","java-generic-information-00048","java-generic-information-00049","java-generic-information-00050","java-generic-information-00051","java-generic-information-00052","java-multiple-camelcontexts-per-application-not-supported-00000","java-multiple-camelcontexts-per-application-not-supported-00001","xml-dsl-changes-00001","xml-dsl-changes-00002","xml-dsl-changes-00003","xml-dsl-changes-00004","xml-dsl-changes-00005","xml-dsl-changes-00006","xml-dsl-changes-00007","xml-dsl-changes-00008","xml-dsl-changes-00009","xml-java-versions-00001","xml-java-versions-00002","xml-java-versions-00003","xml-moved-components-00012","xml-moved-components-00013","xml-moved-components-00014","xml-moved-components-00015","xml-removed-components-00000","xml-removed-components-00001","xml-removed-components-00002","xml-removed-components-00003","xml-removed-components-00004","xml-removed-components-00005","xml-removed-components-00005-01","xml-removed-components-00006","xml-removed-components-00007","xml-removed-components-00007-01","xml-removed-components-00008","xml-removed-components-00008-01","xml-renamed-components-00000","xml-renamed-components-00001","xml-renamed-components-000019","xml-renamed-components-00002","xml-renamed-components-000020","xml-renamed-components-000023","xml-renamed-components-000024","xml-renamed-components-000027","xml-renamed-components-000028","xml-renamed-components-000029","xml-renamed-components-00003","xml-renamed-components-00004","xml-renamed-components-00005","xml-renamed-components-00006","xml-renamed-components-00007","xml-renamed-components-00008","xml-renamed-components-00009","xml-renamed-components-00010","xml-renamed-components-00011","xml-renamed-components-00012","xml-renamed-components-00013","xml-renamed-components-00014","xml-renamed-components-00015","xml-renamed-components-00016","xml-renamed-components-00017","xml-renamed-components-00018","xml-renamed-components-00021","xml-renamed-components-00022","xml-renamed-components-00025","xml-renamed-components-00026"]},{"name":"discovery-rules","tags":["EJB XML","Java Source","Maven XML","Spring XML"],"unmatched":["discover-license","discover-manifest-file","discover-properties-file","hardcoded-ip-address","windup-discover-jpa-configuration","windup-discover-web-configuration"]},{"name":"droolsjbpm","description":"This ruleset provides help for migrating to a unified KIE (Knowledge Is Everything) API in the upgrade from version 5 to 6.","skipped":["kie-api-01000","kie-api-01001","kie-api-01002","kie-api-01003","kie-api-01004","kie-api-01005","kie-api-01006","kie-api-01007","kie-api-01008","kie-api-01009","kie-api-01010","kie-api-01011","kie-api-01012","kie-api-01013","kie-api-01014","kie-api-01015","kie-api-01016"]},{"name":"eap6/java-ee/seam","description":"This ruleset provides generic migration knowledge from the Seam 2 UI controls to pure JSF 2 UI Controls","skipped":["commonj-01000","commonj-02000","commonj-03000","commonj-04000","commonj-05000","commonj-06000","commonj-07000","eap4-eap6-25000","eap4-eap6-26000","eap4-eap6-27000","eap4-eap6-28000","eap4-eap6-29000","eap4-eap6-30000","eap4-eap6-31000","eap4-eap6-32000","eap4-eap6-33000","eap4-eap6-34000","eap4-eap6-35000","eap4-eap6-36000","eap4-eap6-37000","eap4-eap6-38000","eap4-eap6-39000","eap4-eap6-40000","eap4-eap6-41000","eap4-eap6-42000","environment-dependent-calls-01000","environment-dependent-calls-02000","environment-dependent-calls-03000","environment-dependent-calls-03500","environment-dependent-calls-04000","environment-dependent-calls-04001","environment-dependent-calls-05000","generic-catchall-00000","generic-catchall-00001","generic-catchall-00002","generic-catchall-00003","generic-catchall-00100","generic-catchall-00200","generic-catchall-00300","generic-catchall-00400","generic-catchall-00500","generic-catchall-00600","generic-catchall-00700","generic-catchall-00900","java-ee-jaxrpc-00000","jboss-eap5-7-xml-10000","jboss-eap5-java-01000","jboss-eap5-java-02000","jboss-eap5-java-04000","jboss-eap5-java-05000","jboss-eap5-java-06000","jboss-eap5-java-07000","jboss-eap5-java-08000","jboss-eap5-java-08100","jboss-eap5-java-08200","jboss-eap5-java-08300","jboss-eap5-java-08400","jboss-eap5-java-08500","jboss-eap5-java-08600","jboss-eap5-java-08700","jboss-eap5-java-08800","jboss-eap5-java-08900","jboss-eap5-java-09000","jboss-eap5-java-09100","jboss-eap5-xml-01000","jboss-eap5-xml-03000","jboss-eap5-xml-05000","jboss-eap5-xml-06000","jboss-eap5-xml-07000","jboss-eap5-xml-08000","jboss-eap5-xml-09000","jboss-eap5-xml-11000","jboss-eap5-xml-12000","jboss-eap5-xml-13000","jboss-eap5-xml-14000","jboss-eap5-xml-16000","jboss-eap5-xml-17000","jboss-eap5-xml-18000","jboss-eap5-xml-20000","jotm-00001","jrun-catchall-00000","jrun-catchall-00001","jsp-01000","log4j-01000","log4j-02000","log4j-03000","resteasy-eap5-000001","seam-java-00000","seam-java-00010","seam-java-00030","seam-java-00040","seam-java-00050","seam-java-00060","seam-java-00061","seam-java-00070","seam-java-00071","seam-java-00080","seam-java-00090","seam-java-00091","seam-java-00100","seam-java-00110","seam-java-00120","seam-java-00130","seam-java-00140","seam-java-00150","seam-java-00160","seam-java-00170","seam-java-00180","seam-java-00190","seam-java-00200","seam-java-00210","seam-java-00220","seam-java-00230","seam-java-00240","seam-java-00250","seam-java-00260","seam-java-00270","seam-ui-jsf-00001","seam-ui-jsf-00001-01","seam-ui-jsf-00002","seam-ui-jsf-01000","seam-ui-jsf-01001","seam-ui-jsf-01002","seam-ui-jsf-01003","seam-ui-jsf-01004","seam-ui-jsf-01005","seam-ui-jsf-01006","seam-ui-jsf-01007","seam-ui-jsf-01008","seam-ui-jsf-01009","seam-ui-jsf-01010","seam-ui-jsf-01011","seam-ui-jsf-01012","seam-ui-jsf-01013","seam-ui-jsf-01014","seam-ui-jsf-01015","seam-ui-jsf-01016","seam-ui-jsf-01017","seam-ui-jsf-01018","seam-ui-jsf-01019","seam-ui-jsf-01020","seam-ui-jsf-01021","seam-ui-jsf-01022","seam-ui-jsf-01023","seam-ui-jsf-01024","seam-ui-jsf-01025","seam-ui-jsf-01026","seam-ui-jsf-01027","seam-ui-jsf-01028","seam-ui-jsf-01029","weblogic-01000","weblogic-016000","weblogic-017000","weblogic-02000","weblogic-03000","weblogic-04000","weblogic-05000","weblogic-06000","weblogic-07000","weblogic-08000","weblogic-09000","weblogic-10000","weblogic-11000","weblogic-12000","weblogic-13000","weblogic-15000","weblogic-catchall-01000","weblogic-catchall-02000","weblogic-catchall-03000","weblogic-catchall-06000","weblogic-catchall-06500","weblogic-ejb-01000","weblogic-ejb-02000","weblogic-ejb-03000","weblogic-ejb-04000","weblogic-jms-00000","weblogic-jms-01000","weblogic-jms-02000","weblogic-jms-03000","weblogic-jms-04000","weblogic-jms-05000","weblogic-jms-06000","weblogic-jms-07000","weblogic-jms-08000","weblogic-services-01000","weblogic-services-02000","weblogic-services-03000","weblogic-webapp-01000","weblogic-webapp-02000","weblogic-webapp-03000","weblogic-webapp-04000","weblogic-webapp-05000","weblogic-webapp-06000","weblogic-webapp-07000","weblogic-webapp-08000","weblogic-webapp-09000","weblogic-webservices-01000","weblogic-webservices-02000","weblogic-webservices-03000","weblogic-webservices-04000","weblogic-webservices-05000","weblogic-webservices-06000","weblogic-webservices-07000","weblogic-xml-descriptor-01000","weblogic-xml-descriptor-02000","weblogic-xml-descriptor-03000","weblogic-xml-descriptor-04000","weblogic-xml-descriptor-06001","weblogic-xml-descriptor-07000","weblogic-xml-descriptor-08000","weblogic-xml-descriptor-09000","weblogic-xml-descriptor-10000","weblogic-xml-descriptor-11000","weblogic-xml-descriptor-12000","weblogic-xml-descriptor-14000","weblogic-xml-descriptor-15000","weblogic-xml-descriptor-16000","weblogic-xml-descriptor-17000","weblogic-xml-descriptor-18000","weblogic-xml-descriptor-19000","websphere-catchall-00000","websphere-catchall-00001","websphere-catchall-db2-00000","websphere-jms-00000","websphere-jms-01000","websphere-jms-02000","websphere-jms-02500","websphere-jms-03000","websphere-jms-04000","websphere-mq-00000","websphere-mq-01000","websphere-mq-02000","websphere-mqe-00000","websphere-mqe-01000","websphere-mqe-02000","websphere-mqe-03000","websphere-mqe-04000","websphere-other-01000","websphere-other-02000","websphere-xml-01000","websphere-xml-02000","websphere-xml-03500","websphere-xml-06000","websphere-xml-07000","websphere-xml-08000","websphere-xml-09000","xml-glassfish-02000","xml-glassfish-03000","xml-jrun-01000","xml-jrun-02000","xml-orion-01000","xml-orion-02000","xml-orion-03000","xml-resin-01000","xml-webservices-01000","xml-webservices-02000","xml-webservices-03000","xml-webservices-04000","xml-webservices-05000","xml-webservices-06000","xml-webservices-06001","xml-webservices-07000","xml-webservices-08000","xml-webservices-09000","xml-webservices-10000"]},{"name":"eap7/weblogic/tests/data","unmatched":["maven-javax-to-jakarta-00001","maven-javax-to-jakarta-00002","maven-javax-to-jakarta-00003","maven-javax-to-jakarta-00004","maven-javax-to-jakarta-00005","maven-javax-to-jakarta-00006","maven-javax-to-jakarta-00007","maven-javax-to-jakarta-00008","maven-javax-to-jakarta-00010","maven-javax-to-jakarta-00011","maven-javax-to-jakarta-00012","maven-javax-to-jakarta-00013","maven-javax-to-jakarta-00014","maven-javax-to-jakarta-00015","maven-javax-to-jakarta-00016","maven-javax-to-jakarta-00017"],"skipped":["base64-01000","deprecated-singletonpolicy-00001","eap6-08000","eap6-08001","eap6-08002","eap6-11000","eap6-12000","eap6-xml-05000","eap6-xml-06000","eap7-websphere-xml-01000","eap7-websphere-xml-02000","eap7-websphere-xml-03500","eap7-websphere-xml-06000","eap7-websphere-xml-07000","eap7-websphere-xml-08000","eap7-websphere-xml-09000","embedded-framework-libraries-01000","embedded-framework-libraries-02000","embedded-framework-libraries-04000","embedded-framework-libraries-05000","embedded-framework-libraries-06000","hibernate4-00001","hibernate4-00002","hibernate4-00003","hibernate4-00004","hibernate4-00005","hibernate4-00006","hibernate4-00007","hibernate4-00008","hibernate4-00009","hibernate4-00010","hibernate4-00011","hibernate4-00012","hibernate4-00013","hibernate4-00014","hibernate4-00015","hibernate4-00016","hibernate4-00017","hibernate4-00018","hibernate4-00021","hibernate4-00022","hibernate4-00023","hibernate4-00024","hibernate4-00025","hibernate4-00026","hibernate4-00027","hibernate4-00028","hibernate4-00030","hibernate4-00031","hibernate4-00032","hibernate4-00033","hibernate4-00034","hibernate4-00035","hibernate4-00036","hibernate4-00037","hibernate4-00038","hibernate4-00039","hibernate4-00040","hibernate4-xml-00001","hibernate4-xml-00002","hibernate4-xml-00003","hibernate4-xml-00004","hibernate4-xml-00005","hibernate50-51-00000","hibernate50-51-00100","hibernate51-53-00001","hibernate51-53-00100","hibernate51-53-00300","hibernate51-53-00400","hibernate51-53-00401","hibernate51-53-00402","hibernate51-53-00403","hibernate51-53-00404","hibernate51-53-00405","hibernate51-53-00406","hibernate51-53-00407","hibernate51-53-00500","hibernate51-53-00600","hibernate51-53-00700","hibernate51-53-00701","hibernate51-53-00702","hibernate51-53-00800","hibernate51-53-01000","hibernate51-53-01001","hibernate51-53-01100","hibernate51-53-01200","hsearch-00000","hsearch-00001","hsearch-00002","hsearch-00003","hsearch-00004","hsearch-00005","hsearch-00006","hsearch-00007","hsearch-00008","hsearch-00009","hsearch-00010","hsearch-00011","hsearch-00100","hsearch-00101","hsearch-00103","hsearch-00104","hsearch-00106","hsearch-00107","hsearch-00108","hsearch-00109","hsearch-00110","hsearch-00111","hsearch-00112","hsearch-00113","hsearch-00114","hsearch-00115","hsearch-00116","hsearch-00117","hsearch-00118","hsearch-00119","hsearch-00200","hsearch-00201","hsearch-00210","hsearch-00211","hsearch-00213","hsearch-00214","hsearch-00215","hsearch-00216","hsearch-00217","hsearch-00218","hsearch-00219","hsearch-00220","hsearch-00221","hsearch-00222","hsearch-00224","hsearch-00225","hsearch-00226","hsearch-00227","hsearch-00228","hsearch-00229","hsearch-00230","hsearch-00231","hsearch-00232","hsearch-00233","hsearch-00234","hsearch-00235","hsearch-00236","hsearch-00237","hsearch-00238","hsearch-00239","hsearch-00240","jax-ws-00000","jaxrpc-00000","jboss-eap4and5to6and7-java-01000","jboss-eap4and5to6and7-java-02000","jboss-eap4and5to6and7-java-03000","jboss-eap4and5to6and7-xml-01000","jboss-eap4and5to6and7-xml-02000","jboss-eap4and5to6and7-xml-03000","jboss-eap4and5to6and7-xml-04000","jboss-eap4and5to6and7-xml-05000","jboss-eap4and5to6and7-xml-06000","jboss-eap4and5to6and7-xml-07000","jboss-eap5-7-java-02000","jboss-eap5-7-java-03000","jboss-eap5-7-java-05000","jboss-eap5-7-java-06000","jboss-eap5-7-java-07000","jboss-eap5-7-java-08000","jboss-eap5-7-java-08100","jboss-eap5-7-java-08200","jboss-eap5-7-java-08300","jboss-eap5-7-java-08400","jboss-eap5-7-java-08500","jboss-eap5-7-java-08600","jboss-eap5-7-java-08700","jboss-eap5-7-java-08800","jboss-eap5-7-java-08900","jboss-eap5-7-java-09000","jboss-eap5-7-java-09100","jboss-eap5-7-xml-01000","jboss-eap5-7-xml-10000","jboss-eap5-7-xml-13000","jboss-eap5-7-xml-14000","jboss-eap5-7-xml-16000","jboss-eap5and6to7-java-01000","jboss-eap5and6to7-java-02000","jboss-eap5and6to7-java-03000","jboss-eap5and6to7-java-04000","jboss-eap5and6to7-java-05000","jboss-eap5and6to7-java-06000","jboss-eap5and6to7-java-07000","jboss-eap5and6to7-java-08000","jboss-eap5and6to7-java-09000","jboss-eap5and6to7-xml-05000","jboss-eap5and6to7-xml-06000","jboss-eap5and6to7-xml-07000","jboss-eap5and6to7-xml-09000","jboss-eap5and6to7-xml-12000","jboss-eap5and6to7-xml-17000","jboss-eap5and6to7-xml-18000","jboss-eap5and6to7-xml-31000","jboss-eap5and6to7-xml-31500","jboss-eap5and6to7-xml-32000","jboss-eap5and6to7-xml-33000","jboss-eap5and6to7-xml-34000","jboss-eap5and6to7-xml-37000","jboss-eap5and6to7-xml-38000","jboss-eap5and6to7-xml-38001","jboss-eap5and6to7-xml-38002","jboss-eap5and6to7-xml-38003","jboss-eap5and6to7-xml-38004","jboss-eap5and6to7-xml-38005","jboss-eap5and6to7-xml-38006","jboss-eap5and6to7-xml-38007","jboss-eap5and6to7-xml-39000","jboss-eap5and6to7-xml-40000","maven-artemis-jms-client-00001","maven-jboss-rmi-api_1.0_spec-00001","microprofile_removed_from_eap-00001","microprofile_removed_from_eap-00001-01","microprofile_removed_from_eap-00002","microprofile_removed_from_eap-00003","microprofile_removed_from_eap-00004","move-to-microprofile-rest-client-1.3-00001","picketlink25-00000","resteasy-eap5and6to7-000018","resteasy-eap6-000001","resteasy-eap6-000002","resteasy-eap6-000003","resteasy-eap6-000004","resteasy-eap6-000005","resteasy-eap6-000006","resteasy-eap6-000007","resteasy-eap6-000008","resteasy-eap6-000009","resteasy-eap6-000010","resteasy-eap6-000011","resteasy-eap6-000012","resteasy-eap6-000013","resteasy-eap6-000014","resteasy-eap6-000015","resteasy-eap6-000017","resteasy-eap6-000019","resteasy-eap6-000020","resteasy-eap6-000021","resteasy-eap6-000022","resteasy-eap6-000023","resteasy-eap6-000024","resteasy-eap6-000025","resteasy-eap6-000029","resteasy-eap6-000030","resteasy-eap6-000032","resteasy-eap6-000101","resteasy-eap6-000103","resteasy-eap6-000104","resteasy-eap6-000105","resteasy-eap6-000106","resteasy-eap6-000107","resteasy-eap6-000118","resteasy-eap6-000119","resteasy-eap6-000120","resteasy-eap6-000121","resteasy-eap6-000122","resteasy-eap6-000123","resteasy-eap6-000125","resteasy-eap6-000126","resteasy-eap6-000127","resteasy-eap6-000128","resteasy-eap6-000129","resteasy-eap6-000130","resteasy-eap6-000131","resteasy-eap6-000140","resteasy-eap6-000141","resteasy-eap6-000142","resteasy30-36-00001","singleton-sessionbean-00001","weblogic-eap7-01000","weblogic-eap7-016000","weblogic-eap7-017000","weblogic-eap7-02000","weblogic-eap7-03000","weblogic-eap7-04000","weblogic-eap7-05000","weblogic-eap7-06000","weblogic-eap7-07000","weblogic-eap7-08000","weblogic-eap7-09000","weblogic-eap7-10000","weblogic-eap7-11000","weblogic-eap7-12000","weblogic-eap7-13000","weblogic-eap7-15000","weblogic-jms-eap7-00000","weblogic-jms-eap7-01000","weblogic-jms-eap7-02000","weblogic-jms-eap7-03000","weblogic-jms-eap7-04000","weblogic-jms-eap7-05000","weblogic-jms-eap7-06000","weblogic-jms-eap7-07000","weblogic-jms-eap7-08000","weblogic-services-eap7-01000","weblogic-services-eap7-02000","weblogic-services-eap7-03000","weblogic-webapp-eap7-01000","weblogic-webapp-eap7-02000","weblogic-webapp-eap7-03000","weblogic-webapp-eap7-04000","weblogic-webapp-eap7-05000","weblogic-webapp-eap7-06000","weblogic-webapp-eap7-07000","weblogic-webapp-eap7-08000","weblogic-webapp-eap7-09000","weblogic-webservices-07000","weblogic-webservices-eap7-01000","weblogic-webservices-eap7-02000","weblogic-webservices-eap7-03000","weblogic-webservices-eap7-04000","weblogic-webservices-eap7-05000","weblogic-webservices-eap7-06000","weblogic-xml-descriptor-19000","weblogic-xml-descriptor-eap7-01000","weblogic-xml-descriptor-eap7-02000","weblogic-xml-descriptor-eap7-03000","weblogic-xml-descriptor-eap7-04000","weblogic-xml-descriptor-eap7-06001","weblogic-xml-descriptor-eap7-07000","weblogic-xml-descriptor-eap7-08000","weblogic-xml-descriptor-eap7-09000","weblogic-xml-descriptor-eap7-10000","weblogic-xml-descriptor-eap7-11000","weblogic-xml-descriptor-eap7-12000","weblogic-xml-descriptor-eap7-14000","weblogic-xml-descriptor-eap7-15000","weblogic-xml-descriptor-eap7-16000","weblogic-xml-descriptor-eap7-17000","weblogic-xml-descriptor-eap7-18000","websphere-jms-eap7-00000","websphere-jms-eap7-01000","websphere-jms-eap7-02000","websphere-jms-eap7-02500","websphere-jms-eap7-03000","websphere-jms-eap7-04000","websphere-mq-eap7-00000","websphere-mq-eap7-01000","websphere-mq-eap7-02000","websphere-mqe-eap7-00000","websphere-mqe-eap7-01000","websphere-mqe-eap7-02000","websphere-mqe-eap7-03000","websphere-mqe-eap7-04000","websphere-other-eap7-01000","websphere-other-eap7-02000","ws-security-00000","ws-security-00001","ws-security-00002"]},{"name":"eap8/eap7","description":"This ruleset provides analysis of Java EE applications that need to change certain CDI-related method calls.","violations":{"javaee-to-jakarta-namespaces-00001":{"description":"Replace the Java EE namespace, schemaLocation and version with the Jakarta equivalent","category":"mandatory","labels":["konveyor.io/source","konveyor.io/target=eap","konveyor.io/target=eap8","konveyor.io/target=jakarta-ee","konveyor.io/target=jakarta-ee9+"],"incidents":[{"uri":"file:///tmp/source-code/src/main/webapp/WEB-INF/beans.xml","message":"Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number ","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003c!-- Marker file indicating CDI should be enabled --\u003e\n 19  \u003cbeans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 20      xsi:schemaLocation=\"\n 21        http://xmlns.jcp.org/xml/ns/javaee\n 22        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 23      bean-discovery-mode=\"all\"\u003e\n 24  \u003c/beans\u003e\n","lineNumber":19,"variables":{"matchingText":"http://xmlns.jcp.org/xml/ns/javaee"}},{"uri":"file:///tmp/source-code/src/main/webapp/WEB-INF/beans.xml","message":"Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number ","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003c!-- Marker file indicating CDI should be enabled --\u003e\n 19  \u003cbeans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 20      xsi:schemaLocation=\"\n 21        http://xmlns.jcp.org/xml/ns/javaee\n 22        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 23      bean-discovery-mode=\"all\"\u003e\n 24  \u003c/beans\u003e\n","lineNumber":21,"variables":{"matchingText":"http://xmlns.jcp.org/xml/ns/javaee"}},{"uri":"file:///tmp/source-code/src/main/webapp/WEB-INF/beans.xml","message":"Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number ","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003c!-- Marker file indicating CDI should be enabled --\u003e\n 19  \u003cbeans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 20      xsi:schemaLocation=\"\n 21        http://xmlns.jcp.org/xml/ns/javaee\n 22        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 23      bean-discovery-mode=\"all\"\u003e\n 24  \u003c/beans\u003e\n","lineNumber":22,"variables":{"matchingText":"http://xmlns.jcp.org/xml/ns/javaee"}}],"links":[{"url":"https://jakarta.ee/xml/ns/jakartaee/#10","title":"Jakarta EE XML Schemas"}],"Extras":null,"effort":1},"javaee-to-jakarta-namespaces-00006":{"description":"Replace the Java EE XSD with the Jakarta equivalent","category":"mandatory","labels":["konveyor.io/source","konveyor.io/target=eap","konveyor.io/target=eap8","konveyor.io/target=jakarta-ee","konveyor.io/target=jakarta-ee9+"],"incidents":[{"uri":"file:///tmp/source-code/src/main/webapp/WEB-INF/beans.xml","message":"Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version attribute to `\"3.0\"`","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003c!-- Marker file indicating CDI should be enabled --\u003e\n 19  \u003cbeans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 20      xsi:schemaLocation=\"\n 21        http://xmlns.jcp.org/xml/ns/javaee\n 22        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 23      bean-discovery-mode=\"all\"\u003e\n 24  \u003c/beans\u003e\n","lineNumber":22,"variables":{"matchingText":"beans_1_1.xsd"}}],"links":[{"url":"https://jakarta.ee/xml/ns/jakartaee/#9","title":"Jakarta XML Schemas"}],"Extras":null,"effort":1},"javax-to-jakarta-import-00001":{"description":"javax.{renamed} has been replaced by jakarta.{renamed}","category":"mandatory","labels":["konveyor.io/source","konveyor.io/target=eap","konveyor.io/target=eap8","konveyor.io/target=jakarta-ee","konveyor.io/target=jakarta-ee9+"],"incidents":[{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"Replace the `javax.ejb` import statement with `jakarta.ejb` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":20,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.ejb.ActivationConfigProperty","renamed":"ejb"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"Replace the `javax.ejb` import statement with `jakarta.ejb` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":21,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.ejb.MessageDriven","renamed":"ejb"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":22,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.JMSException","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":23,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.Message","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":24,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.MessageListener","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":25,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.TextMessage","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"Replace the `javax.ejb` import statement with `jakarta.ejb` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":20,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.ejb.ActivationConfigProperty","renamed":"ejb"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"Replace the `javax.ejb` import statement with `jakarta.ejb` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":21,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.ejb.MessageDriven","renamed":"ejb"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":22,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.JMSException","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":23,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.Message","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":24,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.MessageListener","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":25,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.TextMessage","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.annotation` import statement with `jakarta.annotation` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":22,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.annotation.Resource","renamed":"annotation"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.inject` import statement with `jakarta.inject` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":23,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.inject.Inject","renamed":"inject"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":24,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Destination","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":25,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.JMSContext","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":26,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.JMSDestinationDefinition","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":27,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.JMSDestinationDefinitions","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":28,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Queue","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.jms` import statement with `jakarta.jms` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":29,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Topic","renamed":"jms"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.servlet` import statement with `jakarta.servlet` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":30,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.ServletException","renamed":"servlet"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.servlet` import statement with `jakarta.servlet` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":31,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.annotation.WebServlet","renamed":"servlet"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.servlet` import statement with `jakarta.servlet` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":32,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.http.HttpServlet","renamed":"servlet"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.servlet` import statement with `jakarta.servlet` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":33,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.http.HttpServletRequest","renamed":"servlet"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"Replace the `javax.servlet` import statement with `jakarta.servlet` ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":34,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.http.HttpServletResponse","renamed":"servlet"}}],"Extras":null,"effort":1}},"unmatched":["javaee-to-jakarta-namespaces-00002","javaee-to-jakarta-namespaces-00003","javaee-to-jakarta-namespaces-00004","javaee-to-jakarta-namespaces-00005","javaee-to-jakarta-namespaces-00007","javaee-to-jakarta-namespaces-00008","javaee-to-jakarta-namespaces-00009","javaee-to-jakarta-namespaces-00010","javaee-to-jakarta-namespaces-00011","javaee-to-jakarta-namespaces-00012","javaee-to-jakarta-namespaces-00013","javaee-to-jakarta-namespaces-00014","javaee-to-jakarta-namespaces-00015","javaee-to-jakarta-namespaces-00016","javaee-to-jakarta-namespaces-00017","javaee-to-jakarta-namespaces-00018","javaee-to-jakarta-namespaces-00019","javaee-to-jakarta-namespaces-00020","javaee-to-jakarta-namespaces-00021","javaee-to-jakarta-namespaces-00022","javaee-to-jakarta-namespaces-00023","javaee-to-jakarta-namespaces-00024","javaee-to-jakarta-namespaces-00025","javaee-to-jakarta-namespaces-00026","javaee-to-jakarta-namespaces-00027","javaee-to-jakarta-namespaces-00028","javaee-to-jakarta-namespaces-00029","javaee-to-jakarta-namespaces-00030","javaee-to-jakarta-namespaces-00031","javaee-to-jakarta-namespaces-00032","javaee-to-jakarta-namespaces-00033","javaee-to-jakarta-namespaces-00034","javaee-to-jakarta-namespaces-00035","javaee-to-jakarta-namespaces-00036","javaee-to-jakarta-namespaces-00037","javaee-to-jakarta-namespaces-00038","javaee-to-jakarta-namespaces-00039","javaee-to-jakarta-namespaces-00040","javaee-to-jakarta-namespaces-00041","javaee-to-jakarta-namespaces-00042","javaee-to-jakarta-namespaces-00043","javaee-to-jakarta-namespaces-00044","javaee-to-jakarta-namespaces-00045","javaee-to-jakarta-namespaces-00046","javaee-to-jakarta-namespaces-00047","javaee-to-jakarta-namespaces-00048","javaee-to-jakarta-namespaces-00049","javaee-to-jakarta-namespaces-00050","javaee-to-jakarta-namespaces-00051","javaee-to-jakarta-namespaces-00052","javaee-to-jakarta-namespaces-00053","javaee-to-jakarta-namespaces-00054","javaee-to-jakarta-namespaces-00055","javaee-to-jakarta-namespaces-00056","javax-to-jakarta-bootstrapping-files-00001","javax-to-jakarta-dependencies-00001","javax-to-jakarta-dependencies-00002","javax-to-jakarta-dependencies-00003","javax-to-jakarta-dependencies-00004","javax-to-jakarta-dependencies-00005","javax-to-jakarta-dependencies-00006","javax-to-jakarta-dependencies-00007","javax-to-jakarta-dependencies-00008","javax-to-jakarta-properties-00001","javax-to-jakarta-servlet-00010","javax-to-jakarta-servlet-00020","javax-to-jakarta-servlet-00030","javax-to-jakarta-servlet-00040","javax-to-jakarta-servlet-00041","javax-to-jakarta-servlet-00042","javax-to-jakarta-servlet-00043","javax-to-jakarta-servlet-00050","javax-to-jakarta-servlet-00060","javax-to-jakarta-servlet-00070","javax-to-jakarta-servlet-00071","javax-to-jakarta-servlet-00072","javax-to-jakarta-servlet-00080","javax-to-jakarta-servlet-00090","javax-to-jakarta-servlet-00100","javax-to-jakarta-servlet-00101","javax-to-jakarta-servlet-00102","javax-to-jakarta-servlet-00110","javax-to-jakarta-servlet-00111","javax-to-jakarta-servlet-00112","javax-to-jakarta-servlet-00120","javax-to-jakarta-servlet-00121","javax-to-jakarta-servlet-00122","javax-to-jakarta-servlet-00123"],"skipped":["eap8-ejb-00001","eap8-ejb-00002","eap8-ejb-00003","eap8-faces-00001","eap8-faces-00002","eap8-faces-00003","eap8-faces-00004","eap8-faces-00005","eap8-faces-00006","eap8-faces-00007","eap8-faces-00008","eap8-faces-00009","eap8-resteasy-00001","eap8-resteasy-00002","eap8-resteasy-00003","eap8-resteasy-00004","eap8-resteasy-00005","eap8-resteasy-00006","eap8-resteasy-00007","eap8-resteasy-00008","eap8-resteasy-00009","eap8-resteasy-00010","eap8-resteasy-00011","eap8-xml-binding-00001","eap8-xml-binding-00002","eap8-xml-binding-00003","eap8-xml-binding-00004","eap8-xml-binding-00005","eap8-xml-binding-00006","eap8-xml-binding-00007","eap8-xml-binding-00008","eap8-xml-binding-00009","empty-beans-xml-00001","hibernate-00005","hibernate-00010","hibernate-6.2-00010","hibernate-6.2-00020","hibernate-6.2-00030","hibernate-6.2-00040","hibernate-6.2-00050","hibernate-search-00010","hibernate-search-00020","hibernate-search-00030","hibernate-search-00040","hibernate-search-00050","hibernate-search-00060","hibernate-search-00070","hibernate-search-00080","hibernate-search-00090","hibernate-search-00100","hibernate-search-00105","hibernate-search-00110","hibernate-search-00120","hibernate-search-00140","hibernate-search-00150","hibernate-search-00160","hibernate-search-00170","hibernate-search-00180","hibernate-search-00190","hibernate-search-00200","hibernate-search-00210","hibernate-search-00220","hibernate-search-00230","hibernate-search-00240","hibernate-search-00250","hibernate-search-00260","hibernate-search-00270","hibernate-search-00280","hibernate-search-00290","hibernate-search-00300","hibernate-search-00310","hibernate-search-00320","hibernate-search-00330","hibernate-search-00340","hibernate-search-00350","hibernate-search-00360","hibernate-search-00370","hibernate-search-00380","hibernate-search-00390","hibernate-search-00400","hibernate-search-00410","hibernate-search-00420","hibernate-search-00430","hibernate-search-00440","hibernate-search-00450","hibernate-search-00460","hibernate-search-00470","hibernate-search-00480","hibernate-search-00490","hibernate-search-00500","hibernate-search-00510","hibernate-search-00520","hibernate-search-00530","hibernate-search-00540","hibernate-search-00550","hibernate-search-00560","hibernate-search-00570","hibernate-search-00580","hibernate-search-00590","hibernate-search-00600","hibernate-search-00610","hibernate-search-00620","hibernate-search-00630","hibernate-search-00640","hibernate-search-00650","hibernate-search-00660","hibernate-search-00670","hibernate-search-00680","hibernate-search-00690","hibernate-search-00700","hibernate-search-00710","hibernate-search-00720","hibernate-search-00730","hibernate-search-00740","hibernate-search-00750","hibernate-search-00760","hibernate-search-00770","hibernate-search-00780","hibernate-search-00790","hibernate-search-00800","hibernate-search-00810","hibernate-search-00820","hibernate-search-00830","hibernate-search-00840","hibernate-search-00850","hibernate-search-00860","hibernate-search-00870","hibernate-search-00880","hibernate-search-00890","hibernate-search-00900","hibernate-search-00910","hibernate-search-00920","hibernate-search-00930","hibernate-search-00940","hibernate-search-00950","hibernate-search-00960","hibernate-search-00970","hibernate-search-00980","hibernate-search-00990","hibernate-search-01000","hibernate-search-01010","hibernate-search-01020","hibernate-search-01030","hibernate-search-01040","hibernate-search-6.1-00010","hibernate-search-6.1-00020","hibernate-search-6.1-00030","hibernate-search-6.1-00040","hibernate-search-6.1-00050","hibernate-search-6.1-00060","hibernate-search-6.1-00070","hibernate-search-6.1-00080","hibernate-search-6.1-00090","hibernate-search-6.1-00100","hibernate-search-6.1-00120","hibernate-search-6.1-00130","hibernate-search-6.1-00140","hibernate-search-6.1-00150","hibernate-search-6.1-00160","hibernate-search-6.1-00170","hibernate-search-6.1-00180","hibernate-search-6.1-00190","hibernate6-00020","hibernate6-00030","hibernate6-00040","hibernate6-00050","hibernate6-00060","hibernate6-00070","hibernate6-00080","hibernate6-00090","hibernate6-00100","hibernate6-00110","hibernate6-00120","hibernate6-00130","hibernate6-00140","hibernate6-00150","hibernate6-00160","hibernate6-00170","hibernate6-00180","hibernate6-00190","hibernate6-00200","hibernate6-00210","hibernate6-00220","hibernate6-00230","hibernate6-00240","hibernate6-00250","hibernate6-00251","hibernate6-00252","hibernate6-00253","hibernate6-00254","hibernate6-00255","hibernate6-00257","hibernate6-00270","jakarta-cdi-00001","jakarta-cdi-00002","jakarta-cdi-00003","jakarta-cdi-00004","jakarta-el-00010","jakarta-el-00020","jakarta-faces-00001","jakarta-json-binding-00010","jakarta-soap-00010","jakarta-soap-00020","jakarta-ws-rs-00001","jboss-dependencies-00001","jboss-dependencies-00002","jboss-dependencies-00003","jboss-dependencies-00004","jboss-dependencies-00005","jboss-dependencies-00006","jboss-dependencies-00007","jboss-dependencies-00008","jboss-dependencies-00009","jboss-dependencies-00010","jboss-dependencies-00011","jboss-dependencies-00012","jboss-dependencies-00013","jboss-dependencies-00014","jboss-dependencies-00015","jboss-dependencies-00016","jboss-dependencies-00017","jboss-dependencies-00018","jboss-dependencies-00019","jboss-dependencies-00020","jboss-dependencies-00021","jboss-dependencies-00022","jboss-dependencies-00023","jboss-dependencies-00024","jboss-dependencies-00025","jboss-dependencies-00026","jboss-dependencies-00027","jboss-dependencies-00028","jboss-dependencies-00029","jboss-dependencies-00030","jboss-dependencies-00031","keycloak-openid-00001","keycloak-openid-00010","legacy-vault-00010","login-modules-00001","picketlink-00010","picketlink-00020"]},{"name":"eapxp/thorntail","description":"This ruleset provides analysis of Maven built applications that use Thorntail Maven Plugin, which should be replaced by JBoss EAP XP Bootable JAR Maven Plugin, when migrating to JBoss EAP XP.","skipped":["eapxp_bootable_jar_maven_plugin_configuration_changes-1","remove_thorntail_yaml_configuration_files-1","replace_thorntail_boms-1","replace_thorntail_boms-2","replace_thorntail_fractions-01","replace_thorntail_fractions-02","replace_thorntail_fractions-03","replace_thorntail_fractions-04","replace_thorntail_fractions-05","replace_thorntail_fractions-06","replace_thorntail_fractions-07","replace_thorntail_fractions-08","replace_thorntail_fractions-09","replace_thorntail_fractions-10","replace_thorntail_fractions-11","replace_thorntail_fractions-12","replace_thorntail_fractions-13","replace_thorntail_fractions-14","replace_thorntail_fractions-15","replace_thorntail_fractions-16","replace_thorntail_fractions-17","replace_thorntail_fractions-18","replace_thorntail_fractions-19","replace_thorntail_fractions-20","replace_thorntail_fractions-21","replace_thorntail_fractions-22","replace_thorntail_fractions-23","replace_thorntail_fractions-24","replace_thorntail_fractions-25","replace_thorntail_fractions-26","replace_thorntail_fractions-27","replace_thorntail_fractions-28","replace_thorntail_fractions-29","replace_thorntail_fractions-30","replace_thorntail_fractions-31","replace_thorntail_fractions-32","replace_thorntail_fractions-33","replace_thorntail_fractions-34","replace_thorntail_fractions-35","replace_thorntail_fractions-36","replace_thorntail_fractions-37","replace_thorntail_fractions-38","replace_thorntail_fractions-39","replace_thorntail_fractions-40","replace_thorntail_fractions-41","replace_thorntail_fractions-42","replace_thorntail_fractions-43","replace_thorntail_fractions-44","replace_thorntail_fractions-45","replace_thorntail_fractions-46","replace_thorntail_fractions-47","replace_thorntail_fractions-48","replace_thorntail_fractions-49","replace_thorntail_fractions-50","replace_thorntail_maven_plugin-1"]},{"name":"filemappings","description":"This rule set configures the organization matching functionality, using known root-package prefixes to identify libraries and other code."},{"name":"fuse-service-works/soa-p-5","description":"This ruleset provides analysis of JBoss SOA Platform 5 applications and provides information on how to migrate these to Red Hat JBoss Fuse Service Works","skipped":["soa-p-16000","soa-p-17000","soa-p-18000","soa-p-19000","soa-p-20000","soa-p-21000","soa-p-22000","soa-p-23000","soa-p-24000","soa-p-25000","soa-p-26000","soa-p-27000","soa-p-28000","soa-p-29000","soa-p-30000","soa-p-31000","soa-p-32000","soa-p-33000","soa-p-34000","soa-p-35000","soa-p-36000","soa-p-37000","soa-p-38000","soa-p-39000","soa-p-40000","soa-p-41000","soa-p-42000","soa-p-43000","soa-p-44000","soa-p-45000","soa-p-46000","soa-p-47000","soa-p-48000","soa-p-49000","soa-p-5-01000","soa-p-5-02000","soa-p-5-03000","soa-p-5-04000","soa-p-5-05000","soa-p-5-06000","soa-p-5-07000","soa-p-5-08000","soa-p-5-09000","soa-p-5-10000","soa-p-5-11000","soa-p-5-12000","soa-p-5-13000","soa-p-5-14000","soa-p-5-15000","soa-p-50000"]},{"name":"fuse/sonicesb","description":"This ruleset contains rules that assist in migrating from Sonic ESB to Apache Camel.","skipped":["sonic-catchall-00000","sonic-esb-01000","sonic-esb-02000","sonic-esb-03000","sonic-esb-04000","sonic-esb-05000","sonic-esb-06000","sonic-esb-07000","sonic-esb-08000","sonic-esb-09000","sonic-esb-10000","sonic-esb-11000","sonic-esb-12000","sonic-esb-13000","sonic-esb-14000","sonic-esb-15000","sonic-esb-16000","sonic-esb-17000","sonic-esb-18000","sonic-esb-19000","sonic-esb-20000","sonic-esb-21000","xml-sonic-esb-01000"]},{"name":"hibernate","description":"This ruleset provides analysis of deprecated Hibernate java constructs and their migration to newer one.","skipped":["hibernate-01000","hibernate-02000","hibernate-03000","hibernate-04000","hibernate-05000","hibernate-06000","hibernate-07000","hibernate-08000","hibernate-09000","hibernate-10000","hibernate-10100","hibernate-catchall-00000","hibernate-xml-01000","hibernate-xml-02000","hibernate-xml-03000"]},{"name":"jws5","description":"This ruleset provides analysis of applications that need to change their pom dependencies to upgrade dependencies that belong to the groupId `org.apache.tomcat`","skipped":["upgrade-tomcat-dependencies-00001"]},{"name":"openjdk11/openjdk8","description":"This ruleset provides analysis with respect to API removals between OpenJDK 8 and 11.","skipped":["java-removals-00000","java-removals-00010","java-removals-00020","java-removals-00030","java-removals-00040","java-removals-00041","java-removals-00050","java-removals-00060","java-removals-00100","java-removals-00110","java-removals-00120","java-removals-00130","java-removals-00140","java-removals-00150","removed-javaee-modules-00000","removed-javaee-modules-00010","removed-javaee-modules-00020"]},{"name":"openjdk17","description":"This ruleset provides analysis regarding removed APIs in OpenJDK 18 to 21.","skipped":["deprecation-00000","deprecation-00005","deprecation-00010","deprecation-00020","deprecation-00030","dynamic-agents-00000","finalization-deprecation-00000","finalization-deprecation-00010","removed-apis-00000","removed-apis-00005","removed-apis-00010","removed-apis-00015","utf-8-by-default-00000","utf-8-by-default-00010","utf-8-by-default-00020","utf-8-by-default-00030"]},{"name":"openjdk17/openjdk11","description":"This ruleset provides analysis Security Manager classes and methods deprecated between OpenJDK 11 to 17.","skipped":["applet-api-deprecation-00000","lombok-incompatibility-00001","removed-classes-00000","removed-packages-00000","removed-packages-00010","security-manager-deprecation-00000","security-manager-deprecation-00010","security-manager-deprecation-00020","security-manager-deprecation-00030","security-manager-deprecation-00040","security-manager-deprecation-00050","security-manager-deprecation-00060","security-manager-deprecation-00070"]},{"name":"openjdk7/oraclejdk7","description":"This ruleset provides analysis with respect to the migration from OracleJDK to OpenJDK.","skipped":["oracle2openjdk-00000","oracle2openjdk-00001","oracle2openjdk-00002","oracle2openjdk-00003","oracle2openjdk-00004","oracle2openjdk-00005"]},{"name":"openliberty/websphere","description":"This ruleset identifies usage of Java APIs and technologies which are not provided by Open Liberty.","skipped":["ActivitySessionRule","AppProfileRule","AsyncBeansSchedulerRule","BatchFeaturePackRule","DetectEJBEntityBeansXML","DetectJAXRJava","DetectJAXRPC","DetectJavaApplicationDeploymentJava","DetectJavaPortlet","DetectPolicySetAndWsSecurity","DetectRemoteBundleRepositoriesJava","DetectRemoteServicesJava","DetectTransactionPropagationEJBRemote","DetectWSATXML","DetectWSBAJava","DetectWSNotificationJava","DynamicCacheRule","DynamicQueryRule","I18nRule","MTOMRule","SOAPOverJMSRule","ServerName","StartupBeanRule","WOLAMissingClassesRule","WOLARule","WSNotificationRuleJava","WebSphereSchedulerRule","WebSphereSdoRule","WebSphereServletRule","WebSphereUnavailableAPIsAppClient","WebSphereUnavailableAPIsConnectorArchitecture","WebSphereUnavailableAPIsEnterpriseJavaBeans","WebSphereUnavailableAPIsExceptions","WebSphereUnavailableAPIsExtHelper","WebSphereUnavailableAPIsExtensionRegistry","WebSphereUnavailableAPIsISC","WebSphereUnavailableAPIsLoggingAndRAS","WebSphereUnavailableAPIsManagement","WebSphereUnavailableAPIsORB","WebSphereUnavailableAPIsPMI","WebSphereUnavailableAPIsPortal","WebSphereUnavailableAPIsResourceAdapter","WebSphereUnavailableAPIsSIB","WebSphereUnavailableAPIsSMF","WebSphereUnavailableAPIsSecurity","WebSphereUnavailableAPIsTPV","WebSphereUnavailableAPIsUDDI","WebSphereUnavailableAPIsWLM","WebSphereUnavailableAPIsWSADIE","WebSphereUnavailableAPIsWSSecurityHelper","WebSphereUnavailableSPIsRRD","WebSphereUnavailableSSOCookieMethod","WebSphereUnavailableSSOTokenMethod","WebSphereWebServicesGeneratedClassesRule","WebSphereWebServicesRule","WorkAreaRule","XMLFeaturePackRule"]},{"name":"os/windows","description":"This is a ruleset for Windows operating system specific rules while migrating to Linux operating system.","skipped":["os-specific-00001","os-specific-00002"]},{"name":"quarkus/springboot","description":"This ruleset gives hints to migrate from SpringBoot devtools to Quarkus","violations":{"cdi-to-quarkus-00030":{"description":"`beans.xml` descriptor content is ignored\n`beans.xml` descriptor content is ignored and it could be removed from the application.. Refer to the guide referenced below to check the supported CDI feature in Quarkus.","category":"potential","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/src/main/webapp/WEB-INF/beans.xml","message":"`beans.xml` descriptor content is ignored and it could be removed from the application.. Refer to the guide referenced below to check the supported CDI feature in Quarkus.","variables":{"data":"beans","innerText":"\n","matchingXML":""}}],"Extras":null,"effort":3},"dependency-removal-for-quarkus-00000":{"description":"Remove non-quarkus dependencies\nNon-quarkus dependencies are no longer required and can be removed.","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"Non-quarkus dependencies are no longer required and can be removed.","codeSnip":" 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  \n121  \t\t\u003cdependencies\u003e\n122  \t\t\t\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\n123  \t\t\tuseful artifacts as managed dependencies --\u003e\n124  \t\t\t\u003cdependency\u003e\n125  \t\t\t\t\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\n126  \t\t\t\t\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\n127  \t\t\t\t\u003cversion\u003e${version.server.bom}\u003c/version\u003e\n128  \t\t\t\t\u003ctype\u003epom\u003c/type\u003e\n129  \t\t\t\t\u003cscope\u003eimport\u003c/scope\u003e\n130  \t\t\t\u003c/dependency\u003e\n131  \t\t\u003c/dependencies\u003e\n132  \t\u003c/dependencyManagement\u003e\n133      \u003cdependencies\u003e\n134          \u003cdependency\u003e\n135              \u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\n136              \u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\n137              \u003cscope\u003eprovided\u003c/scope\u003e\n138          \u003c/dependency\u003e\n139          \u003cdependency\u003e\n140              \u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\n141              \u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\n142              \u003cscope\u003eprovided\u003c/scope\u003e\n143          \u003c/dependency\u003e\n144          \u003cdependency\u003e\n145              \u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\n146              \u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\n147              \u003cscope\u003eprovided\u003c/scope\u003e\n148          \u003c/dependency\u003e\n149          \u003c!-- Import the Servlet API, we use provided scope as the API is\n150              included in JBoss EAP --\u003e\n151          \u003cdependency\u003e\n152              \u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\n153              \u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\n154              \u003cscope\u003eprovided\u003c/scope\u003e\n155          \u003c/dependency\u003e\n156          \u003cdependency\u003e\n157              \u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\n158              \u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\n159              \u003cscope\u003eprovided\u003c/scope\u003e\n160          \u003c/dependency\u003e\n161  \n162      \u003c/dependencies\u003e\n163  \u003cbuild\u003e\n164  \t\t\u003c!-- Set the name of the WAR, used as the context root when the app is\n165  \t\tdeployed --\u003e\n166  \t\t\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\n167  \t\t\u003cplugins\u003e\n168  \t\t\t\u003cplugin\u003e\n169  \t\t\t\t\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\n170  \t\t\t\t\u003cversion\u003e2.4\u003c/version\u003e\n171  \t\t\t\t\u003cconfiguration\u003e\n172  \t\t\t\t\t\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\n173  \t\t\t\t\u003c/configuration\u003e\n174  \t\t\t\u003c/plugin\u003e\n175  \t\t\t\u003cplugin\u003e\n176  \t\t\t\t\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\n177  \t\t\t\t\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\n178  \t\t\t\t\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\n179  \t\t\t\u003c/plugin\u003e\n180  \t\t\u003c/plugins\u003e\n181  \t\u003c/build\u003e\n182  \t\u003cprofiles\u003e\n183  \t\t\u003cprofile\u003e\n184  \t\t\t\u003c!-- When built in OpenShift the 'openshift' profile will be\n185                  used\n186  \t\t\twhen invoking mvn. --\u003e\n187  \t\t\t\u003c!-- Use this profile for any OpenShift specific customization\n188                  your\n189  \t\t\tapp will ne    ed. --\u003e\n190  \t\t\t\u003c!-- By default that is to put the resulting archive into the\n191  \t\t\t'deployments' folder. --\u003e\n192  \t\t\t\u003c!--\n193  \t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\n194  \t\t\t\u003cid\u003eopenshift\u003c/id\u003e\n195  \t\t\t\u003cbuild\u003e\n196  \t\t\t\t\u003cplugins\u003e\n197  \t\t\t\t\t\u003cplugin\u003e\n198  \t\t\t\t\t\t\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\n199  \t\t\t\t\t\t\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\n200  \t\t\t\t\t\t\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\n201  \t\t\t\t\t\t\u003cconfiguration\u003e\n202  \t\t\t\t\t\t\t\u003cwarName\u003eROOT\u003c/warName\u003e\n203  \t\t\t\t\t\t\u003c/configuration\u003e\n204  \t\t\t\t\t\u003c/plugin\u003e\n205  \t\t\t\t\t\u003cplugin\u003e\n206  \t\t\t\t\t\t\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\n207  \t\t\t\t\t\t\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\n208  \t\t\t\t\t\t\u003cexecutions\u003e\n209  \t\t\t\t\t\t\t\u003cexecution\u003e\n210  \t\t\t\t\t\t\t\t\u003cid\u003eattach-sources\u003c/id\u003e\n211  \t\t\t\t\t\t\t\t\u003cphase\u003enone\u003c/phase\u003e\n212  \t\t\t\t\t\t\t\u003c/execution\u003e\n213  \t\t\t\t\t\t\u003c/executions\u003e\n214  \t\t\t\t\t\u003c/plugin\u003e\n215  \t\t\t\t\u003c/plugins\u003e\n216  \t\t\t\u003c/build\u003e\n217  \t\t\u003c/profile\u003e\n218  \t\u003c/profiles\u003e\n219  \u003c/project\u003e\n","lineNumber":140,"variables":{"name":"org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec","version":"2.0.0.Final-redhat-00001"}},{"uri":"file:///tmp/source-code/pom.xml","message":"Non-quarkus dependencies are no longer required and can be removed.","codeSnip":" 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  \n121  \t\t\u003cdependencies\u003e\n122  \t\t\t\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\n123  \t\t\tuseful artifacts as managed dependencies --\u003e\n124  \t\t\t\u003cdependency\u003e\n125  \t\t\t\t\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\n126  \t\t\t\t\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\n127  \t\t\t\t\u003cversion\u003e${version.server.bom}\u003c/version\u003e\n128  \t\t\t\t\u003ctype\u003epom\u003c/type\u003e\n129  \t\t\t\t\u003cscope\u003eimport\u003c/scope\u003e\n130  \t\t\t\u003c/dependency\u003e\n131  \t\t\u003c/dependencies\u003e\n132  \t\u003c/dependencyManagement\u003e\n133      \u003cdependencies\u003e\n134          \u003cdependency\u003e\n135              \u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\n136              \u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\n137              \u003cscope\u003eprovided\u003c/scope\u003e\n138          \u003c/dependency\u003e\n139          \u003cdependency\u003e\n140              \u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\n141              \u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\n142              \u003cscope\u003eprovided\u003c/scope\u003e\n143          \u003c/dependency\u003e\n144          \u003cdependency\u003e\n145              \u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\n146              \u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\n147              \u003cscope\u003eprovided\u003c/scope\u003e\n148          \u003c/dependency\u003e\n149          \u003c!-- Import the Servlet API, we use provided scope as the API is\n150              included in JBoss EAP --\u003e\n151          \u003cdependency\u003e\n152              \u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\n153              \u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\n154              \u003cscope\u003eprovided\u003c/scope\u003e\n155          \u003c/dependency\u003e\n156          \u003cdependency\u003e\n157              \u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\n158              \u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\n159              \u003cscope\u003eprovided\u003c/scope\u003e\n160          \u003c/dependency\u003e\n161  \n162      \u003c/dependencies\u003e\n163  \u003cbuild\u003e\n164  \t\t\u003c!-- Set the name of the WAR, used as the context root when the app is\n165  \t\tdeployed --\u003e\n166  \t\t\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\n167  \t\t\u003cplugins\u003e\n168  \t\t\t\u003cplugin\u003e\n169  \t\t\t\t\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\n170  \t\t\t\t\u003cversion\u003e2.4\u003c/version\u003e\n171  \t\t\t\t\u003cconfiguration\u003e\n172  \t\t\t\t\t\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\n173  \t\t\t\t\u003c/configuration\u003e\n174  \t\t\t\u003c/plugin\u003e\n175  \t\t\t\u003cplugin\u003e\n176  \t\t\t\t\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\n177  \t\t\t\t\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\n178  \t\t\t\t\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\n179  \t\t\t\u003c/plugin\u003e\n180  \t\t\u003c/plugins\u003e\n181  \t\u003c/build\u003e\n182  \t\u003cprofiles\u003e\n183  \t\t\u003cprofile\u003e\n184  \t\t\t\u003c!-- When built in OpenShift the 'openshift' profile will be\n185                  used\n186  \t\t\twhen invoking mvn. --\u003e\n187  \t\t\t\u003c!-- Use this profile for any OpenShift specific customization\n188                  your\n189  \t\t\tapp will ne    ed. --\u003e\n190  \t\t\t\u003c!-- By default that is to put the resulting archive into the\n191  \t\t\t'deployments' folder. --\u003e\n192  \t\t\t\u003c!--\n193  \t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\n194  \t\t\t\u003cid\u003eopenshift\u003c/id\u003e\n195  \t\t\t\u003cbuild\u003e\n196  \t\t\t\t\u003cplugins\u003e\n197  \t\t\t\t\t\u003cplugin\u003e\n198  \t\t\t\t\t\t\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\n199  \t\t\t\t\t\t\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\n200  \t\t\t\t\t\t\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\n201  \t\t\t\t\t\t\u003cconfiguration\u003e\n202  \t\t\t\t\t\t\t\u003cwarName\u003eROOT\u003c/warName\u003e\n203  \t\t\t\t\t\t\u003c/configuration\u003e\n204  \t\t\t\t\t\u003c/plugin\u003e\n205  \t\t\t\t\t\u003cplugin\u003e\n206  \t\t\t\t\t\t\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\n207  \t\t\t\t\t\t\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\n208  \t\t\t\t\t\t\u003cexecutions\u003e\n209  \t\t\t\t\t\t\t\u003cexecution\u003e\n210  \t\t\t\t\t\t\t\t\u003cid\u003eattach-sources\u003c/id\u003e\n211  \t\t\t\t\t\t\t\t\u003cphase\u003enone\u003c/phase\u003e\n212  \t\t\t\t\t\t\t\u003c/execution\u003e\n213  \t\t\t\t\t\t\u003c/executions\u003e\n214  \t\t\t\t\t\u003c/plugin\u003e\n215  \t\t\t\t\u003c/plugins\u003e\n216  \t\t\t\u003c/build\u003e\n217  \t\t\u003c/profile\u003e\n218  \t\u003c/profiles\u003e\n219  \u003c/project\u003e\n","lineNumber":157,"variables":{"name":"org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec","version":"2.0.1.Final-redhat-00001"}}],"links":[{"url":"https://quarkus.io/guides","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"javaee-pom-to-quarkus-00000":{"description":"The expected project artifact's extension is `jar`\n","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"The project artifact's current extension (i.e. `\u003cpackaging\u003e` tag value) is `` but the expected value should be `jar`","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\u003e\n 19      \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n 20      \u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\n 21      \u003cversion\u003e7.4.0.GA\u003c/version\u003e\n 22      \u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\n 23      \u003cpackaging\u003ewar\u003c/packaging\u003e\n 24      \u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\n 25      \u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\n 26  \n 27      \u003clicenses\u003e\n 28          \u003clicense\u003e\n 29              \u003cname\u003eApache License, Version 2.0\u003c/name\u003e\n 30              \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\n 31              \u003cdistribution\u003erepo\u003c/distribution\u003e\n 32          \u003c/license\u003e\n 33      \u003c/licenses\u003e\n 34  \u003cproperties\u003e\n 35  \n 36  \t\t\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\n 37  \t\t\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\n 38  \n 39  \t\t\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\n 40  \t\t\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\n 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e","lineNumber":12,"variables":{"data":"war","innerText":"war","matchingXML":""}}],"links":[{"url":"https://quarkus.io/guides/maven-tooling#build-tool-maven","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"javaee-pom-to-quarkus-00010":{"description":"Adopt Quarkus BOM\n","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"Use the Quarkus BOM to omit the version of the different Quarkus dependencies.. Add the following sections to the `pom.xml` file:. ```xml. \u003cproperties\u003e. \u003cquarkus.platform.artifact-id\u003equarkus-bom\u003c/quarkus.platform.artifact-id\u003e. \u003cquarkus.platform.group-id\u003eio.quarkus.platform\u003c/quarkus.platform.group-id\u003e. \u003cquarkus.platform.version\u003e3.1.0.Final\u003c/quarkus.platform.version\u003e. \u003c/properties\u003e. \u003cdependencyManagement\u003e. \u003cdependencies\u003e. \u003cdependency\u003e. \u003cgroupId\u003e$\u003c/groupId\u003e. \u003cartifactId\u003e$\u003c/artifactId\u003e. \u003cversion\u003e$\u003c/version\u003e. \u003ctype\u003epom\u003c/type\u003e. \u003cscope\u003eimport\u003c/scope\u003e. \u003c/dependency\u003e. \u003c/dependencies\u003e. \u003c/dependencyManagement\u003e. ```. Check the latest Quarkus version available from the `Quarkus - Releases` link below.","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\u003e\n 19      \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n 20      \u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\n 21      \u003cversion\u003e7.4.0.GA\u003c/version\u003e\n 22      \u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\n 23      \u003cpackaging\u003ewar\u003c/packaging\u003e\n 24      \u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\n 25      \u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\n 26  \n 27      \u003clicenses\u003e\n 28          \u003clicense\u003e\n 29              \u003cname\u003eApache License, Version 2.0\u003c/name\u003e\n 30              \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\n 31              \u003cdistribution\u003erepo\u003c/distribution\u003e\n 32          \u003c/license\u003e\n 33      \u003c/licenses\u003e\n 34  \u003cproperties\u003e\n 35  \n 36  \t\t\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\n 37  \t\t\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\n 38  \n 39  \t\t\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\n 40  \t\t\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\n 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  ","lineNumber":19,"variables":{"data":"project","innerText":"\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n    helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\n\n    \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n            provided\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_4.0_spec\n            provided\n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.3_spec\n            provided\n        \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n","matchingXML":"\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\u003cversion\u003e7.4.0.GA\u003c/version\u003e\u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\u003cpackaging\u003ewar\u003c/packaging\u003e\u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\u003clicenses\u003e\u003clicense\u003e\u003cname\u003eApache License, Version 2.0\u003c/name\u003e\u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\u003cdistribution\u003erepo\u003c/distribution\u003e\u003c/license\u003e\u003c/licenses\u003e\u003cproperties\u003e\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\u003c!-- A base list of dependency and plug-in version used in the various\r\n\t\tquick starts. --\u003e\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\u003c!-- other plug-in versions --\u003e\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\u003c!-- Explicitly declaring the source encoding eliminates the following\r\n\t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\n\t\tfiltered resources, i.e. build is platform dependent! --\u003e\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\u003c!-- Protocol to use for communication with remote maven repositories.\r\n\t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\n\t\tinterferes with that. Use 'https' for builds that will be released\r\n                     to\r\n\t\tnon-snapshot public maven repos --\u003e\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\u003c!-- The full remote maven repo URL; can be overridden via -D for\r\n\t\tspecial use cases --\u003e\u003cmaven.repository.url\u003e${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\u003c!-- https://access.redhat.com/maven-repository --\u003e\u003cmaven.redhat.repository.url\u003e${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\u003c!-- Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\n\t\t\"mvn clean install\"\r\n        --\u003e\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\u003c!-- Versions of unmanaged dependencies --\u003e\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\u003c/properties\u003e\u003crepositories\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\u003curl\u003e${maven.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003c/repositories\u003e\u003cdependencyManagement\u003e\u003cdependencies\u003e\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\tuseful artifacts as managed dependencies --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\u003cversion\u003e${version.server.bom}\u003c/version\u003e\u003ctype\u003epom\u003c/type\u003e\u003cscope\u003eimport\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003c/dependencyManagement\u003e\u003cdependencies\u003e\u003cdependency\u003e\u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c!-- Import the Servlet API, we use provided scope as the API is\r\n            included in JBoss EAP --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003cbuild\u003e\u003c!-- Set the name of the WAR, used as the context root when the app is\r\n\t\tdeployed --\u003e\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e2.4\u003c/version\u003e\u003cconfiguration\u003e\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003cprofiles\u003e\u003cprofile\u003e\u003c!-- When built in OpenShift the 'openshift' profile will be\r\n                used\r\n\t\t\twhen invoking mvn. --\u003e\u003c!-- Use this profile for any OpenShift specific customization\r\n                your\r\n\t\t\tapp will ne    ed. --\u003e\u003c!-- By default that is to put the resulting archive into the\r\n\t\t\t'deployments' folder. --\u003e\u003c!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\u003cid\u003eopenshift\u003c/id\u003e\u003cbuild\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\u003cconfiguration\u003e\u003cwarName\u003eROOT\u003c/warName\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\u003cexecutions\u003e\u003cexecution\u003e\u003cid\u003eattach-sources\u003c/id\u003e\u003cphase\u003enone\u003c/phase\u003e\u003c/execution\u003e\u003c/executions\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003c/profile\u003e\u003c/profiles\u003e"}}],"links":[{"url":"https://quarkus.io/guides/maven-tooling#build-tool-maven","title":"Quarkus - Guide"},{"url":"https://quarkus.io/blog/tag/release/","title":"Quarkus - Releases"}],"Extras":null,"effort":1},"javaee-pom-to-quarkus-00020":{"description":"Adopt Quarkus Maven plugin\n","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"Use the Quarkus Maven plugin adding the following sections to the `pom.xml` file:. ```xml. \u003cproperties\u003e. \u003cquarkus.platform.group-id\u003eio.quarkus.platform\u003c/quarkus.platform.group-id\u003e. \u003cquarkus.platform.version\u003e3.1.0.Final\u003c/quarkus.platform.version\u003e. \u003c/properties\u003e. \u003cbuild\u003e. \u003cplugins\u003e. \u003cplugin\u003e. \u003cgroupId\u003e$\u003c/groupId\u003e. \u003cartifactId\u003equarkus-maven-plugin\u003c/artifactId\u003e. \u003cversion\u003e$\u003c/version\u003e. \u003cextensions\u003etrue\u003c/extensions\u003e. \u003cexecutions\u003e. \u003cexecution\u003e. \u003cgoals\u003e. \u003cgoal\u003ebuild\u003c/goal\u003e. \u003cgoal\u003egenerate-code\u003c/goal\u003e. \u003cgoal\u003egenerate-code-tests\u003c/goal\u003e. \u003c/goals\u003e. \u003c/execution\u003e. \u003c/executions\u003e. \u003c/plugin\u003e. \u003c/plugins\u003e. \u003c/build\u003e. ```","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\u003e\n 19      \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n 20      \u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\n 21      \u003cversion\u003e7.4.0.GA\u003c/version\u003e\n 22      \u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\n 23      \u003cpackaging\u003ewar\u003c/packaging\u003e\n 24      \u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\n 25      \u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\n 26  \n 27      \u003clicenses\u003e\n 28          \u003clicense\u003e\n 29              \u003cname\u003eApache License, Version 2.0\u003c/name\u003e\n 30              \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\n 31              \u003cdistribution\u003erepo\u003c/distribution\u003e\n 32          \u003c/license\u003e\n 33      \u003c/licenses\u003e\n 34  \u003cproperties\u003e\n 35  \n 36  \t\t\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\n 37  \t\t\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\n 38  \n 39  \t\t\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\n 40  \t\t\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\n 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  ","lineNumber":19,"variables":{"data":"project","innerText":"\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n    helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\n\n    \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n            provided\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_4.0_spec\n            provided\n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.3_spec\n            provided\n        \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n","matchingXML":"\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\u003cversion\u003e7.4.0.GA\u003c/version\u003e\u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\u003cpackaging\u003ewar\u003c/packaging\u003e\u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\u003clicenses\u003e\u003clicense\u003e\u003cname\u003eApache License, Version 2.0\u003c/name\u003e\u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\u003cdistribution\u003erepo\u003c/distribution\u003e\u003c/license\u003e\u003c/licenses\u003e\u003cproperties\u003e\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\u003c!-- A base list of dependency and plug-in version used in the various\r\n\t\tquick starts. --\u003e\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\u003c!-- other plug-in versions --\u003e\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\u003c!-- Explicitly declaring the source encoding eliminates the following\r\n\t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\n\t\tfiltered resources, i.e. build is platform dependent! --\u003e\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\u003c!-- Protocol to use for communication with remote maven repositories.\r\n\t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\n\t\tinterferes with that. Use 'https' for builds that will be released\r\n                     to\r\n\t\tnon-snapshot public maven repos --\u003e\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\u003c!-- The full remote maven repo URL; can be overridden via -D for\r\n\t\tspecial use cases --\u003e\u003cmaven.repository.url\u003e${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\u003c!-- https://access.redhat.com/maven-repository --\u003e\u003cmaven.redhat.repository.url\u003e${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\u003c!-- Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\n\t\t\"mvn clean install\"\r\n        --\u003e\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\u003c!-- Versions of unmanaged dependencies --\u003e\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\u003c/properties\u003e\u003crepositories\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\u003curl\u003e${maven.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003c/repositories\u003e\u003cdependencyManagement\u003e\u003cdependencies\u003e\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\tuseful artifacts as managed dependencies --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\u003cversion\u003e${version.server.bom}\u003c/version\u003e\u003ctype\u003epom\u003c/type\u003e\u003cscope\u003eimport\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003c/dependencyManagement\u003e\u003cdependencies\u003e\u003cdependency\u003e\u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c!-- Import the Servlet API, we use provided scope as the API is\r\n            included in JBoss EAP --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003cbuild\u003e\u003c!-- Set the name of the WAR, used as the context root when the app is\r\n\t\tdeployed --\u003e\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e2.4\u003c/version\u003e\u003cconfiguration\u003e\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003cprofiles\u003e\u003cprofile\u003e\u003c!-- When built in OpenShift the 'openshift' profile will be\r\n                used\r\n\t\t\twhen invoking mvn. --\u003e\u003c!-- Use this profile for any OpenShift specific customization\r\n                your\r\n\t\t\tapp will ne    ed. --\u003e\u003c!-- By default that is to put the resulting archive into the\r\n\t\t\t'deployments' folder. --\u003e\u003c!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\u003cid\u003eopenshift\u003c/id\u003e\u003cbuild\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\u003cconfiguration\u003e\u003cwarName\u003eROOT\u003c/warName\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\u003cexecutions\u003e\u003cexecution\u003e\u003cid\u003eattach-sources\u003c/id\u003e\u003cphase\u003enone\u003c/phase\u003e\u003c/execution\u003e\u003c/executions\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003c/profile\u003e\u003c/profiles\u003e"}}],"links":[{"url":"https://quarkus.io/guides/maven-tooling#build-tool-maven","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"javaee-pom-to-quarkus-00030":{"description":"Adopt Maven Compiler plugin\n","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"Use the Maven Compiler plugin adding the following sections to the `pom.xml` file:. ```xml. \u003cproperties\u003e. \u003ccompiler-plugin.version\u003e3.10.1\u003c/compiler-plugin.version\u003e. \u003cmaven.compiler.release\u003e11\u003c/maven.compiler.release\u003e. \u003c/properties\u003e. \u003cbuild\u003e. \u003cplugins\u003e. \u003cplugin\u003e. \u003cartifactId\u003emaven-compiler-plugin\u003c/artifactId\u003e. \u003cversion\u003e$\u003c/version\u003e. \u003cconfiguration\u003e. \u003ccompilerArgs\u003e. \u003carg\u003e-parameters\u003c/arg\u003e. \u003c/compilerArgs\u003e. \u003c/configuration\u003e. \u003c/plugin\u003e. \u003c/plugins\u003e. \u003c/build\u003e. ```","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\u003e\n 19      \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n 20      \u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\n 21      \u003cversion\u003e7.4.0.GA\u003c/version\u003e\n 22      \u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\n 23      \u003cpackaging\u003ewar\u003c/packaging\u003e\n 24      \u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\n 25      \u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\n 26  \n 27      \u003clicenses\u003e\n 28          \u003clicense\u003e\n 29              \u003cname\u003eApache License, Version 2.0\u003c/name\u003e\n 30              \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\n 31              \u003cdistribution\u003erepo\u003c/distribution\u003e\n 32          \u003c/license\u003e\n 33      \u003c/licenses\u003e\n 34  \u003cproperties\u003e\n 35  \n 36  \t\t\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\n 37  \t\t\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\n 38  \n 39  \t\t\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\n 40  \t\t\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\n 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  ","lineNumber":19,"variables":{"data":"project","innerText":"\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n    helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\n\n    \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n            provided\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_4.0_spec\n            provided\n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.3_spec\n            provided\n        \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n","matchingXML":"\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\u003cversion\u003e7.4.0.GA\u003c/version\u003e\u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\u003cpackaging\u003ewar\u003c/packaging\u003e\u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\u003clicenses\u003e\u003clicense\u003e\u003cname\u003eApache License, Version 2.0\u003c/name\u003e\u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\u003cdistribution\u003erepo\u003c/distribution\u003e\u003c/license\u003e\u003c/licenses\u003e\u003cproperties\u003e\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\u003c!-- A base list of dependency and plug-in version used in the various\r\n\t\tquick starts. --\u003e\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\u003c!-- other plug-in versions --\u003e\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\u003c!-- Explicitly declaring the source encoding eliminates the following\r\n\t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\n\t\tfiltered resources, i.e. build is platform dependent! --\u003e\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\u003c!-- Protocol to use for communication with remote maven repositories.\r\n\t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\n\t\tinterferes with that. Use 'https' for builds that will be released\r\n                     to\r\n\t\tnon-snapshot public maven repos --\u003e\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\u003c!-- The full remote maven repo URL; can be overridden via -D for\r\n\t\tspecial use cases --\u003e\u003cmaven.repository.url\u003e${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\u003c!-- https://access.redhat.com/maven-repository --\u003e\u003cmaven.redhat.repository.url\u003e${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\u003c!-- Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\n\t\t\"mvn clean install\"\r\n        --\u003e\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\u003c!-- Versions of unmanaged dependencies --\u003e\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\u003c/properties\u003e\u003crepositories\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\u003curl\u003e${maven.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003c/repositories\u003e\u003cdependencyManagement\u003e\u003cdependencies\u003e\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\tuseful artifacts as managed dependencies --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\u003cversion\u003e${version.server.bom}\u003c/version\u003e\u003ctype\u003epom\u003c/type\u003e\u003cscope\u003eimport\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003c/dependencyManagement\u003e\u003cdependencies\u003e\u003cdependency\u003e\u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c!-- Import the Servlet API, we use provided scope as the API is\r\n            included in JBoss EAP --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003cbuild\u003e\u003c!-- Set the name of the WAR, used as the context root when the app is\r\n\t\tdeployed --\u003e\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e2.4\u003c/version\u003e\u003cconfiguration\u003e\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003cprofiles\u003e\u003cprofile\u003e\u003c!-- When built in OpenShift the 'openshift' profile will be\r\n                used\r\n\t\t\twhen invoking mvn. --\u003e\u003c!-- Use this profile for any OpenShift specific customization\r\n                your\r\n\t\t\tapp will ne    ed. --\u003e\u003c!-- By default that is to put the resulting archive into the\r\n\t\t\t'deployments' folder. --\u003e\u003c!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\u003cid\u003eopenshift\u003c/id\u003e\u003cbuild\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\u003cconfiguration\u003e\u003cwarName\u003eROOT\u003c/warName\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\u003cexecutions\u003e\u003cexecution\u003e\u003cid\u003eattach-sources\u003c/id\u003e\u003cphase\u003enone\u003c/phase\u003e\u003c/execution\u003e\u003c/executions\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003c/profile\u003e\u003c/profiles\u003e"}}],"links":[{"url":"https://quarkus.io/guides/maven-tooling#build-tool-maven","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"javaee-pom-to-quarkus-00040":{"description":"Adopt Maven Surefire plugin\n","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"Use the Maven Surefire plugin adding the following sections to the `pom.xml` file:. ```xml. \u003cproperties\u003e. \u003csurefire-plugin.version\u003e3.0.0\u003c/compiler-plugin.version\u003e. \u003c/properties\u003e. \u003cbuild\u003e. \u003cplugins\u003e. \u003cplugin\u003e. \u003cartifactId\u003emaven-surefire-plugin\u003c/artifactId\u003e. \u003cversion\u003e$\u003c/version\u003e. \u003cconfiguration\u003e. \u003csystemPropertyVariables\u003e. \u003cjava.util.logging.manager\u003eorg.jboss.logmanager.LogManager\u003c/java.util.logging.manager\u003e. \u003cmaven.home\u003e$\u003c/maven.home\u003e. \u003c/systemPropertyVariables\u003e. \u003c/configuration\u003e. \u003c/plugin\u003e. \u003c/plugins\u003e. \u003c/build\u003e. ```","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\u003e\n 19      \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n 20      \u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\n 21      \u003cversion\u003e7.4.0.GA\u003c/version\u003e\n 22      \u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\n 23      \u003cpackaging\u003ewar\u003c/packaging\u003e\n 24      \u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\n 25      \u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\n 26  \n 27      \u003clicenses\u003e\n 28          \u003clicense\u003e\n 29              \u003cname\u003eApache License, Version 2.0\u003c/name\u003e\n 30              \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\n 31              \u003cdistribution\u003erepo\u003c/distribution\u003e\n 32          \u003c/license\u003e\n 33      \u003c/licenses\u003e\n 34  \u003cproperties\u003e\n 35  \n 36  \t\t\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\n 37  \t\t\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\n 38  \n 39  \t\t\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\n 40  \t\t\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\n 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  ","lineNumber":19,"variables":{"data":"project","innerText":"\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n    helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\n\n    \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n            provided\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_4.0_spec\n            provided\n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.3_spec\n            provided\n        \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n","matchingXML":"\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\u003cversion\u003e7.4.0.GA\u003c/version\u003e\u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\u003cpackaging\u003ewar\u003c/packaging\u003e\u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\u003clicenses\u003e\u003clicense\u003e\u003cname\u003eApache License, Version 2.0\u003c/name\u003e\u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\u003cdistribution\u003erepo\u003c/distribution\u003e\u003c/license\u003e\u003c/licenses\u003e\u003cproperties\u003e\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\u003c!-- A base list of dependency and plug-in version used in the various\r\n\t\tquick starts. --\u003e\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\u003c!-- other plug-in versions --\u003e\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\u003c!-- Explicitly declaring the source encoding eliminates the following\r\n\t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\n\t\tfiltered resources, i.e. build is platform dependent! --\u003e\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\u003c!-- Protocol to use for communication with remote maven repositories.\r\n\t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\n\t\tinterferes with that. Use 'https' for builds that will be released\r\n                     to\r\n\t\tnon-snapshot public maven repos --\u003e\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\u003c!-- The full remote maven repo URL; can be overridden via -D for\r\n\t\tspecial use cases --\u003e\u003cmaven.repository.url\u003e${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\u003c!-- https://access.redhat.com/maven-repository --\u003e\u003cmaven.redhat.repository.url\u003e${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\u003c!-- Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\n\t\t\"mvn clean install\"\r\n        --\u003e\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\u003c!-- Versions of unmanaged dependencies --\u003e\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\u003c/properties\u003e\u003crepositories\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\u003curl\u003e${maven.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003c/repositories\u003e\u003cdependencyManagement\u003e\u003cdependencies\u003e\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\tuseful artifacts as managed dependencies --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\u003cversion\u003e${version.server.bom}\u003c/version\u003e\u003ctype\u003epom\u003c/type\u003e\u003cscope\u003eimport\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003c/dependencyManagement\u003e\u003cdependencies\u003e\u003cdependency\u003e\u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c!-- Import the Servlet API, we use provided scope as the API is\r\n            included in JBoss EAP --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003cbuild\u003e\u003c!-- Set the name of the WAR, used as the context root when the app is\r\n\t\tdeployed --\u003e\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e2.4\u003c/version\u003e\u003cconfiguration\u003e\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003cprofiles\u003e\u003cprofile\u003e\u003c!-- When built in OpenShift the 'openshift' profile will be\r\n                used\r\n\t\t\twhen invoking mvn. --\u003e\u003c!-- Use this profile for any OpenShift specific customization\r\n                your\r\n\t\t\tapp will ne    ed. --\u003e\u003c!-- By default that is to put the resulting archive into the\r\n\t\t\t'deployments' folder. --\u003e\u003c!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\u003cid\u003eopenshift\u003c/id\u003e\u003cbuild\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\u003cconfiguration\u003e\u003cwarName\u003eROOT\u003c/warName\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\u003cexecutions\u003e\u003cexecution\u003e\u003cid\u003eattach-sources\u003c/id\u003e\u003cphase\u003enone\u003c/phase\u003e\u003c/execution\u003e\u003c/executions\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003c/profile\u003e\u003c/profiles\u003e"}}],"links":[{"url":"https://quarkus.io/guides/maven-tooling#build-tool-maven","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"javaee-pom-to-quarkus-00050":{"description":"Adopt Maven Failsafe plugin\n","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"Use the Maven Failsafe plugin adding the following sections to the `pom.xml` file:. ```xml. \u003cproperties\u003e. \u003csurefire-plugin.version\u003e3.0.0\u003c/compiler-plugin.version\u003e. \u003c/properties\u003e. \u003cbuild\u003e. \u003cplugins\u003e. \u003cplugin\u003e. \u003cartifactId\u003emaven-failsafe-plugin\u003c/artifactId\u003e. \u003cversion\u003e$\u003c/version\u003e. \u003cexecutions\u003e. \u003cexecution\u003e. \u003cgoals\u003e. \u003cgoals\u003eintegration-test\u003c/goal\u003e. \u003cgoals\u003everify\u003c/goal\u003e. \u003c/goals\u003e. \u003cconfiguration\u003e. \u003csystemPropertyVariables\u003e. \u003cnative.image.path\u003e$/$-runner\u003c/native.image.path\u003e. \u003cjava.util.logging.manager\u003eorg.jboss.logmanager.LogManager\u003c/java.util.logging.manager\u003e. \u003cmaven.home\u003e$\u003c/maven.home\u003e. \u003c/systemPropertyVariables\u003e. \u003c/configuration\u003e. \u003c/execution\u003e. \u003c/executions\u003e. \u003c/plugin\u003e. \u003c/plugins\u003e. \u003c/build\u003e. ```","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\u003e\n 19      \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n 20      \u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\n 21      \u003cversion\u003e7.4.0.GA\u003c/version\u003e\n 22      \u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\n 23      \u003cpackaging\u003ewar\u003c/packaging\u003e\n 24      \u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\n 25      \u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\n 26  \n 27      \u003clicenses\u003e\n 28          \u003clicense\u003e\n 29              \u003cname\u003eApache License, Version 2.0\u003c/name\u003e\n 30              \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\n 31              \u003cdistribution\u003erepo\u003c/distribution\u003e\n 32          \u003c/license\u003e\n 33      \u003c/licenses\u003e\n 34  \u003cproperties\u003e\n 35  \n 36  \t\t\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\n 37  \t\t\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\n 38  \n 39  \t\t\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\n 40  \t\t\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\n 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  ","lineNumber":19,"variables":{"data":"project","innerText":"\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n    helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\n\n    \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n            provided\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_4.0_spec\n            provided\n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.3_spec\n            provided\n        \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n","matchingXML":"\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\u003cversion\u003e7.4.0.GA\u003c/version\u003e\u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\u003cpackaging\u003ewar\u003c/packaging\u003e\u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\u003clicenses\u003e\u003clicense\u003e\u003cname\u003eApache License, Version 2.0\u003c/name\u003e\u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\u003cdistribution\u003erepo\u003c/distribution\u003e\u003c/license\u003e\u003c/licenses\u003e\u003cproperties\u003e\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\u003c!-- A base list of dependency and plug-in version used in the various\r\n\t\tquick starts. --\u003e\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\u003c!-- other plug-in versions --\u003e\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\u003c!-- Explicitly declaring the source encoding eliminates the following\r\n\t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\n\t\tfiltered resources, i.e. build is platform dependent! --\u003e\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\u003c!-- Protocol to use for communication with remote maven repositories.\r\n\t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\n\t\tinterferes with that. Use 'https' for builds that will be released\r\n                     to\r\n\t\tnon-snapshot public maven repos --\u003e\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\u003c!-- The full remote maven repo URL; can be overridden via -D for\r\n\t\tspecial use cases --\u003e\u003cmaven.repository.url\u003e${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\u003c!-- https://access.redhat.com/maven-repository --\u003e\u003cmaven.redhat.repository.url\u003e${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\u003c!-- Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\n\t\t\"mvn clean install\"\r\n        --\u003e\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\u003c!-- Versions of unmanaged dependencies --\u003e\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\u003c/properties\u003e\u003crepositories\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\u003curl\u003e${maven.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003c/repositories\u003e\u003cdependencyManagement\u003e\u003cdependencies\u003e\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\tuseful artifacts as managed dependencies --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\u003cversion\u003e${version.server.bom}\u003c/version\u003e\u003ctype\u003epom\u003c/type\u003e\u003cscope\u003eimport\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003c/dependencyManagement\u003e\u003cdependencies\u003e\u003cdependency\u003e\u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c!-- Import the Servlet API, we use provided scope as the API is\r\n            included in JBoss EAP --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003cbuild\u003e\u003c!-- Set the name of the WAR, used as the context root when the app is\r\n\t\tdeployed --\u003e\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e2.4\u003c/version\u003e\u003cconfiguration\u003e\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003cprofiles\u003e\u003cprofile\u003e\u003c!-- When built in OpenShift the 'openshift' profile will be\r\n                used\r\n\t\t\twhen invoking mvn. --\u003e\u003c!-- Use this profile for any OpenShift specific customization\r\n                your\r\n\t\t\tapp will ne    ed. --\u003e\u003c!-- By default that is to put the resulting archive into the\r\n\t\t\t'deployments' folder. --\u003e\u003c!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\u003cid\u003eopenshift\u003c/id\u003e\u003cbuild\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\u003cconfiguration\u003e\u003cwarName\u003eROOT\u003c/warName\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\u003cexecutions\u003e\u003cexecution\u003e\u003cid\u003eattach-sources\u003c/id\u003e\u003cphase\u003enone\u003c/phase\u003e\u003c/execution\u003e\u003c/executions\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003c/profile\u003e\u003c/profiles\u003e"}}],"links":[{"url":"https://quarkus.io/guides/maven-tooling#build-tool-maven","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"javaee-pom-to-quarkus-00060":{"description":"Add Maven profile to run the Quarkus native build\nLeverage a Maven profile to run the Quarkus native build adding the following section to the `pom.xml` file:. ```xml. \u003cprofiles\u003e. \u003cprofile\u003e. \u003cid\u003enative\u003c/id\u003e. \u003cactivation\u003e. \u003cproperty\u003e. \u003cname\u003enative\u003c/name\u003e. \u003c/property\u003e. \u003c/activation\u003e. \u003cproperties\u003e. \u003cskipITs\u003efalse\u003c/skipITs\u003e. \u003cquarkus.package.type\u003enative\u003c/quarkus.package.type\u003e. \u003c/properties\u003e. \u003c/profile\u003e. \u003c/profiles\u003e. ```","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/pom.xml","message":"Leverage a Maven profile to run the Quarkus native build adding the following section to the `pom.xml` file:. ```xml. \u003cprofiles\u003e. \u003cprofile\u003e. \u003cid\u003enative\u003c/id\u003e. \u003cactivation\u003e. \u003cproperty\u003e. \u003cname\u003enative\u003c/name\u003e. \u003c/property\u003e. \u003c/activation\u003e. \u003cproperties\u003e. \u003cskipITs\u003efalse\u003c/skipITs\u003e. \u003cquarkus.package.type\u003enative\u003c/quarkus.package.type\u003e. \u003c/properties\u003e. \u003c/profile\u003e. \u003c/profiles\u003e. ```","codeSnip":"  1  \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n  2  \u003c!--\n  3      JBoss, Home of Professional Open Source\n  4      Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors by the @authors tag. See the copyright.txt in the\n  6      distribution for a full listing of individual contributors.\n  7  \n  8      Licensed under the Apache License, Version 2.0 (the \"License\");\n  9      you may not use this file except in compliance with the License.\n 10      You may obtain a copy of the License at\n 11      http://www.apache.org/licenses/LICENSE-2.0\n 12      Unless required by applicable law or agreed to in writing, software\n 13      distributed under the License is distributed on an \"AS IS\" BASIS,\n 14      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 15      See the License for the specific language governing permissions and\n 16      limitations under the License.\n 17  --\u003e\n 18  \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\u003e\n 19      \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n 20      \u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\n 21      \u003cversion\u003e7.4.0.GA\u003c/version\u003e\n 22      \u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\n 23      \u003cpackaging\u003ewar\u003c/packaging\u003e\n 24      \u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\n 25      \u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\n 26  \n 27      \u003clicenses\u003e\n 28          \u003clicense\u003e\n 29              \u003cname\u003eApache License, Version 2.0\u003c/name\u003e\n 30              \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\n 31              \u003cdistribution\u003erepo\u003c/distribution\u003e\n 32          \u003c/license\u003e\n 33      \u003c/licenses\u003e\n 34  \u003cproperties\u003e\n 35  \n 36  \t\t\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\n 37  \t\t\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\n 38  \n 39  \t\t\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\n 40  \t\t\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\n 41  \t\t\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\n 42  \t\t\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\n 43  \t\t\u003c!-- A base list of dependency and plug-in version used in the various\n 44  \t\tquick starts. --\u003e\n 45  \t\t\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\n 46  \t\t\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\n 47  \t\t\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\n 48  \t\t\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\n 49  \t\t\u003c!-- other plug-in versions --\u003e\n 50  \t\t\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\n 51  \t\t\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\n 52  \t\t\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\n 53  \t\t\u003c!-- Explicitly declaring the source encoding eliminates the following\n 54  \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n 55  \t\tfiltered resources, i.e. build is platform dependent! --\u003e\n 56  \t\t\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n 57  \n 58  \t\t\u003c!-- Protocol to use for communication with remote maven repositories.\n 59  \t\tYou can set to 'http' if you are using a maven proxy and 'https'\n 60  \t\tinterferes with that. Use 'https' for builds that will be released\n 61                       to\n 62  \t\tnon-snapshot public maven repos --\u003e\n 63  \t\t\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\n 64  \t\t\u003c!-- The full remote maven repo URL; can be overridden via -D for\n 65  \t\tspecial use cases --\u003e\n 66  \t\t\u003cmaven.repository.url\u003e\n 67  \t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\n 68  \t\t\u003c!-- https://access.redhat.com/maven-repository --\u003e\n 69  \t\t\u003cmaven.redhat.repository.url\u003e\n 70  \t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\n 71  \n 72  \t\t\u003c!-- Version of BOMs\n 73          note: a SNAPSHOT version *requires*\n 74  \t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\n 75  \t\t\"mvn clean install\"\n 76          --\u003e\n 77  \t\t\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\n 78  \n 79  \t\t\u003c!-- Versions of unmanaged dependencies --\u003e\n 80  \t\t\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\n 81  \t\t\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\n 82  \t\t\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\n 83  \n 84  \t\t\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\n 85  \t\t\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\n 86  \t\t\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\n 87  \t\t\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\n 88  \t\u003c/properties\u003e\n 89  \t\u003crepositories\u003e\n 90  \t\t\u003crepository\u003e\n 91  \t\t\t\u003creleases\u003e\n 92  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 93  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 94  \t\t\t\u003c/releases\u003e\n 95  \t\t\t\u003csnapshots\u003e\n 96  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n 97  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n 98  \t\t\t\u003c/snapshots\u003e\n 99  \t\t\t\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\n100  \t\t\t\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\n101  \t\t\t\u003curl\u003e${maven.repository.url}\u003c/url\u003e\n102  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n103  \t\t\u003c/repository\u003e\n104  \t\t\u003crepository\u003e\n105  \t\t\t\u003creleases\u003e\n106  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n107  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n108  \t\t\t\u003c/releases\u003e\n109  \t\t\t\u003csnapshots\u003e\n110  \t\t\t\t\u003cenabled\u003etrue\u003c/enabled\u003e\n111  \t\t\t\t\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\n112  \t\t\t\u003c/snapshots\u003e\n113  \t\t\t\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\n114  \t\t\t\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\n115  \t\t\t\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\n116  \t\t\t\u003clayout\u003edefault\u003c/layout\u003e\n117  \t\t\u003c/repository\u003e\n118  \t\u003c/repositories\u003e\n119  \t\u003cdependencyManagement\u003e\n120  ","lineNumber":19,"variables":{"data":"project","innerText":"\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n    helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\n\n    \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n            provided\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_4.0_spec\n            provided\n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.3_spec\n            provided\n        \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n","matchingXML":"\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\u003cgroupId\u003eorg.jboss.eap.quickstarts\u003c/groupId\u003e\u003cversion\u003e7.4.0.GA\u003c/version\u003e\u003cartifactId\u003ehelloworld-mdb\u003c/artifactId\u003e\u003cpackaging\u003ewar\u003c/packaging\u003e\u003cname\u003eQuickstart: helloworld-mdb\u003c/name\u003e\u003cdescription\u003eThis project demonstrates a hello world Message-Driven Bean with Servlet 3.0 as client\u003c/description\u003e\u003clicenses\u003e\u003clicense\u003e\u003cname\u003eApache License, Version 2.0\u003c/name\u003e\u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.html\u003c/url\u003e\u003cdistribution\u003erepo\u003c/distribution\u003e\u003c/license\u003e\u003c/licenses\u003e\u003cproperties\u003e\u003cmaven.compiler.source\u003e1.8\u003c/maven.compiler.source\u003e\u003cmaven.compiler.target\u003e1.8\u003c/maven.compiler.target\u003e\u003croot.dir\u003e${project.basedir}\u003c/root.dir\u003e\u003cjboss.home.name\u003eEAP7_HOME\u003c/jboss.home.name\u003e\u003cproduct.name\u003eJBoss EAP\u003c/product.name\u003e\u003cproduct.version\u003e7.4.0.GA\u003c/product.version\u003e\u003c!-- A base list of dependency and plug-in version used in the various\r\n\t\tquick starts. --\u003e\u003cversion.org.asciidoctor.asciidoctor-maven-plugin\u003e2.1.0\u003c/version.org.asciidoctor.asciidoctor-maven-plugin\u003e\u003cversion.wildfly.maven.plugin\u003e2.0.2.Final\u003c/version.wildfly.maven.plugin\u003e\u003cversion.org.wildfly.checkstyle-config\u003e1.0.7.Final\u003c/version.org.wildfly.checkstyle-config\u003e\u003cversion.org.wildfly.quickstarts.documentation.plugin\u003e2.3.0.Final\u003c/version.org.wildfly.quickstarts.documentation.plugin\u003e\u003c!-- other plug-in versions --\u003e\u003cversion.com.mycyla.license\u003e3.0\u003c/version.com.mycyla.license\u003e\u003cversion.checkstyle\u003e8.5\u003c/version.checkstyle\u003e\u003cversion.jaxws-tools-maven-plugin\u003e1.2.3.Final\u003c/version.jaxws-tools-maven-plugin\u003e\u003c!-- Explicitly declaring the source encoding eliminates the following\r\n\t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\n\t\tfiltered resources, i.e. build is platform dependent! --\u003e\u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\u003c!-- Protocol to use for communication with remote maven repositories.\r\n\t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\n\t\tinterferes with that. Use 'https' for builds that will be released\r\n                     to\r\n\t\tnon-snapshot public maven repos --\u003e\u003cmaven.repository.protocol\u003ehttps\u003c/maven.repository.protocol\u003e\u003c!-- The full remote maven repo URL; can be overridden via -D for\r\n\t\tspecial use cases --\u003e\u003cmaven.repository.url\u003e${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\u003c/maven.repository.url\u003e\u003c!-- https://access.redhat.com/maven-repository --\u003e\u003cmaven.redhat.repository.url\u003e${maven.repository.protocol}://maven.repository.redhat.com/ga/\u003c/maven.redhat.repository.url\u003e\u003c!-- Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\n\t\t\"mvn clean install\"\r\n        --\u003e\u003cversion.server.bom\u003e7.4.0.GA\u003c/version.server.bom\u003e\u003c!-- Versions of unmanaged dependencies --\u003e\u003cversion.arquillian.angularjs.graphene\u003e1.2.0.Beta1\u003c/version.arquillian.angularjs.graphene\u003e\u003cversion.org.json\u003e20150729\u003c/version.org.json\u003e\u003cversion.ro.isdc.wro4j\u003e1.7.9\u003c/version.ro.isdc.wro4j\u003e\u003cjboss.developer.drupal.url\u003ehttp://rhdp-drupal.stage.redhat.com/\u003c/jboss.developer.drupal.url\u003e\u003clinkXRef\u003efalse\u003c/linkXRef\u003e\u003cversion.microprofile.bom\u003e3.0.0.GA\u003c/version.microprofile.bom\u003e\u003cversion.war.plugin\u003e3.3.2\u003c/version.war.plugin\u003e\u003c/properties\u003e\u003crepositories\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-public-repository-group\u003c/id\u003e\u003cname\u003eJBoss Public Repository Group\u003c/name\u003e\u003curl\u003e${maven.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003crepository\u003e\u003creleases\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/releases\u003e\u003csnapshots\u003e\u003cenabled\u003etrue\u003c/enabled\u003e\u003cupdatePolicy\u003enever\u003c/updatePolicy\u003e\u003c/snapshots\u003e\u003cid\u003ejboss-enterprise-maven-repository\u003c/id\u003e\u003cname\u003eJBoss Enterprise Maven Repository\u003c/name\u003e\u003curl\u003e${maven.redhat.repository.url}\u003c/url\u003e\u003clayout\u003edefault\u003c/layout\u003e\u003c/repository\u003e\u003c/repositories\u003e\u003cdependencyManagement\u003e\u003cdependencies\u003e\u003c!-- importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\tuseful artifacts as managed dependencies --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.bom\u003c/groupId\u003e\u003cartifactId\u003ejboss-eap-jakartaee8-with-tools\u003c/artifactId\u003e\u003cversion\u003e${version.server.bom}\u003c/version\u003e\u003ctype\u003epom\u003c/type\u003e\u003cscope\u003eimport\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003c/dependencyManagement\u003e\u003cdependencies\u003e\u003cdependency\u003e\u003cgroupId\u003ejakarta.enterprise\u003c/groupId\u003e\u003cartifactId\u003ejakarta.enterprise.cdi-api\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.ejb\u003c/groupId\u003e\u003cartifactId\u003ejboss-ejb-api_3.2_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.jms\u003c/groupId\u003e\u003cartifactId\u003ejboss-jms-api_2.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c!-- Import the Servlet API, we use provided scope as the API is\r\n            included in JBoss EAP --\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.servlet\u003c/groupId\u003e\u003cartifactId\u003ejboss-servlet-api_4.0_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003cdependency\u003e\u003cgroupId\u003eorg.jboss.spec.javax.annotation\u003c/groupId\u003e\u003cartifactId\u003ejboss-annotations-api_1.3_spec\u003c/artifactId\u003e\u003cscope\u003eprovided\u003c/scope\u003e\u003c/dependency\u003e\u003c/dependencies\u003e\u003cbuild\u003e\u003c!-- Set the name of the WAR, used as the context root when the app is\r\n\t\tdeployed --\u003e\u003cfinalName\u003e${project.artifactId}\u003c/finalName\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e2.4\u003c/version\u003e\u003cconfiguration\u003e\u003cfailOnMissingWebXml\u003efalse\u003c/failOnMissingWebXml\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.wildfly.plugins\u003c/groupId\u003e\u003cartifactId\u003ewildfly-maven-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.wildfly.maven.plugin}\u003c/version\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003cprofiles\u003e\u003cprofile\u003e\u003c!-- When built in OpenShift the 'openshift' profile will be\r\n                used\r\n\t\t\twhen invoking mvn. --\u003e\u003c!-- Use this profile for any OpenShift specific customization\r\n                your\r\n\t\t\tapp will ne    ed. --\u003e\u003c!-- By default that is to put the resulting archive into the\r\n\t\t\t'deployments' folder. --\u003e\u003c!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html --\u003e\u003cid\u003eopenshift\u003c/id\u003e\u003cbuild\u003e\u003cplugins\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-war-plugin\u003c/artifactId\u003e\u003cversion\u003e${version.war.plugin}\u003c/version\u003e\u003cconfiguration\u003e\u003cwarName\u003eROOT\u003c/warName\u003e\u003c/configuration\u003e\u003c/plugin\u003e\u003cplugin\u003e\u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\u003cexecutions\u003e\u003cexecution\u003e\u003cid\u003eattach-sources\u003c/id\u003e\u003cphase\u003enone\u003c/phase\u003e\u003c/execution\u003e\u003c/executions\u003e\u003c/plugin\u003e\u003c/plugins\u003e\u003c/build\u003e\u003c/profile\u003e\u003c/profiles\u003e"}}],"links":[{"url":"https://quarkus.io/guides/maven-tooling#build-tool-maven","title":"Quarkus - Guide"}],"Extras":null,"effort":1}},"unmatched":["cdi-to-quarkus-00000","cdi-to-quarkus-00020","cdi-to-quarkus-00040","cdi-to-quarkus-00050","javaee-faces-to-quarkus-00000","javaee-pom-to-quarkus-00070","javaee-pom-to-quarkus-00080","jaxrs-to-quarkus-00000","jaxrs-to-quarkus-00010","jaxrs-to-quarkus-00020","quarkus-agroal-00000","quarkus-agroal-00010","quarkus-amazon-dynamodb-00000","quarkus-amazon-dynamodb-00010","quarkus-amazon-iam-00000","quarkus-amazon-iam-00010","quarkus-amazon-kms-00000","quarkus-amazon-kms-00010","quarkus-amazon-lambda-http-00000","quarkus-amazon-lambda-http-00010","quarkus-amazon-lambda-rest-00000","quarkus-amazon-lambda-rest-00010","quarkus-amazon-lambda-xray-00000","quarkus-amazon-lambda-xray-00010","quarkus-amazon-s3-00000","quarkus-amazon-s3-00010","quarkus-amazon-ses-00000","quarkus-amazon-ses-00010","quarkus-amazon-sns-00000","quarkus-amazon-sns-00010","quarkus-amazon-sqs-00000","quarkus-amazon-sqs-00010","quarkus-amazon-ssm-00000","quarkus-amazon-ssm-00010","quarkus-apicurio-registry-avro-00000","quarkus-apicurio-registry-avro-00010","quarkus-artemis-jms-00000","quarkus-artemis-jms-00010","quarkus-avro-00000","quarkus-avro-00010","quarkus-config-yaml-00000","quarkus-config-yaml-00010","quarkus-elytron-security-jdbc-00000","quarkus-elytron-security-jdbc-00010","quarkus-elytron-security-ldap-00000","quarkus-elytron-security-ldap-00010","quarkus-elytron-security-oauth2-00000","quarkus-elytron-security-oauth2-00010","quarkus-flyway-00000","quarkus-flyway-00010","quarkus-hibernate-envers-00000","quarkus-hibernate-envers-00010","quarkus-hibernate-reactive-00000","quarkus-hibernate-reactive-00010","quarkus-hibernate-search-orm-elasticsearch-aws-00000","quarkus-hibernate-search-orm-elasticsearch-aws-00010","quarkus-hibernate-validator-00000","quarkus-hibernate-validator-00010","quarkus-jdbc-db2-00000","quarkus-jdbc-db2-00010","quarkus-jdbc-derby-00000","quarkus-jdbc-derby-00010","quarkus-jdbc-mariadb-00000","quarkus-jdbc-mariadb-00010","quarkus-jdbc-mysql-00000","quarkus-jdbc-mysql-00010","quarkus-jdbc-oracle-00000","quarkus-jdbc-oracle-00010","quarkus-jdbc-postgresql-00000","quarkus-jdbc-postgresql-00010","quarkus-jsonb-00000","quarkus-jsonb-00010","quarkus-jsonp-00000","quarkus-jsonp-00010","quarkus-kafka-client-00000","quarkus-kafka-client-00010","quarkus-kafka-streams-00000","quarkus-kafka-streams-00010","quarkus-keycloak-admin-client-00000","quarkus-keycloak-admin-client-00010","quarkus-kubernetes-client-00000","quarkus-kubernetes-client-00010","quarkus-liquibase-00000","quarkus-liquibase-00010","quarkus-liquibase-mongodb-00000","quarkus-liquibase-mongodb-00010","quarkus-logging-gelf-00000","quarkus-logging-gelf-00010","quarkus-logging-sentry-00000","quarkus-logging-sentry-00010","quarkus-micrometer-registry-prometheus-00000","quarkus-micrometer-registry-prometheus-00010","quarkus-narayana-jta-00000","quarkus-narayana-jta-00010","quarkus-narayana-lra-00000","quarkus-narayana-lra-00010","quarkus-narayana-stm-00000","quarkus-narayana-stm-00010","quarkus-openshift-client-00000","quarkus-openshift-client-00010","quarkus-opentelemetry-exporter-jaeger-00000","quarkus-opentelemetry-exporter-jaeger-00010","quarkus-opentelemetry-exporter-otlp-00000","quarkus-opentelemetry-exporter-otlp-00010","quarkus-picocli-00000","quarkus-picocli-00010","quarkus-resteasy-multipart-00000","quarkus-resteasy-multipart-00010","springboot-actuator-to-quarkus-0100","springboot-actuator-to-quarkus-0200","springboot-annotations-to-quarkus-00000","springboot-cache-to-quarkus-00000","springboot-cloud-config-client-to-quarkus-00000","springboot-devtools-to-quarkus-0000","springboot-di-to-quarkus-00000","springboot-di-to-quarkus-00001","springboot-di-to-quarkus-00002","springboot-generic-catchall-00100","springboot-integration-to-quarkus-00010","springboot-integration-to-quarkus-00020","springboot-jmx-to-quarkus-00000","springboot-jmx-to-quarkus-00001","springboot-jpa-to-quarkus-00000","springboot-metrics-to-quarkus-0100","springboot-metrics-to-quarkus-0200","springboot-metrics-to-quarkus-0300","springboot-parent-pom-to-quarkus-00000","springboot-plugins-to-quarkus-0000","springboot-properties-to-quarkus-00000","springboot-properties-to-quarkus-00001","springboot-properties-to-quarkus-00002","springboot-properties-to-quarkus-00003","springboot-properties-to-quarkus-00004","springboot-properties-to-quarkus-00005","springboot-properties-to-quarkus-00006","springboot-scheduled-to-quarkus-00000","springboot-security-to-quarkus-00000","springboot-shell-to-quarkus-00000","springboot-web-to-quarkus-00000","springboot-web-to-quarkus-00010","springboot-webmvc-to-quarkus-00000","springboot-webmvc-to-quarkus-01000"]},{"name":"rhr/springboot","description":"Verify the version of the Spring Boot framework is compatible with those supported by Red Hat Runtimes","skipped":["springboot-00001","springboot-00002","springboot-associated-00001","springboot-associated-00002","springboot-associated-00003","springboot-associated-00004","springboot-associated-00005","springboot-associated-00006","springboot-associated-00007","springboot-associated-00008","springboot-associated-00009","springboot-associated-00010","springboot-associated-00011","springboot-associated-00012","springboot-associated-00013","springboot-associated-00014","springboot-associated-00015"]},{"name":"ruleset","description":"temp ruleset","violations":{"jms-to-reactive-quarkus-00010":{"description":"@MessageDriven - EJBs are not supported in Quarkus","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must be used.\n Please replace the `@MessageDriven` annotation with a CDI scope annotation like `@ApplicationScoped`.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":34,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Class","name":"MessageDriven"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must be used.\n Please replace the `@MessageDriven` annotation with a CDI scope annotation like `@ApplicationScoped`.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":34,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Class","name":"MessageDriven"}}],"links":[{"url":"https://quarkus.io/guides","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"jms-to-reactive-quarkus-00020":{"description":"Configure message listener method with @Incoming","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n The `destinationLookup` property can be migrated by annotating a message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming` annotation, indicating the name of the queue as a value:\n \n Before:\n ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = \n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":35,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Class","name":"MessageDriven"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n The `destinationLookup` property can be migrated by annotating a message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming` annotation, indicating the name of the queue as a value:\n \n Before:\n ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = \n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":36,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Class","name":"MessageDriven"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n The `destinationLookup` property can be migrated by annotating a message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming` annotation, indicating the name of the queue as a value:\n \n Before:\n ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = \n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":37,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Class","name":"MessageDriven"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n The `destinationLookup` property can be migrated by annotating a message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming` annotation, indicating the name of the queue as a value:\n \n Before:\n ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = \n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":35,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Class","name":"MessageDriven"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n The `destinationLookup` property can be migrated by annotating a message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming` annotation, indicating the name of the queue as a value:\n \n Before:\n ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = \n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":36,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Class","name":"MessageDriven"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n The `destinationLookup` property can be migrated by annotating a message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming` annotation, indicating the name of the queue as a value:\n \n Before:\n ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = \n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener \n }}\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":37,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Class","name":"MessageDriven"}}],"links":[{"url":"https://quarkus.io/guides","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"jms-to-reactive-quarkus-00030":{"description":"javax.jms.Queue must be replaced with an Emitter","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding a Channel. See the following example of migrating\n a Queue to an Emitter:\n \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"HELLOWORLDMDBQueue\")\n Emitter\u003cString\u003e queueEmitter;\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":28,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Queue"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding a Channel. See the following example of migrating\n a Queue to an Emitter:\n \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"HELLOWORLDMDBQueue\")\n Emitter\u003cString\u003e queueEmitter;\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":79,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Field","name":"queue"}}],"links":[{"url":"https://smallrye.io/smallrye-reactive-messaging/2.0.2/apidocs/org/eclipse/microprofile/reactive/messaging/Emitter.html","title":"Emitter (Microprofile Reactive Streams Messaging)"},{"url":"https://quarkus.io/guides","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"jms-to-reactive-quarkus-00030-01":{"description":"javax.jms.Topic must be replaced with an Emitter","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding a Channel. See the following example of migrating\n a Topic to an Emitter:\n \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"HELLOWORLDMDBTopic\")\n Emitter\u003cString\u003e topicEmitter;\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":29,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Topic"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding a Channel. See the following example of migrating\n a Topic to an Emitter:\n \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"HELLOWORLDMDBTopic\")\n Emitter\u003cString\u003e topicEmitter;\n ```\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":82,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Field","name":"topic"}}],"links":[{"url":"https://smallrye.io/smallrye-reactive-messaging/2.0.2/apidocs/org/eclipse/microprofile/reactive/messaging/Emitter.html","title":"Emitter (Microprofile Reactive Streams Messaging)"},{"url":"https://quarkus.io/guides","title":"Quarkus - Guide"}],"Extras":null,"effort":1},"jms-to-reactive-quarkus-00050":{"description":"JMS is not supported in Quarkus","category":"mandatory","labels":["konveyor.io/source=java-ee","konveyor.io/target=quarkus"],"incidents":[{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":22,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.JMSException"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":23,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.Message"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":24,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.MessageListener"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the queue.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"queue/HELLOWORLDMDBQueue\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldQueueMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldQueueMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from queue: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":25,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java","kind":"Module","name":"javax.jms.TextMessage"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":22,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.JMSException"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":23,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.Message"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":24,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.MessageListener"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.mdb;\n 18  \n 19  import java.util.logging.Logger;\n 20  import javax.ejb.ActivationConfigProperty;\n 21  import javax.ejb.MessageDriven;\n 22  import javax.jms.JMSException;\n 23  import javax.jms.Message;\n 24  import javax.jms.MessageListener;\n 25  import javax.jms.TextMessage;\n 26  \n 27  /**\n 28   * \u003cp\u003e\n 29   * A simple Message Driven Bean that asynchronously receives and processes the messages that are sent to the topic.\n 30   * \u003c/p\u003e\n 31   *\n 32   * @author Serge Pagop (spagop@redhat.com)\n 33   */\n 34  @MessageDriven(name = \"HelloWorldQTopicMDB\", activationConfig = {\n 35          @ActivationConfigProperty(propertyName = \"destinationLookup\", propertyValue = \"topic/HELLOWORLDMDBTopic\"),\n 36          @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n 37          @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n 38  public class HelloWorldTopicMDB implements MessageListener {\n 39  \n 40      private static final Logger LOGGER = Logger.getLogger(HelloWorldTopicMDB.class.toString());\n 41  \n 42      /**\n 43       * @see MessageListener#onMessage(Message)\n 44       */\n 45      public void onMessage(Message rcvMessage) {\n 46          TextMessage msg = null;\n 47          try {\n 48              if (rcvMessage instanceof TextMessage) {\n 49                  msg = (TextMessage) rcvMessage;\n 50                  LOGGER.info(\"Received Message from topic: \" + msg.getText());\n 51              } else {\n 52                  LOGGER.warning(\"Message of wrong type: \" + rcvMessage.getClass().getName());\n 53              }\n 54          } catch (JMSException e) {\n 55              throw new RuntimeException(e);\n 56          }\n 57      }\n 58  }\n","lineNumber":25,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java","kind":"Module","name":"javax.jms.TextMessage"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":24,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Destination"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":25,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.JMSContext"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":26,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.JMSDestinationDefinition"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":27,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.JMSDestinationDefinitions"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":28,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Queue"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"\n \n References to JavaEE/JakartaEE JMS elements should be removed and replaced with their Quarkus SmallRye/Microprofile equivalents.\n \n ","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":29,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.jms.Topic"}}],"links":[{"url":"https://quarkus.io/guides","title":"Quarkus - Guide"}],"Extras":null,"effort":1}},"unmatched":["jms-to-reactive-quarkus-00000"]},{"name":"technology-usage","description":"This ruleset provides analysis of logging libraries.","tags":["Bean=EJB XML","CDI","Connect=EJB XML","Connect=Servlet","Execute=CDI","HTTP=Servlet","Inversion of Control=CDI","Java EE=CDI","Java EE=EJB XML","Java EE=Servlet","Java Servlet","Servlet"],"violations":{"javaee-technology-usage-00120":{"description":"Java Servlet","category":"potential","labels":["konveyor.io/include=always"],"incidents":[{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"The application uses Java Servlets","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":30,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.ServletException"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"The application uses Java Servlets","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":31,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.annotation.WebServlet"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"The application uses Java Servlets","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":32,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.http.HttpServlet"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"The application uses Java Servlets","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":33,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.http.HttpServletRequest"}},{"uri":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","message":"The application uses Java Servlets","codeSnip":"  1  /*\n  2   * JBoss, Home of Professional Open Source\n  3   * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual\n  4   * contributors by the @authors tag. See the copyright.txt in the\n  5   * distribution for a full listing of individual contributors.\n  6   *\n  7   * Licensed under the Apache License, Version 2.0 (the \"License\");\n  8   * you may not use this file except in compliance with the License.\n  9   * You may obtain a copy of the License at\n 10   * http://www.apache.org/licenses/LICENSE-2.0\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.jboss.as.quickstarts.servlet;\n 18  \n 19  import java.io.IOException;\n 20  import java.io.PrintWriter;\n 21  \n 22  import javax.annotation.Resource;\n 23  import javax.inject.Inject;\n 24  import javax.jms.Destination;\n 25  import javax.jms.JMSContext;\n 26  import javax.jms.JMSDestinationDefinition;\n 27  import javax.jms.JMSDestinationDefinitions;\n 28  import javax.jms.Queue;\n 29  import javax.jms.Topic;\n 30  import javax.servlet.ServletException;\n 31  import javax.servlet.annotation.WebServlet;\n 32  import javax.servlet.http.HttpServlet;\n 33  import javax.servlet.http.HttpServletRequest;\n 34  import javax.servlet.http.HttpServletResponse;\n 35  \n 36  /**\n 37   * Definition of the two JMS destinations used by the quickstart\n 38   * (one queue and one topic).\n 39   */\n 40  @JMSDestinationDefinitions(\n 41      value = {\n 42          @JMSDestinationDefinition(\n 43              name = \"java:/queue/HELLOWORLDMDBQueue\",\n 44              interfaceName = \"javax.jms.Queue\",\n 45              destinationName = \"HelloWorldMDBQueue\"\n 46          ),\n 47          @JMSDestinationDefinition(\n 48              name = \"java:/topic/HELLOWORLDMDBTopic\",\n 49              interfaceName = \"javax.jms.Topic\",\n 50              destinationName = \"HelloWorldMDBTopic\"\n 51          )\n 52      }\n 53  )\n 54  \n 55  /**\n 56   * \u003cp\u003e\n 57   * A simple servlet 3 as client that sends several messages to a queue or a topic.\n 58   * \u003c/p\u003e\n 59   *\n 60   * \u003cp\u003e\n 61   * The servlet is registered and mapped to /HelloWorldMDBServletClient using the {@linkplain WebServlet\n 62   * @HttpServlet}.\n 63   * \u003c/p\u003e\n 64   *\n 65   * @author Serge Pagop (spagop@redhat.com)\n 66   *\n 67   */\n 68  @WebServlet(\"/HelloWorldMDBServletClient\")\n 69  public class HelloWorldMDBServletClient extends HttpServlet {\n 70  \n 71      private static final long serialVersionUID = -8314035702649252239L;\n 72  \n 73      private static final int MSG_COUNT = 5;\n 74  \n 75      @Inject\n 76      private JMSContext context;\n 77  \n 78      @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\")\n 79      private Queue queue;\n 80  \n 81      @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\")\n 82      private Topic topic;\n 83  \n 84      @Override\n 85      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n 86          resp.setContentType(\"text/html\");\n 87          PrintWriter out = resp.getWriter();\n 88          out.write(\"\u003ch1\u003eQuickstart: Example demonstrates the use of \u003cstrong\u003eJMS 2.0\u003c/strong\u003e and \u003cstrong\u003eEJB 3.2 Message-Driven Bean\u003c/strong\u003e in JBoss EAP.\u003c/h1\u003e\");\n 89          try {\n 90              boolean useTopic = req.getParameterMap().keySet().contains(\"topic\");\n 91              final Destination destination = useTopic ? topic : queue;\n 92  \n 93              out.write(\"\u003cp\u003eSending messages to \u003cem\u003e\" + destination + \"\u003c/em\u003e\u003c/p\u003e\");\n 94              out.write(\"\u003ch2\u003eThe following messages will be sent to the destination:\u003c/h2\u003e\");\n 95              for (int i = 0; i \u003c MSG_COUNT; i++) {\n 96                  String text = \"This is message \" + (i + 1);\n 97                  context.createProducer().send(destination, text);\n 98                  out.write(\"Message (\" + i + \"): \" + text + \"\u003c/br\u003e\");\n 99              }\n100              out.write(\"\u003cp\u003e\u003ci\u003eGo to your JBoss EAP server console or server log to see the result of messages processing.\u003c/i\u003e\u003c/p\u003e\");\n101          } finally {\n102              if (out != null) {\n103                  out.close();\n104              }\n105          }\n106      }\n107  \n108      protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n109          doGet(req, resp);\n110      }\n111  }\n","lineNumber":34,"variables":{"file":"file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java","kind":"Module","name":"javax.servlet.http.HttpServletResponse"}}],"Extras":null}},"unmatched":["3rd-party-01000","3rd-party-01000","3rd-party-02000","3rd-party-02000","3rd-party-03000","3rd-party-03000","3rd-party-04000","3rd-party-04000","3rd-party-05000","3rd-party-05000","3rd-party-06000","3rd-party-06000","3rd-party-07000","3rd-party-07000","3rd-party-08000","3rd-party-08000","3rd-party-09000","3rd-party-09000","3rd-party-10000","3rd-party-10000","3rd-party-11000","3rd-party-11000","3rd-party-12000","3rd-party-12000","3rd-party-13000","3rd-party-13000","3rd-party-14000","3rd-party-14000","3rd-party-15000","3rd-party-15000","3rd-party-16000","3rd-party-16000","3rd-party-17000","3rd-party-17000","3rd-party-18000","3rd-party-18000","3rd-party-19000","3rd-party-19000","clustering-00000","clustering-00001","configuration-management-0100","configuration-management-0100","configuration-management-0200","configuration-management-0200","configuration-management-0300","configuration-management-0300","configuration-management-0400","configuration-management-0400","configuration-management-0500","configuration-management-0500","configuration-management-technology-usage-0100","configuration-management-technology-usage-0200","configuration-management-technology-usage-0300","connect-01400","connect-01400","connect-01500","connect-01500","connect-01600","connect-01600","connect-01700","connect-01700","connect-01800","connect-01800","connect-01900","connect-01900","connect-02000","connect-02000","connect-02100","connect-02100","connect-02200","connect-02200","connect-02300","connect-02300","connect-02400","connect-02400","connect-02500","connect-02500","connect-02600","connect-02600","connect-02700","connect-02700","connect-02800","connect-02800","database-01400","database-01400","database-01500","database-01500","database-01600","database-01600","database-01700","database-01700","database-01800","database-01800","database-01900","database-01900","database-02000","database-02000","database-02100","database-02100","database-02200","database-02200","database-02300","database-02300","database-02400","database-02400","database-02500","database-02500","database-02600","database-02600","database-02700","database-02700","database-02800","database-02800","database-02900","database-02900","database-03100","database-03100","database-03200","database-03200","ejb-01000","ejb-01000","embedded-framework-01000","embedded-framework-01000","embedded-framework-01010","embedded-framework-01010","embedded-framework-01100","embedded-framework-01100","embedded-framework-01200","embedded-framework-01200","embedded-framework-01300","embedded-framework-01300","embedded-framework-01400","embedded-framework-01400","embedded-framework-01500","embedded-framework-01500","embedded-framework-01600","embedded-framework-01600","embedded-framework-01700","embedded-framework-01700","embedded-framework-02000","embedded-framework-02000","embedded-framework-02200","embedded-framework-02200","embedded-framework-02300","embedded-framework-02300","embedded-framework-02400","embedded-framework-02400","embedded-framework-03000","embedded-framework-03000","embedded-framework-03100","embedded-framework-03100","embedded-framework-03200","embedded-framework-03200","embedded-framework-03300","embedded-framework-03300","embedded-framework-03400","embedded-framework-03400","embedded-framework-04700","embedded-framework-04700","embedded-framework-05000","embedded-framework-05000","embedded-framework-05100","embedded-framework-05100","embedded-framework-05300","embedded-framework-05300","embedded-framework-05400","embedded-framework-05400","embedded-framework-05500","embedded-framework-05500","embedded-framework-05600","embedded-framework-05600","embedded-framework-05700","embedded-framework-05700","embedded-framework-05800","embedded-framework-05800","embedded-framework-05900","embedded-framework-05900","embedded-framework-06000","embedded-framework-06000","embedded-framework-06100","embedded-framework-06100","embedded-framework-06200","embedded-framework-06200","embedded-framework-06300","embedded-framework-06300","embedded-framework-06400","embedded-framework-06400","embedded-framework-06500","embedded-framework-06500","embedded-framework-06600","embedded-framework-06600","embedded-framework-06700","embedded-framework-06700","embedded-framework-06800","embedded-framework-06800","embedded-framework-06900","embedded-framework-06900","embedded-framework-07000","embedded-framework-07000","embedded-framework-07100","embedded-framework-07100","embedded-framework-07200","embedded-framework-07200","embedded-framework-07300","embedded-framework-07300","embedded-framework-07400","embedded-framework-07400","embedded-framework-07500","embedded-framework-07500","embedded-framework-07600","embedded-framework-07600","embedded-framework-07700","embedded-framework-07700","embedded-framework-07800","embedded-framework-07800","embedded-framework-07900","embedded-framework-07900","embedded-framework-08000","embedded-framework-08000","embedded-framework-08100","embedded-framework-08100","embedded-framework-08200","embedded-framework-08200","embedded-framework-08300","embedded-framework-08300","embedded-framework-08400","embedded-framework-08400","embedded-framework-08500","embedded-framework-08500","embedded-framework-08600","embedded-framework-08600","embedded-framework-08700","embedded-framework-08700","embedded-framework-08800","embedded-framework-08800","embedded-framework-08900","embedded-framework-08900","embedded-framework-09000","embedded-framework-09000","embedded-framework-09100","embedded-framework-09100","embedded-framework-09200","embedded-framework-09200","embedded-framework-09300","embedded-framework-09300","embedded-framework-embedded-framework-02700","embedded-framework-embedded-framework-02800","embedded-framework-embedded-framework-02900","embedded-framework-embedded-framework-03000","embedded-framework-embedded-framework-03100","embedded-framework-embedded-framework-03200","embedded-framework-embedded-framework-03300","embedded-framework-embedded-framework-03400","embedded-framework-embedded-framework-03500","embedded-framework-embedded-framework-03600","embedded-framework-embedded-framework-03700","embedded-framework-embedded-framework-03800","embedded-framework-embedded-framework-03900","embedded-framework-embedded-framework-04000","embedded-framework-embedded-framework-04100","embedded-framework-embedded-framework-04200","embedded-framework-embedded-framework-04300","embedded-framework-embedded-framework-04400","embedded-framework-embedded-framework-04500","embedded-framework-embedded-framework-04600","embedded-framework-embedded-framework-09200","embedded-framework-embedded-framework-09300","integration-00001","integration-00001","integration-00002","integration-00002","integration-00003","integration-00003","integration-00004","integration-00004","integration-00005","integration-00005","integration-00006","integration-00006","integration-00007","integration-00007","integration-00008","integration-00008","integration-00009","integration-00009","integration-00010","integration-00010","integration-00011","integration-00011","integration-00012","integration-00012","integration-00013","integration-00013","integration-00014","integration-00014","integration-00015","integration-00015","integration-00016","integration-00016","integration-00017","integration-00017","javaee-technology-usage-00010","javaee-technology-usage-00011","javaee-technology-usage-00012","javaee-technology-usage-00013","javaee-technology-usage-00020-jakarta","javaee-technology-usage-00030","javaee-technology-usage-00031","javaee-technology-usage-00040","javaee-technology-usage-00040","javaee-technology-usage-00050","javaee-technology-usage-00050","javaee-technology-usage-00060","javaee-technology-usage-00060","javaee-technology-usage-00070","javaee-technology-usage-00070","javaee-technology-usage-00080","javaee-technology-usage-00080","javaee-technology-usage-00090","javaee-technology-usage-00090","javaee-technology-usage-00100","javaee-technology-usage-00100","javaee-technology-usage-00110","javaee-technology-usage-00110","javaee-technology-usage-00130","javaee-technology-usage-00130","javaee-technology-usage-00140","javaee-technology-usage-00150","javaee-technology-usage-00160","javaee-technology-usage-00170","javaee-technology-usage-00180","javaee-technology-usage-00190","javaee-technology-usage-00200","javaee-technology-usage-00210","javaee-technology-usage-00220","javaee-technology-usage-00902","javaee-technology-usage-00903","javaee-technology-usage-00905","javaee-technology-usage-00906","javaee-technology-usage-00910","javaee-technology-usage-00911","javaee-technology-usage-00912","javaee-technology-usage-00913","javaee-technology-usage-00914","javaee-technology-usage-00915","javaee-technology-usage-00916","javaee-technology-usage-00917","javaee-technology-usage-00918","javaee-technology-usage-00926","javaee-technology-usage-00927","javaee-technology-usage-00928","javaee-technology-usage-00930","javaee-technology-usage-00931","javaee-technology-usage-00932","javaee-technology-usage-00950","javaee-technology-usage-00951","javaee-technology-usage-00952","javaee-technology-usage-00953","javaee-technology-usage-00954","javaee-technology-usage-00955","javaee-technology-usage-00956","javaee-technology-usage-00957","javaee-technology-usage-00958","javase-01000","javase-01000","javase-01100","javase-01100","javase-technology-usage-01000","jta-00020","jta-00020","jta-00030","jta-00030","jta-00040","jta-00040","jta-00050","jta-00050","jta-00060","jta-00060","jta-00070","jta-00070","jta-00080","jta-00080","jta-00090","jta-00090","jta-00100","jta-00100","jta-00110","jta-00110","jta-00120","jta-00120","jta-00130","jta-00130","jta-00140","jta-00140","jta-00150","jta-00150","jta-00160","jta-00160","jta-00170","jta-00170","jta-00180","jta-00180","jta-00190","jta-00190","jta-00200","jta-00200","jta-00210","jta-00210","logging-usage-00010","logging-usage-00010","logging-usage-00020","logging-usage-00020","logging-usage-00030","logging-usage-00030","logging-usage-00040","logging-usage-00040","logging-usage-00050","logging-usage-00050","logging-usage-00080","logging-usage-00080","logging-usage-00090","logging-usage-00090","logging-usage-00100","logging-usage-00100","logging-usage-00110","logging-usage-00110","logging-usage-00120","logging-usage-00120","logging-usage-00130","logging-usage-00130","logging-usage-00140","logging-usage-00140","logging-usage-00150","logging-usage-00150","logging-usage-00160","logging-usage-00160","logging-usage-00170","logging-usage-00170","logging-usage-00180","logging-usage-00180","logging-usage-00190","logging-usage-00190","logging-usage-00200","logging-usage-00200","logging-usage-00210","logging-usage-00210","logging-usage-00220","logging-usage-00220","logging-usage-00230","logging-usage-00230","logging-usage-00240","logging-usage-00240","logging-usage-00250","logging-usage-00250","logging-usage-00260","logging-usage-00260","logging-usage-00270","logging-usage-00270","logging-usage-00280","logging-usage-00280","logging-usage-00290","logging-usage-00290","mvc-01000","mvc-01000","mvc-01100","mvc-01100","mvc-01200","mvc-01200","mvc-01210","mvc-01210","mvc-01220","mvc-01220","mvc-01300","mvc-01300","mvc-01400","mvc-01400","mvc-01500","mvc-01500","mvc-01600","mvc-01600","mvc-01700","mvc-01700","mvc-01800","mvc-01800","mvc-01900","mvc-01900","mvc-02000","mvc-02000","mvc-02100","mvc-02100","mvc-02200","mvc-02200","mvc-02300","mvc-02300","mvc-02400","mvc-02400","mvc-02500","mvc-02500","mvc-02600","mvc-02600","mvc-02700","mvc-02700","mvc-02800","mvc-02800","mvc-02900","mvc-02900","mvc-03000","mvc-03000","mvc-03100","mvc-03100","mvc-03200","mvc-03200","mvc-03300","mvc-03300","mvc-03400","mvc-03400","mvc-03500","mvc-03500","mvc-03600","mvc-03600","mvc-03700","mvc-03700","mvc-03800","mvc-03800","mvc-03900","mvc-03900","mvc-04000","mvc-04000","mvc-04100","mvc-04100","mvc-04200","mvc-04200","mvc-04300","mvc-04300","mvc-04400","mvc-04400","mvc-04500","mvc-04500","mvc-04600","mvc-04600","mvc-04700","mvc-04700","mvc-04800","mvc-04800","mvc-04900","mvc-04900","mvc-05000","mvc-05000","mvc-05100","mvc-05100","mvc-05200","mvc-05200","mvc-05300","mvc-05300","mvc-05400","mvc-05400","mvc-05500","mvc-05500","mvc-05600","mvc-05600","mvc-05700","mvc-05700","mvc-05800","mvc-05800","mvc-05900","mvc-05900","mvc-06000","mvc-06000","non-xml-technology-usage-05000","non-xml-technology-usage-06000","non-xml-technology-usage-12000","non-xml-technology-usage-13000","non-xml-technology-usage-14000","non-xml-technology-usage-17000","non-xml-technology-usage-18000","non-xml-technology-usage-19000","non-xml-technology-usage-20000","non-xml-technology-usage-21000","non-xml-technology-usage-22000","non-xml-technology-usage-23000","non-xml-technology-usage-24000","non-xml-technology-usage-25000","non-xml-technology-usage-26000","non-xml-technology-usage-27000","observability-0100","observability-0100","observability-0200","observability-0200","observability-technology-usage-0100","observability-technology-usage-0200","security-01100","security-01100","security-01200","security-01200","security-01300","security-01300","security-01400","security-01400","security-01500","security-01500","security-01600","security-01600","security-01700","security-01700","security-01800","security-01800","security-01900","security-01900","security-02000","security-02000","security-02100","security-02100","security-02200","security-02200","security-02300","security-02300","security-02400","security-02400","security-02500","security-02500","security-02600","security-02600","security-02700","security-02700","security-02800","security-02800","security-02900","security-02900","security-03000","security-03000","security-03100","security-03100","security-03200","security-03200","security-03300","security-03300","security-03400","security-03400","security-03500","security-03500","security-03600","security-03600","spring-catchall-00001","spring-catchall-00001","technology-usage-3rd-party-01000","technology-usage-3rd-party-02000","technology-usage-3rd-party-03000","technology-usage-3rd-party-04000","technology-usage-3rd-party-05000","technology-usage-3rd-party-06000","technology-usage-3rd-party-08000","technology-usage-3rd-party-09000","technology-usage-3rd-party-10000","technology-usage-3rd-party-11000","technology-usage-3rd-party-12000","technology-usage-3rd-party-13000","technology-usage-3rd-party-14000","technology-usage-3rd-party-15000","technology-usage-3rd-party-16000","technology-usage-3rd-party-17000","technology-usage-3rd-party-18000","technology-usage-3rd-party-19000","technology-usage-3rd-party-20000","technology-usage-clustering-01000","technology-usage-clustering-02000","technology-usage-connect-01100","technology-usage-connect-01101","technology-usage-connect-01101","technology-usage-connect-01200","technology-usage-connect-01200","technology-usage-connect-01300","technology-usage-connect-01300","technology-usage-connect-01400","technology-usage-connect-01500","technology-usage-connect-01600","technology-usage-connect-01700","technology-usage-connect-01800","technology-usage-connect-01900","technology-usage-connect-02000","technology-usage-connect-02100","technology-usage-connect-02200","technology-usage-connect-02300","technology-usage-connect-02400","technology-usage-connect-02500","technology-usage-connect-02600","technology-usage-connect-02700","technology-usage-connect-02800","technology-usage-database-01400","technology-usage-database-01500","technology-usage-database-01600","technology-usage-database-01700","technology-usage-database-01800","technology-usage-database-01900","technology-usage-database-02000","technology-usage-database-02100","technology-usage-database-02200","technology-usage-database-02300","technology-usage-database-02400","technology-usage-database-02500","technology-usage-database-02600","technology-usage-database-02700","technology-usage-database-02800","technology-usage-database-02900","technology-usage-database-03100","technology-usage-database-03200","technology-usage-ejb-01400","technology-usage-embedded-framework-01000","technology-usage-embedded-framework-01010","technology-usage-embedded-framework-01100","technology-usage-embedded-framework-01200","technology-usage-embedded-framework-01300","technology-usage-embedded-framework-01400","technology-usage-embedded-framework-01500","technology-usage-embedded-framework-01600","technology-usage-embedded-framework-01700","technology-usage-embedded-framework-02000","technology-usage-embedded-framework-02100","technology-usage-embedded-framework-02200","technology-usage-embedded-framework-02300","technology-usage-embedded-framework-02400","technology-usage-embedded-framework-04700","technology-usage-embedded-framework-05000","technology-usage-embedded-framework-05100","technology-usage-embedded-framework-05300","technology-usage-embedded-framework-05400","technology-usage-embedded-framework-05600","technology-usage-embedded-framework-05700","technology-usage-embedded-framework-05800","technology-usage-embedded-framework-05900","technology-usage-embedded-framework-06000","technology-usage-embedded-framework-06100","technology-usage-embedded-framework-06200","technology-usage-embedded-framework-06300","technology-usage-embedded-framework-06400","technology-usage-embedded-framework-06500","technology-usage-embedded-framework-06600","technology-usage-embedded-framework-06700","technology-usage-embedded-framework-06800","technology-usage-embedded-framework-06900","technology-usage-embedded-framework-07000","technology-usage-embedded-framework-07100","technology-usage-embedded-framework-07200","technology-usage-embedded-framework-07300","technology-usage-embedded-framework-07400","technology-usage-embedded-framework-07500","technology-usage-embedded-framework-07600","technology-usage-embedded-framework-07700","technology-usage-embedded-framework-07800","technology-usage-embedded-framework-07900","technology-usage-embedded-framework-08000","technology-usage-embedded-framework-08100","technology-usage-embedded-framework-08200","technology-usage-embedded-framework-08300","technology-usage-embedded-framework-08400","technology-usage-embedded-framework-08500","technology-usage-embedded-framework-08600","technology-usage-embedded-framework-08700","technology-usage-embedded-framework-08800","technology-usage-embedded-framework-08900","technology-usage-embedded-framework-09000","technology-usage-embedded-framework-09100","technology-usage-integration-00001","technology-usage-integration-00002","technology-usage-integration-00003","technology-usage-integration-00004","technology-usage-integration-00005","technology-usage-integration-00006","technology-usage-integration-00007","technology-usage-integration-00008","technology-usage-integration-00009","technology-usage-integration-00010","technology-usage-integration-00011","technology-usage-integration-00012","technology-usage-integration-00013","technology-usage-integration-00014","technology-usage-integration-00015","technology-usage-jta-00020","technology-usage-jta-00030","technology-usage-jta-00040","technology-usage-jta-00050","technology-usage-jta-00060","technology-usage-jta-00070","technology-usage-jta-00080","technology-usage-jta-00090","technology-usage-jta-00100","technology-usage-jta-00110","technology-usage-jta-00120","technology-usage-jta-00130","technology-usage-jta-00140","technology-usage-jta-00150","technology-usage-jta-00160","technology-usage-jta-00170","technology-usage-jta-00180","technology-usage-jta-00190","technology-usage-jta-00200","technology-usage-jta-00210","technology-usage-logging-00010","technology-usage-logging-000100","technology-usage-logging-000110","technology-usage-logging-000120","technology-usage-logging-000130","technology-usage-logging-000140","technology-usage-logging-000150","technology-usage-logging-000160","technology-usage-logging-000170","technology-usage-logging-000180","technology-usage-logging-000190","technology-usage-logging-00020","technology-usage-logging-000200","technology-usage-logging-000210","technology-usage-logging-000220","technology-usage-logging-000230","technology-usage-logging-000240","technology-usage-logging-000250","technology-usage-logging-000260","technology-usage-logging-000270","technology-usage-logging-000280","technology-usage-logging-000290","technology-usage-logging-00030","technology-usage-logging-00040","technology-usage-logging-00050","technology-usage-logging-00060","technology-usage-logging-00070","technology-usage-logging-00080","technology-usage-logging-00090","technology-usage-markup-01300","technology-usage-mvc-01000","technology-usage-mvc-01100","technology-usage-mvc-01200","technology-usage-mvc-01300","technology-usage-mvc-01400","technology-usage-mvc-01500","technology-usage-mvc-01600","technology-usage-mvc-01700","technology-usage-mvc-01800","technology-usage-mvc-01900","technology-usage-mvc-02000","technology-usage-mvc-02100","technology-usage-mvc-02200","technology-usage-mvc-02300","technology-usage-mvc-02400","technology-usage-mvc-02500","technology-usage-mvc-02600","technology-usage-mvc-02700","technology-usage-mvc-02800","technology-usage-mvc-02900","technology-usage-mvc-03000","technology-usage-mvc-03100","technology-usage-mvc-03200","technology-usage-mvc-03300","technology-usage-mvc-03400","technology-usage-mvc-03500","technology-usage-mvc-03600","technology-usage-mvc-03700","technology-usage-mvc-03800","technology-usage-mvc-03900","technology-usage-mvc-04000","technology-usage-mvc-04100","technology-usage-mvc-04300","technology-usage-mvc-04400","technology-usage-mvc-04500","technology-usage-mvc-04600","technology-usage-mvc-04700","technology-usage-mvc-04800","technology-usage-mvc-04900","technology-usage-mvc-05000","technology-usage-mvc-05100","technology-usage-mvc-05200","technology-usage-mvc-05300","technology-usage-mvc-05400","technology-usage-mvc-05500","technology-usage-mvc-05600","technology-usage-mvc-05700","technology-usage-mvc-05800","technology-usage-mvc-05900","technology-usage-mvc-06000","technology-usage-mvc-0x4200","technology-usage-security-01000","technology-usage-security-01100","technology-usage-security-01200","technology-usage-security-01300","technology-usage-security-01400","technology-usage-security-01500","technology-usage-security-01600","technology-usage-security-01700","technology-usage-security-01800","technology-usage-security-01900","technology-usage-security-02000","technology-usage-security-02100","technology-usage-security-02200","technology-usage-security-02300","technology-usage-security-02400","technology-usage-security-02500","technology-usage-security-02600","technology-usage-security-02700","technology-usage-security-02800","technology-usage-security-02900","technology-usage-security-03000","technology-usage-security-03100","technology-usage-security-03200","technology-usage-security-03300","technology-usage-security-03400","technology-usage-security-03500","technology-usage-test-frameworks-00010","technology-usage-test-frameworks-00020","technology-usage-test-frameworks-00030","technology-usage-test-frameworks-00040","technology-usage-test-frameworks-00050","technology-usage-test-frameworks-00060","technology-usage-test-frameworks-00070","technology-usage-test-frameworks-00080","technology-usage-test-frameworks-00090","technology-usage-test-frameworks-00100","technology-usage-test-frameworks-00110","technology-usage-test-frameworks-00120","technology-usage-test-frameworks-00130","technology-usage-test-frameworks-00140","technology-usage-test-frameworks-00150","technology-usage-test-frameworks-00160","technology-usage-test-frameworks-00170","technology-usage-test-frameworks-00180","technology-usage-test-frameworks-00190","technology-usage-test-frameworks-00200","technology-usage-test-frameworks-00210","technology-usage-test-frameworks-00220","technology-usage-test-frameworks-00230","technology-usage-test-frameworks-00240","technology-usage-test-frameworks-00250","technology-usage-test-frameworks-00260","technology-usage-test-frameworks-00270","technology-usage-test-frameworks-00280","technology-usage-test-frameworks-00290","technology-usage-test-frameworks-00300","technology-usage-test-frameworks-00310","technology-usage-test-frameworks-00320","technology-usage-test-frameworks-00330","technology-usage-test-frameworks-00340","technology-usage-test-frameworks-00350","technology-usage-test-frameworks-00360","technology-usage-test-frameworks-00370","technology-usage-web-01000","technology-usage-web-01100","technology-usage-web-01300","technology-usage-web-01400","technology-usage-web-01500","technology-usage-web-01600","technology-usage-web-01700","technology-usage-web-01800","technology-usage-web-01900","technology-usage-web-02000","technology-usage-web-02100","technology-usage-web-02200","technology-usage-web-02300","technology-usage-web-02400","test-frameworks-sauge-00010","test-frameworks-sauge-00010","test-frameworks-sauge-00020","test-frameworks-sauge-00020","test-frameworks-sauge-00030","test-frameworks-sauge-00030","test-frameworks-sauge-00040","test-frameworks-sauge-00040","test-frameworks-sauge-00050","test-frameworks-sauge-00050","test-frameworks-sauge-00060","test-frameworks-sauge-00060","test-frameworks-sauge-00070","test-frameworks-sauge-00070","test-frameworks-sauge-00080","test-frameworks-sauge-00080","test-frameworks-sauge-00090","test-frameworks-sauge-00090","test-frameworks-sauge-00100","test-frameworks-sauge-00100","test-frameworks-sauge-00110","test-frameworks-sauge-00110","test-frameworks-sauge-00120","test-frameworks-sauge-00120","test-frameworks-sauge-00130","test-frameworks-sauge-00130","test-frameworks-sauge-00140","test-frameworks-sauge-00140","test-frameworks-sauge-00150","test-frameworks-sauge-00150","test-frameworks-sauge-00160","test-frameworks-sauge-00160","test-frameworks-sauge-00170","test-frameworks-sauge-00170","test-frameworks-sauge-00180","test-frameworks-sauge-00180","test-frameworks-sauge-00190","test-frameworks-sauge-00190","test-frameworks-sauge-00200","test-frameworks-sauge-00200","test-frameworks-sauge-00210","test-frameworks-sauge-00210","test-frameworks-sauge-00220","test-frameworks-sauge-00220","test-frameworks-sauge-00230","test-frameworks-sauge-00230","test-frameworks-sauge-00240","test-frameworks-sauge-00240","test-frameworks-sauge-00260","test-frameworks-sauge-00260","test-frameworks-sauge-00270","test-frameworks-sauge-00270","test-frameworks-sauge-00280","test-frameworks-sauge-00280","test-frameworks-sauge-00290","test-frameworks-sauge-00290","test-frameworks-sauge-00300","test-frameworks-sauge-00300","test-frameworks-sauge-00310","test-frameworks-sauge-00310","test-frameworks-sauge-00320","test-frameworks-sauge-00320","test-frameworks-sauge-00330","test-frameworks-sauge-00330","test-frameworks-sauge-00340","test-frameworks-sauge-00340","test-frameworks-sauge-00350","test-frameworks-sauge-00350","test-frameworks-sauge-00360","test-frameworks-sauge-00360","test-frameworks-sauge-00370","test-frameworks-sauge-00370","test-frameworks-sauge-00560","test-frameworks-sauge-00560"]}],"depItems":[{"fileURI":"file:///opt/input/source/pom.xml","provider":"java","dependencies":[{"name":"jakarta.enterprise.jakarta.enterprise.cdi-api","version":"2.0.2.redhat-00002","type":"provided","resolvedIdentifier":"308fcbb4bb61d33dadd8a2b54f4cd8dbe6bc40fb","extras":{"artifactId":"jakarta.enterprise.cdi-api","groupId":"jakarta.enterprise","pomPath":"/opt/input/source/pom.xml"},"labels":["konveyor.io/dep-source=open-source","konveyor.io/language=java"],"prefix":"file:///root/.m2/repository/jakarta/enterprise/jakarta.enterprise.cdi-api/2.0.2.redhat-00002"},{"name":"jakarta.inject.jakarta.inject-api","version":"1.0.3.redhat-00001","type":"provided","indirect":true,"resolvedIdentifier":"47be642e3a3af281c2b39d0ec49a8039d0561053","extras":{"artifactId":"jakarta.inject-api","groupId":"jakarta.inject","pomPath":"/opt/input/source/pom.xml"},"labels":["konveyor.io/dep-source=open-source","konveyor.io/language=java"],"prefix":"file:///root/.m2/repository/jakarta/inject/jakarta.inject-api/1.0.3.redhat-00001"},{"name":"org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec","version":"2.0.1.Final-redhat-00001","type":"provided","resolvedIdentifier":"ad741f5331d6810ec18a69f66b526350d691c454","extras":{"artifactId":"jboss-annotations-api_1.3_spec","groupId":"org.jboss.spec.javax.annotation","pomPath":"/opt/input/source/pom.xml"},"labels":["konveyor.io/dep-source=open-source","konveyor.io/language=java"],"prefix":"file:///root/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.3_spec/2.0.1.Final-redhat-00001"},{"name":"org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec","version":"2.0.0.Final-redhat-00001","type":"provided","resolvedIdentifier":"25a07f6002c5458c485de79c363fc5b5d4295e1c","extras":{"artifactId":"jboss-ejb-api_3.2_spec","groupId":"org.jboss.spec.javax.ejb","pomPath":"/opt/input/source/pom.xml"},"labels":["konveyor.io/dep-source=open-source","konveyor.io/language=java"],"prefix":"file:///root/.m2/repository/org/jboss/spec/javax/ejb/jboss-ejb-api_3.2_spec/2.0.0.Final-redhat-00001"},{"name":"org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec","version":"2.0.0.Final-redhat-00001","type":"provided","resolvedIdentifier":"b0f5615181155e161ceb1f3ae190affd398b1159","extras":{"artifactId":"jboss-jms-api_2.0_spec","groupId":"org.jboss.spec.javax.jms","pomPath":"/opt/input/source/pom.xml"},"labels":["konveyor.io/dep-source=open-source","konveyor.io/language=java"],"prefix":"file:///root/.m2/repository/org/jboss/spec/javax/jms/jboss-jms-api_2.0_spec/2.0.0.Final-redhat-00001"},{"name":"org.jboss.spec.javax.servlet.jboss-servlet-api_4.0_spec","version":"2.0.0.Final-redhat-00001","type":"provided","resolvedIdentifier":"5c2cd61ddb670f128661a8bd31aaac8231e4815d","extras":{"artifactId":"jboss-servlet-api_4.0_spec","groupId":"org.jboss.spec.javax.servlet","pomPath":"/opt/input/source/pom.xml"},"labels":["konveyor.io/dep-source=open-source","konveyor.io/language=java"],"prefix":"file:///root/.m2/repository/org/jboss/spec/javax/servlet/jboss-servlet-api_4.0_spec/2.0.0.Final-redhat-00001"},{"name":"org.jboss.spec.javax.transaction.jboss-transaction-api_1.3_spec","version":"2.0.0.Final-redhat-00005","type":"provided","indirect":true,"resolvedIdentifier":"b236a1099ec7cc6cbdb04e10af80f75a085652e9","extras":{"artifactId":"jboss-transaction-api_1.3_spec","groupId":"org.jboss.spec.javax.transaction","pomPath":"/opt/input/source/pom.xml"},"labels":["konveyor.io/dep-source=open-source","konveyor.io/language=java"],"prefix":"file:///root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.3_spec/2.0.0.Final-redhat-00005"}]}]}]
