
 1  package com.redhat.coolstore.service;
 2  
 3  import java.util.List;
 4  import java.util.logging.Logger;
 5  
 6  import javax.inject.Inject;
 7  
 8  import javax.persistence.criteria.CriteriaBuilder;
 9  import javax.persistence.criteria.CriteriaQuery;
10  import javax.persistence.criteria.Root;
11  
-12  import javax.ejb.Stateless;
+12  import javax.enterprise.context.ApplicationScoped;
13  import javax.persistence.EntityManager;
14  import javax.persistence.PersistenceContext;
15  
16  import com.redhat.coolstore.model.*;
  
-18  @Stateless
+18  @ApplicationScoped
19  public class CatalogService {
  
20      @Inject
21      Logger log;
22  
23      @PersistenceContext
24      private EntityManager em;
  
25      public CatalogService() {
26      }
  
27      public List<CatalogItemEntity> getCatalogItems() {
28          CriteriaBuilder cb = em.getCriteriaBuilder();
29          CriteriaQuery<CatalogItemEntity> criteria = cb.createQuery(CatalogItemEntity.class);
30          Root<CatalogItemEntity> member = criteria.from(CatalogItemEntity.class);
31          criteria.select(member);
32          return em.createQuery(criteria).getResultList();
33      }
  
34      public CatalogItemEntity getCatalogItemById(String itemId) {
35          return em.find(CatalogItemEntity.class, itemId);
36      }
  
37      public void updateInventoryItems(String itemId, int deducts) {
38          InventoryEntity inventoryEntity = getCatalogItemById(itemId).getInventory();
39          int currentQuantity = inventoryEntity.getQuantity();
40          inventoryEntity.setQuantity(currentQuantity-deducts);
41          em.merge(inventoryEntity);
42      }
43  
44  }
