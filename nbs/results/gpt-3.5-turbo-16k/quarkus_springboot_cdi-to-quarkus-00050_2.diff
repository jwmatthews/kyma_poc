
 1  package com.redhat.coolstore.service;
 2  
 3  import java.util.List;
 4  import java.util.logging.Logger;
 5  
 6  import javax.inject.Inject;
 7  
 8  import javax.persistence.criteria.CriteriaBuilder;
 9  import javax.persistence.criteria.CriteriaQuery;
10  import javax.persistence.criteria.Root;
11  
12- import javax.ejb.Stateless;
13  import javax.persistence.EntityManager;
14  import javax.persistence.PersistenceContext;
15  
16  import com.redhat.coolstore.model.*;
17  
18+ import jakarta.enterprise.context.ApplicationScoped;
19  
20- @Stateless
+ @ApplicationScoped
21  public class CatalogService {
22  
23      @Inject
24      Logger log;
25  
26      @PersistenceContext
27      private EntityManager em;
28  
29      public CatalogService() {
30      }
31  
32      public List<CatalogItemEntity> getCatalogItems() {
33          CriteriaBuilder cb = em.getCriteriaBuilder();
34          CriteriaQuery<CatalogItemEntity> criteria = cb.createQuery(CatalogItemEntity.class);
35          Root<CatalogItemEntity> member = criteria.from(CatalogItemEntity.class);
36          criteria.select(member);
37          return em.createQuery(criteria).getResultList();
38      }
39  
40      public CatalogItemEntity getCatalogItemById(String itemId) {
41          return em.find(CatalogItemEntity.class, itemId);
42      }
43  
44      public void updateInventoryItems(String itemId, int deducts) {
45          InventoryEntity inventoryEntity = getCatalogItemById(itemId).getInventory();
46          int currentQuantity = inventoryEntity.getQuantity();
47          inventoryEntity.setQuantity(currentQuantity-deducts);
48          em.merge(inventoryEntity);
49      }
50  
51  }
