# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_scm_git_diff.ipynb.

# %% auto 0
__all__ = ['GitDiff']

# %% ../nbs/02_scm_git_diff.ipynb 12
from git import BadName, Repo

class GitDiff:
    def __init__(self, repo_path):
        self.repo_path = repo_path
        self.repo = Repo(self.repo_path) 

    def get_patch(self, start_commit_id, end_commit_id="HEAD"):
        # If either commit_id is not valid, this will raise a BadName exception
        start_commit = self.repo.commit(start_commit_id)
        end_commit = self.repo.commit(end_commit_id)
        return start_commit.diff(end_commit_id, create_patch=True) 
        
    def get_patch_for_file(self, start_commit_id, end_commit_id, file_path):
        diff_indexes = self.get_patch(start_commit_id, end_commit_id)
        # We need to search through the indexes to find the diff for our file_path
        patch = None
        for diff in diff_indexes:
            print(f"'{file_path}' '{diff.a_path}' '{diff.b_path}' ")
            if diff.a_path == file_path or diff.b_path == file_path:
                print("Found match")
                patch = diff.diff
                break
        return patch

